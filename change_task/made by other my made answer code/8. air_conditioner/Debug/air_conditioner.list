
air_conditioner.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004b5c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006e4  08004c1c  08004c1c  00014c1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005300  08005300  00020200  2**0
                  CONTENTS
  4 .ARM          00000008  08005300  08005300  00015300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005308  08005308  00020200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005308  08005308  00015308  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800530c  0800530c  0001530c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000200  20000000  08005310  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001d0  20000200  08005510  00020200  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003d0  08005510  000203d0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 12 .debug_info   00017a3e  00000000  00000000  00020228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002b4e  00000000  00000000  00037c66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000f240  00000000  00000000  0003a7b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000c58  00000000  00000000  000499f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000014a8  00000000  00000000  0004a650  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002735  00000000  00000000  0004baf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00018c28  00000000  00000000  0004e22d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0007f73e  00000000  00000000  00066e55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000e6593  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002d00  00000000  00000000  000e65e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000200 	.word	0x20000200
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08004c04 	.word	0x08004c04

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000204 	.word	0x20000204
 8000104:	08004c04 	.word	0x08004c04

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f806 	bl	8000254 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__aeabi_idiv0>:
 8000254:	4770      	bx	lr
 8000256:	46c0      	nop			; (mov r8, r8)

08000258 <__aeabi_uldivmod>:
 8000258:	2b00      	cmp	r3, #0
 800025a:	d111      	bne.n	8000280 <__aeabi_uldivmod+0x28>
 800025c:	2a00      	cmp	r2, #0
 800025e:	d10f      	bne.n	8000280 <__aeabi_uldivmod+0x28>
 8000260:	2900      	cmp	r1, #0
 8000262:	d100      	bne.n	8000266 <__aeabi_uldivmod+0xe>
 8000264:	2800      	cmp	r0, #0
 8000266:	d002      	beq.n	800026e <__aeabi_uldivmod+0x16>
 8000268:	2100      	movs	r1, #0
 800026a:	43c9      	mvns	r1, r1
 800026c:	0008      	movs	r0, r1
 800026e:	b407      	push	{r0, r1, r2}
 8000270:	4802      	ldr	r0, [pc, #8]	; (800027c <__aeabi_uldivmod+0x24>)
 8000272:	a102      	add	r1, pc, #8	; (adr r1, 800027c <__aeabi_uldivmod+0x24>)
 8000274:	1840      	adds	r0, r0, r1
 8000276:	9002      	str	r0, [sp, #8]
 8000278:	bd03      	pop	{r0, r1, pc}
 800027a:	46c0      	nop			; (mov r8, r8)
 800027c:	ffffffd9 	.word	0xffffffd9
 8000280:	b403      	push	{r0, r1}
 8000282:	4668      	mov	r0, sp
 8000284:	b501      	push	{r0, lr}
 8000286:	9802      	ldr	r0, [sp, #8]
 8000288:	f000 f84c 	bl	8000324 <__udivmoddi4>
 800028c:	9b01      	ldr	r3, [sp, #4]
 800028e:	469e      	mov	lr, r3
 8000290:	b002      	add	sp, #8
 8000292:	bc0c      	pop	{r2, r3}
 8000294:	4770      	bx	lr
 8000296:	46c0      	nop			; (mov r8, r8)

08000298 <__aeabi_lmul>:
 8000298:	b5f0      	push	{r4, r5, r6, r7, lr}
 800029a:	46ce      	mov	lr, r9
 800029c:	4647      	mov	r7, r8
 800029e:	b580      	push	{r7, lr}
 80002a0:	0007      	movs	r7, r0
 80002a2:	4699      	mov	r9, r3
 80002a4:	0c3b      	lsrs	r3, r7, #16
 80002a6:	469c      	mov	ip, r3
 80002a8:	0413      	lsls	r3, r2, #16
 80002aa:	0c1b      	lsrs	r3, r3, #16
 80002ac:	001d      	movs	r5, r3
 80002ae:	000e      	movs	r6, r1
 80002b0:	4661      	mov	r1, ip
 80002b2:	0400      	lsls	r0, r0, #16
 80002b4:	0c14      	lsrs	r4, r2, #16
 80002b6:	0c00      	lsrs	r0, r0, #16
 80002b8:	4345      	muls	r5, r0
 80002ba:	434b      	muls	r3, r1
 80002bc:	4360      	muls	r0, r4
 80002be:	4361      	muls	r1, r4
 80002c0:	18c0      	adds	r0, r0, r3
 80002c2:	0c2c      	lsrs	r4, r5, #16
 80002c4:	1820      	adds	r0, r4, r0
 80002c6:	468c      	mov	ip, r1
 80002c8:	4283      	cmp	r3, r0
 80002ca:	d903      	bls.n	80002d4 <__aeabi_lmul+0x3c>
 80002cc:	2380      	movs	r3, #128	; 0x80
 80002ce:	025b      	lsls	r3, r3, #9
 80002d0:	4698      	mov	r8, r3
 80002d2:	44c4      	add	ip, r8
 80002d4:	4649      	mov	r1, r9
 80002d6:	4379      	muls	r1, r7
 80002d8:	4372      	muls	r2, r6
 80002da:	0c03      	lsrs	r3, r0, #16
 80002dc:	4463      	add	r3, ip
 80002de:	042d      	lsls	r5, r5, #16
 80002e0:	0c2d      	lsrs	r5, r5, #16
 80002e2:	18c9      	adds	r1, r1, r3
 80002e4:	0400      	lsls	r0, r0, #16
 80002e6:	1940      	adds	r0, r0, r5
 80002e8:	1889      	adds	r1, r1, r2
 80002ea:	bcc0      	pop	{r6, r7}
 80002ec:	46b9      	mov	r9, r7
 80002ee:	46b0      	mov	r8, r6
 80002f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80002f2:	46c0      	nop			; (mov r8, r8)

080002f4 <__aeabi_f2uiz>:
 80002f4:	219e      	movs	r1, #158	; 0x9e
 80002f6:	b510      	push	{r4, lr}
 80002f8:	05c9      	lsls	r1, r1, #23
 80002fa:	1c04      	adds	r4, r0, #0
 80002fc:	f000 fd5c 	bl	8000db8 <__aeabi_fcmpge>
 8000300:	2800      	cmp	r0, #0
 8000302:	d103      	bne.n	800030c <__aeabi_f2uiz+0x18>
 8000304:	1c20      	adds	r0, r4, #0
 8000306:	f000 fcc5 	bl	8000c94 <__aeabi_f2iz>
 800030a:	bd10      	pop	{r4, pc}
 800030c:	219e      	movs	r1, #158	; 0x9e
 800030e:	1c20      	adds	r0, r4, #0
 8000310:	05c9      	lsls	r1, r1, #23
 8000312:	f000 fb11 	bl	8000938 <__aeabi_fsub>
 8000316:	f000 fcbd 	bl	8000c94 <__aeabi_f2iz>
 800031a:	2380      	movs	r3, #128	; 0x80
 800031c:	061b      	lsls	r3, r3, #24
 800031e:	469c      	mov	ip, r3
 8000320:	4460      	add	r0, ip
 8000322:	e7f2      	b.n	800030a <__aeabi_f2uiz+0x16>

08000324 <__udivmoddi4>:
 8000324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000326:	4657      	mov	r7, sl
 8000328:	464e      	mov	r6, r9
 800032a:	4645      	mov	r5, r8
 800032c:	46de      	mov	lr, fp
 800032e:	b5e0      	push	{r5, r6, r7, lr}
 8000330:	0004      	movs	r4, r0
 8000332:	000d      	movs	r5, r1
 8000334:	4692      	mov	sl, r2
 8000336:	4699      	mov	r9, r3
 8000338:	b083      	sub	sp, #12
 800033a:	428b      	cmp	r3, r1
 800033c:	d830      	bhi.n	80003a0 <__udivmoddi4+0x7c>
 800033e:	d02d      	beq.n	800039c <__udivmoddi4+0x78>
 8000340:	4649      	mov	r1, r9
 8000342:	4650      	mov	r0, sl
 8000344:	f000 fd60 	bl	8000e08 <__clzdi2>
 8000348:	0029      	movs	r1, r5
 800034a:	0006      	movs	r6, r0
 800034c:	0020      	movs	r0, r4
 800034e:	f000 fd5b 	bl	8000e08 <__clzdi2>
 8000352:	1a33      	subs	r3, r6, r0
 8000354:	4698      	mov	r8, r3
 8000356:	3b20      	subs	r3, #32
 8000358:	469b      	mov	fp, r3
 800035a:	d433      	bmi.n	80003c4 <__udivmoddi4+0xa0>
 800035c:	465a      	mov	r2, fp
 800035e:	4653      	mov	r3, sl
 8000360:	4093      	lsls	r3, r2
 8000362:	4642      	mov	r2, r8
 8000364:	001f      	movs	r7, r3
 8000366:	4653      	mov	r3, sl
 8000368:	4093      	lsls	r3, r2
 800036a:	001e      	movs	r6, r3
 800036c:	42af      	cmp	r7, r5
 800036e:	d83a      	bhi.n	80003e6 <__udivmoddi4+0xc2>
 8000370:	42af      	cmp	r7, r5
 8000372:	d100      	bne.n	8000376 <__udivmoddi4+0x52>
 8000374:	e078      	b.n	8000468 <__udivmoddi4+0x144>
 8000376:	465b      	mov	r3, fp
 8000378:	1ba4      	subs	r4, r4, r6
 800037a:	41bd      	sbcs	r5, r7
 800037c:	2b00      	cmp	r3, #0
 800037e:	da00      	bge.n	8000382 <__udivmoddi4+0x5e>
 8000380:	e075      	b.n	800046e <__udivmoddi4+0x14a>
 8000382:	2200      	movs	r2, #0
 8000384:	2300      	movs	r3, #0
 8000386:	9200      	str	r2, [sp, #0]
 8000388:	9301      	str	r3, [sp, #4]
 800038a:	2301      	movs	r3, #1
 800038c:	465a      	mov	r2, fp
 800038e:	4093      	lsls	r3, r2
 8000390:	9301      	str	r3, [sp, #4]
 8000392:	2301      	movs	r3, #1
 8000394:	4642      	mov	r2, r8
 8000396:	4093      	lsls	r3, r2
 8000398:	9300      	str	r3, [sp, #0]
 800039a:	e028      	b.n	80003ee <__udivmoddi4+0xca>
 800039c:	4282      	cmp	r2, r0
 800039e:	d9cf      	bls.n	8000340 <__udivmoddi4+0x1c>
 80003a0:	2200      	movs	r2, #0
 80003a2:	2300      	movs	r3, #0
 80003a4:	9200      	str	r2, [sp, #0]
 80003a6:	9301      	str	r3, [sp, #4]
 80003a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	d001      	beq.n	80003b2 <__udivmoddi4+0x8e>
 80003ae:	601c      	str	r4, [r3, #0]
 80003b0:	605d      	str	r5, [r3, #4]
 80003b2:	9800      	ldr	r0, [sp, #0]
 80003b4:	9901      	ldr	r1, [sp, #4]
 80003b6:	b003      	add	sp, #12
 80003b8:	bcf0      	pop	{r4, r5, r6, r7}
 80003ba:	46bb      	mov	fp, r7
 80003bc:	46b2      	mov	sl, r6
 80003be:	46a9      	mov	r9, r5
 80003c0:	46a0      	mov	r8, r4
 80003c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80003c4:	4642      	mov	r2, r8
 80003c6:	2320      	movs	r3, #32
 80003c8:	1a9b      	subs	r3, r3, r2
 80003ca:	4652      	mov	r2, sl
 80003cc:	40da      	lsrs	r2, r3
 80003ce:	4641      	mov	r1, r8
 80003d0:	0013      	movs	r3, r2
 80003d2:	464a      	mov	r2, r9
 80003d4:	408a      	lsls	r2, r1
 80003d6:	0017      	movs	r7, r2
 80003d8:	4642      	mov	r2, r8
 80003da:	431f      	orrs	r7, r3
 80003dc:	4653      	mov	r3, sl
 80003de:	4093      	lsls	r3, r2
 80003e0:	001e      	movs	r6, r3
 80003e2:	42af      	cmp	r7, r5
 80003e4:	d9c4      	bls.n	8000370 <__udivmoddi4+0x4c>
 80003e6:	2200      	movs	r2, #0
 80003e8:	2300      	movs	r3, #0
 80003ea:	9200      	str	r2, [sp, #0]
 80003ec:	9301      	str	r3, [sp, #4]
 80003ee:	4643      	mov	r3, r8
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d0d9      	beq.n	80003a8 <__udivmoddi4+0x84>
 80003f4:	07fb      	lsls	r3, r7, #31
 80003f6:	0872      	lsrs	r2, r6, #1
 80003f8:	431a      	orrs	r2, r3
 80003fa:	4646      	mov	r6, r8
 80003fc:	087b      	lsrs	r3, r7, #1
 80003fe:	e00e      	b.n	800041e <__udivmoddi4+0xfa>
 8000400:	42ab      	cmp	r3, r5
 8000402:	d101      	bne.n	8000408 <__udivmoddi4+0xe4>
 8000404:	42a2      	cmp	r2, r4
 8000406:	d80c      	bhi.n	8000422 <__udivmoddi4+0xfe>
 8000408:	1aa4      	subs	r4, r4, r2
 800040a:	419d      	sbcs	r5, r3
 800040c:	2001      	movs	r0, #1
 800040e:	1924      	adds	r4, r4, r4
 8000410:	416d      	adcs	r5, r5
 8000412:	2100      	movs	r1, #0
 8000414:	3e01      	subs	r6, #1
 8000416:	1824      	adds	r4, r4, r0
 8000418:	414d      	adcs	r5, r1
 800041a:	2e00      	cmp	r6, #0
 800041c:	d006      	beq.n	800042c <__udivmoddi4+0x108>
 800041e:	42ab      	cmp	r3, r5
 8000420:	d9ee      	bls.n	8000400 <__udivmoddi4+0xdc>
 8000422:	3e01      	subs	r6, #1
 8000424:	1924      	adds	r4, r4, r4
 8000426:	416d      	adcs	r5, r5
 8000428:	2e00      	cmp	r6, #0
 800042a:	d1f8      	bne.n	800041e <__udivmoddi4+0xfa>
 800042c:	9800      	ldr	r0, [sp, #0]
 800042e:	9901      	ldr	r1, [sp, #4]
 8000430:	465b      	mov	r3, fp
 8000432:	1900      	adds	r0, r0, r4
 8000434:	4169      	adcs	r1, r5
 8000436:	2b00      	cmp	r3, #0
 8000438:	db24      	blt.n	8000484 <__udivmoddi4+0x160>
 800043a:	002b      	movs	r3, r5
 800043c:	465a      	mov	r2, fp
 800043e:	4644      	mov	r4, r8
 8000440:	40d3      	lsrs	r3, r2
 8000442:	002a      	movs	r2, r5
 8000444:	40e2      	lsrs	r2, r4
 8000446:	001c      	movs	r4, r3
 8000448:	465b      	mov	r3, fp
 800044a:	0015      	movs	r5, r2
 800044c:	2b00      	cmp	r3, #0
 800044e:	db2a      	blt.n	80004a6 <__udivmoddi4+0x182>
 8000450:	0026      	movs	r6, r4
 8000452:	409e      	lsls	r6, r3
 8000454:	0033      	movs	r3, r6
 8000456:	0026      	movs	r6, r4
 8000458:	4647      	mov	r7, r8
 800045a:	40be      	lsls	r6, r7
 800045c:	0032      	movs	r2, r6
 800045e:	1a80      	subs	r0, r0, r2
 8000460:	4199      	sbcs	r1, r3
 8000462:	9000      	str	r0, [sp, #0]
 8000464:	9101      	str	r1, [sp, #4]
 8000466:	e79f      	b.n	80003a8 <__udivmoddi4+0x84>
 8000468:	42a3      	cmp	r3, r4
 800046a:	d8bc      	bhi.n	80003e6 <__udivmoddi4+0xc2>
 800046c:	e783      	b.n	8000376 <__udivmoddi4+0x52>
 800046e:	4642      	mov	r2, r8
 8000470:	2320      	movs	r3, #32
 8000472:	2100      	movs	r1, #0
 8000474:	1a9b      	subs	r3, r3, r2
 8000476:	2200      	movs	r2, #0
 8000478:	9100      	str	r1, [sp, #0]
 800047a:	9201      	str	r2, [sp, #4]
 800047c:	2201      	movs	r2, #1
 800047e:	40da      	lsrs	r2, r3
 8000480:	9201      	str	r2, [sp, #4]
 8000482:	e786      	b.n	8000392 <__udivmoddi4+0x6e>
 8000484:	4642      	mov	r2, r8
 8000486:	2320      	movs	r3, #32
 8000488:	1a9b      	subs	r3, r3, r2
 800048a:	002a      	movs	r2, r5
 800048c:	4646      	mov	r6, r8
 800048e:	409a      	lsls	r2, r3
 8000490:	0023      	movs	r3, r4
 8000492:	40f3      	lsrs	r3, r6
 8000494:	4644      	mov	r4, r8
 8000496:	4313      	orrs	r3, r2
 8000498:	002a      	movs	r2, r5
 800049a:	40e2      	lsrs	r2, r4
 800049c:	001c      	movs	r4, r3
 800049e:	465b      	mov	r3, fp
 80004a0:	0015      	movs	r5, r2
 80004a2:	2b00      	cmp	r3, #0
 80004a4:	dad4      	bge.n	8000450 <__udivmoddi4+0x12c>
 80004a6:	4642      	mov	r2, r8
 80004a8:	002f      	movs	r7, r5
 80004aa:	2320      	movs	r3, #32
 80004ac:	0026      	movs	r6, r4
 80004ae:	4097      	lsls	r7, r2
 80004b0:	1a9b      	subs	r3, r3, r2
 80004b2:	40de      	lsrs	r6, r3
 80004b4:	003b      	movs	r3, r7
 80004b6:	4333      	orrs	r3, r6
 80004b8:	e7cd      	b.n	8000456 <__udivmoddi4+0x132>
 80004ba:	46c0      	nop			; (mov r8, r8)

080004bc <__aeabi_fdiv>:
 80004bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004be:	464f      	mov	r7, r9
 80004c0:	4646      	mov	r6, r8
 80004c2:	46d6      	mov	lr, sl
 80004c4:	0245      	lsls	r5, r0, #9
 80004c6:	b5c0      	push	{r6, r7, lr}
 80004c8:	0047      	lsls	r7, r0, #1
 80004ca:	1c0c      	adds	r4, r1, #0
 80004cc:	0a6d      	lsrs	r5, r5, #9
 80004ce:	0e3f      	lsrs	r7, r7, #24
 80004d0:	0fc6      	lsrs	r6, r0, #31
 80004d2:	2f00      	cmp	r7, #0
 80004d4:	d100      	bne.n	80004d8 <__aeabi_fdiv+0x1c>
 80004d6:	e070      	b.n	80005ba <__aeabi_fdiv+0xfe>
 80004d8:	2fff      	cmp	r7, #255	; 0xff
 80004da:	d100      	bne.n	80004de <__aeabi_fdiv+0x22>
 80004dc:	e075      	b.n	80005ca <__aeabi_fdiv+0x10e>
 80004de:	00eb      	lsls	r3, r5, #3
 80004e0:	2580      	movs	r5, #128	; 0x80
 80004e2:	04ed      	lsls	r5, r5, #19
 80004e4:	431d      	orrs	r5, r3
 80004e6:	2300      	movs	r3, #0
 80004e8:	4699      	mov	r9, r3
 80004ea:	469a      	mov	sl, r3
 80004ec:	3f7f      	subs	r7, #127	; 0x7f
 80004ee:	0260      	lsls	r0, r4, #9
 80004f0:	0a43      	lsrs	r3, r0, #9
 80004f2:	4698      	mov	r8, r3
 80004f4:	0063      	lsls	r3, r4, #1
 80004f6:	0e1b      	lsrs	r3, r3, #24
 80004f8:	0fe4      	lsrs	r4, r4, #31
 80004fa:	2b00      	cmp	r3, #0
 80004fc:	d04e      	beq.n	800059c <__aeabi_fdiv+0xe0>
 80004fe:	2bff      	cmp	r3, #255	; 0xff
 8000500:	d046      	beq.n	8000590 <__aeabi_fdiv+0xd4>
 8000502:	4642      	mov	r2, r8
 8000504:	00d0      	lsls	r0, r2, #3
 8000506:	2280      	movs	r2, #128	; 0x80
 8000508:	04d2      	lsls	r2, r2, #19
 800050a:	4302      	orrs	r2, r0
 800050c:	4690      	mov	r8, r2
 800050e:	2200      	movs	r2, #0
 8000510:	3b7f      	subs	r3, #127	; 0x7f
 8000512:	0031      	movs	r1, r6
 8000514:	1aff      	subs	r7, r7, r3
 8000516:	464b      	mov	r3, r9
 8000518:	4061      	eors	r1, r4
 800051a:	b2c9      	uxtb	r1, r1
 800051c:	4313      	orrs	r3, r2
 800051e:	2b0f      	cmp	r3, #15
 8000520:	d900      	bls.n	8000524 <__aeabi_fdiv+0x68>
 8000522:	e0b5      	b.n	8000690 <__aeabi_fdiv+0x1d4>
 8000524:	486e      	ldr	r0, [pc, #440]	; (80006e0 <__aeabi_fdiv+0x224>)
 8000526:	009b      	lsls	r3, r3, #2
 8000528:	58c3      	ldr	r3, [r0, r3]
 800052a:	469f      	mov	pc, r3
 800052c:	2300      	movs	r3, #0
 800052e:	4698      	mov	r8, r3
 8000530:	0026      	movs	r6, r4
 8000532:	4645      	mov	r5, r8
 8000534:	4692      	mov	sl, r2
 8000536:	4653      	mov	r3, sl
 8000538:	2b02      	cmp	r3, #2
 800053a:	d100      	bne.n	800053e <__aeabi_fdiv+0x82>
 800053c:	e089      	b.n	8000652 <__aeabi_fdiv+0x196>
 800053e:	2b03      	cmp	r3, #3
 8000540:	d100      	bne.n	8000544 <__aeabi_fdiv+0x88>
 8000542:	e09e      	b.n	8000682 <__aeabi_fdiv+0x1c6>
 8000544:	2b01      	cmp	r3, #1
 8000546:	d018      	beq.n	800057a <__aeabi_fdiv+0xbe>
 8000548:	003b      	movs	r3, r7
 800054a:	337f      	adds	r3, #127	; 0x7f
 800054c:	2b00      	cmp	r3, #0
 800054e:	dd69      	ble.n	8000624 <__aeabi_fdiv+0x168>
 8000550:	076a      	lsls	r2, r5, #29
 8000552:	d004      	beq.n	800055e <__aeabi_fdiv+0xa2>
 8000554:	220f      	movs	r2, #15
 8000556:	402a      	ands	r2, r5
 8000558:	2a04      	cmp	r2, #4
 800055a:	d000      	beq.n	800055e <__aeabi_fdiv+0xa2>
 800055c:	3504      	adds	r5, #4
 800055e:	012a      	lsls	r2, r5, #4
 8000560:	d503      	bpl.n	800056a <__aeabi_fdiv+0xae>
 8000562:	4b60      	ldr	r3, [pc, #384]	; (80006e4 <__aeabi_fdiv+0x228>)
 8000564:	401d      	ands	r5, r3
 8000566:	003b      	movs	r3, r7
 8000568:	3380      	adds	r3, #128	; 0x80
 800056a:	2bfe      	cmp	r3, #254	; 0xfe
 800056c:	dd00      	ble.n	8000570 <__aeabi_fdiv+0xb4>
 800056e:	e070      	b.n	8000652 <__aeabi_fdiv+0x196>
 8000570:	01ad      	lsls	r5, r5, #6
 8000572:	0a6d      	lsrs	r5, r5, #9
 8000574:	b2d8      	uxtb	r0, r3
 8000576:	e002      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000578:	000e      	movs	r6, r1
 800057a:	2000      	movs	r0, #0
 800057c:	2500      	movs	r5, #0
 800057e:	05c0      	lsls	r0, r0, #23
 8000580:	4328      	orrs	r0, r5
 8000582:	07f6      	lsls	r6, r6, #31
 8000584:	4330      	orrs	r0, r6
 8000586:	bce0      	pop	{r5, r6, r7}
 8000588:	46ba      	mov	sl, r7
 800058a:	46b1      	mov	r9, r6
 800058c:	46a8      	mov	r8, r5
 800058e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000590:	4643      	mov	r3, r8
 8000592:	2b00      	cmp	r3, #0
 8000594:	d13f      	bne.n	8000616 <__aeabi_fdiv+0x15a>
 8000596:	2202      	movs	r2, #2
 8000598:	3fff      	subs	r7, #255	; 0xff
 800059a:	e003      	b.n	80005a4 <__aeabi_fdiv+0xe8>
 800059c:	4643      	mov	r3, r8
 800059e:	2b00      	cmp	r3, #0
 80005a0:	d12d      	bne.n	80005fe <__aeabi_fdiv+0x142>
 80005a2:	2201      	movs	r2, #1
 80005a4:	0031      	movs	r1, r6
 80005a6:	464b      	mov	r3, r9
 80005a8:	4061      	eors	r1, r4
 80005aa:	b2c9      	uxtb	r1, r1
 80005ac:	4313      	orrs	r3, r2
 80005ae:	2b0f      	cmp	r3, #15
 80005b0:	d834      	bhi.n	800061c <__aeabi_fdiv+0x160>
 80005b2:	484d      	ldr	r0, [pc, #308]	; (80006e8 <__aeabi_fdiv+0x22c>)
 80005b4:	009b      	lsls	r3, r3, #2
 80005b6:	58c3      	ldr	r3, [r0, r3]
 80005b8:	469f      	mov	pc, r3
 80005ba:	2d00      	cmp	r5, #0
 80005bc:	d113      	bne.n	80005e6 <__aeabi_fdiv+0x12a>
 80005be:	2304      	movs	r3, #4
 80005c0:	4699      	mov	r9, r3
 80005c2:	3b03      	subs	r3, #3
 80005c4:	2700      	movs	r7, #0
 80005c6:	469a      	mov	sl, r3
 80005c8:	e791      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005ca:	2d00      	cmp	r5, #0
 80005cc:	d105      	bne.n	80005da <__aeabi_fdiv+0x11e>
 80005ce:	2308      	movs	r3, #8
 80005d0:	4699      	mov	r9, r3
 80005d2:	3b06      	subs	r3, #6
 80005d4:	27ff      	movs	r7, #255	; 0xff
 80005d6:	469a      	mov	sl, r3
 80005d8:	e789      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005da:	230c      	movs	r3, #12
 80005dc:	4699      	mov	r9, r3
 80005de:	3b09      	subs	r3, #9
 80005e0:	27ff      	movs	r7, #255	; 0xff
 80005e2:	469a      	mov	sl, r3
 80005e4:	e783      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005e6:	0028      	movs	r0, r5
 80005e8:	f000 fbf0 	bl	8000dcc <__clzsi2>
 80005ec:	2776      	movs	r7, #118	; 0x76
 80005ee:	1f43      	subs	r3, r0, #5
 80005f0:	409d      	lsls	r5, r3
 80005f2:	2300      	movs	r3, #0
 80005f4:	427f      	negs	r7, r7
 80005f6:	4699      	mov	r9, r3
 80005f8:	469a      	mov	sl, r3
 80005fa:	1a3f      	subs	r7, r7, r0
 80005fc:	e777      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005fe:	4640      	mov	r0, r8
 8000600:	f000 fbe4 	bl	8000dcc <__clzsi2>
 8000604:	4642      	mov	r2, r8
 8000606:	1f43      	subs	r3, r0, #5
 8000608:	409a      	lsls	r2, r3
 800060a:	2376      	movs	r3, #118	; 0x76
 800060c:	425b      	negs	r3, r3
 800060e:	4690      	mov	r8, r2
 8000610:	1a1b      	subs	r3, r3, r0
 8000612:	2200      	movs	r2, #0
 8000614:	e77d      	b.n	8000512 <__aeabi_fdiv+0x56>
 8000616:	23ff      	movs	r3, #255	; 0xff
 8000618:	2203      	movs	r2, #3
 800061a:	e77a      	b.n	8000512 <__aeabi_fdiv+0x56>
 800061c:	000e      	movs	r6, r1
 800061e:	20ff      	movs	r0, #255	; 0xff
 8000620:	2500      	movs	r5, #0
 8000622:	e7ac      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000624:	2001      	movs	r0, #1
 8000626:	1ac0      	subs	r0, r0, r3
 8000628:	281b      	cmp	r0, #27
 800062a:	dca6      	bgt.n	800057a <__aeabi_fdiv+0xbe>
 800062c:	379e      	adds	r7, #158	; 0x9e
 800062e:	002a      	movs	r2, r5
 8000630:	40bd      	lsls	r5, r7
 8000632:	40c2      	lsrs	r2, r0
 8000634:	1e6b      	subs	r3, r5, #1
 8000636:	419d      	sbcs	r5, r3
 8000638:	4315      	orrs	r5, r2
 800063a:	076b      	lsls	r3, r5, #29
 800063c:	d004      	beq.n	8000648 <__aeabi_fdiv+0x18c>
 800063e:	230f      	movs	r3, #15
 8000640:	402b      	ands	r3, r5
 8000642:	2b04      	cmp	r3, #4
 8000644:	d000      	beq.n	8000648 <__aeabi_fdiv+0x18c>
 8000646:	3504      	adds	r5, #4
 8000648:	016b      	lsls	r3, r5, #5
 800064a:	d544      	bpl.n	80006d6 <__aeabi_fdiv+0x21a>
 800064c:	2001      	movs	r0, #1
 800064e:	2500      	movs	r5, #0
 8000650:	e795      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000652:	20ff      	movs	r0, #255	; 0xff
 8000654:	2500      	movs	r5, #0
 8000656:	e792      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000658:	2580      	movs	r5, #128	; 0x80
 800065a:	2600      	movs	r6, #0
 800065c:	20ff      	movs	r0, #255	; 0xff
 800065e:	03ed      	lsls	r5, r5, #15
 8000660:	e78d      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000662:	2300      	movs	r3, #0
 8000664:	4698      	mov	r8, r3
 8000666:	2080      	movs	r0, #128	; 0x80
 8000668:	03c0      	lsls	r0, r0, #15
 800066a:	4205      	tst	r5, r0
 800066c:	d009      	beq.n	8000682 <__aeabi_fdiv+0x1c6>
 800066e:	4643      	mov	r3, r8
 8000670:	4203      	tst	r3, r0
 8000672:	d106      	bne.n	8000682 <__aeabi_fdiv+0x1c6>
 8000674:	4645      	mov	r5, r8
 8000676:	4305      	orrs	r5, r0
 8000678:	026d      	lsls	r5, r5, #9
 800067a:	0026      	movs	r6, r4
 800067c:	20ff      	movs	r0, #255	; 0xff
 800067e:	0a6d      	lsrs	r5, r5, #9
 8000680:	e77d      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000682:	2080      	movs	r0, #128	; 0x80
 8000684:	03c0      	lsls	r0, r0, #15
 8000686:	4305      	orrs	r5, r0
 8000688:	026d      	lsls	r5, r5, #9
 800068a:	20ff      	movs	r0, #255	; 0xff
 800068c:	0a6d      	lsrs	r5, r5, #9
 800068e:	e776      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000690:	4642      	mov	r2, r8
 8000692:	016b      	lsls	r3, r5, #5
 8000694:	0150      	lsls	r0, r2, #5
 8000696:	4283      	cmp	r3, r0
 8000698:	d219      	bcs.n	80006ce <__aeabi_fdiv+0x212>
 800069a:	221b      	movs	r2, #27
 800069c:	2500      	movs	r5, #0
 800069e:	3f01      	subs	r7, #1
 80006a0:	2601      	movs	r6, #1
 80006a2:	001c      	movs	r4, r3
 80006a4:	006d      	lsls	r5, r5, #1
 80006a6:	005b      	lsls	r3, r3, #1
 80006a8:	2c00      	cmp	r4, #0
 80006aa:	db01      	blt.n	80006b0 <__aeabi_fdiv+0x1f4>
 80006ac:	4298      	cmp	r0, r3
 80006ae:	d801      	bhi.n	80006b4 <__aeabi_fdiv+0x1f8>
 80006b0:	1a1b      	subs	r3, r3, r0
 80006b2:	4335      	orrs	r5, r6
 80006b4:	3a01      	subs	r2, #1
 80006b6:	2a00      	cmp	r2, #0
 80006b8:	d1f3      	bne.n	80006a2 <__aeabi_fdiv+0x1e6>
 80006ba:	1e5a      	subs	r2, r3, #1
 80006bc:	4193      	sbcs	r3, r2
 80006be:	431d      	orrs	r5, r3
 80006c0:	003b      	movs	r3, r7
 80006c2:	337f      	adds	r3, #127	; 0x7f
 80006c4:	000e      	movs	r6, r1
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	dd00      	ble.n	80006cc <__aeabi_fdiv+0x210>
 80006ca:	e741      	b.n	8000550 <__aeabi_fdiv+0x94>
 80006cc:	e7aa      	b.n	8000624 <__aeabi_fdiv+0x168>
 80006ce:	221a      	movs	r2, #26
 80006d0:	2501      	movs	r5, #1
 80006d2:	1a1b      	subs	r3, r3, r0
 80006d4:	e7e4      	b.n	80006a0 <__aeabi_fdiv+0x1e4>
 80006d6:	01ad      	lsls	r5, r5, #6
 80006d8:	2000      	movs	r0, #0
 80006da:	0a6d      	lsrs	r5, r5, #9
 80006dc:	e74f      	b.n	800057e <__aeabi_fdiv+0xc2>
 80006de:	46c0      	nop			; (mov r8, r8)
 80006e0:	08004c30 	.word	0x08004c30
 80006e4:	f7ffffff 	.word	0xf7ffffff
 80006e8:	08004c70 	.word	0x08004c70

080006ec <__aeabi_fmul>:
 80006ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006ee:	464f      	mov	r7, r9
 80006f0:	4646      	mov	r6, r8
 80006f2:	46d6      	mov	lr, sl
 80006f4:	0244      	lsls	r4, r0, #9
 80006f6:	0045      	lsls	r5, r0, #1
 80006f8:	b5c0      	push	{r6, r7, lr}
 80006fa:	0a64      	lsrs	r4, r4, #9
 80006fc:	1c0f      	adds	r7, r1, #0
 80006fe:	0e2d      	lsrs	r5, r5, #24
 8000700:	0fc6      	lsrs	r6, r0, #31
 8000702:	2d00      	cmp	r5, #0
 8000704:	d100      	bne.n	8000708 <__aeabi_fmul+0x1c>
 8000706:	e08d      	b.n	8000824 <__aeabi_fmul+0x138>
 8000708:	2dff      	cmp	r5, #255	; 0xff
 800070a:	d100      	bne.n	800070e <__aeabi_fmul+0x22>
 800070c:	e092      	b.n	8000834 <__aeabi_fmul+0x148>
 800070e:	2300      	movs	r3, #0
 8000710:	2080      	movs	r0, #128	; 0x80
 8000712:	4699      	mov	r9, r3
 8000714:	469a      	mov	sl, r3
 8000716:	00e4      	lsls	r4, r4, #3
 8000718:	04c0      	lsls	r0, r0, #19
 800071a:	4304      	orrs	r4, r0
 800071c:	3d7f      	subs	r5, #127	; 0x7f
 800071e:	0278      	lsls	r0, r7, #9
 8000720:	0a43      	lsrs	r3, r0, #9
 8000722:	4698      	mov	r8, r3
 8000724:	007b      	lsls	r3, r7, #1
 8000726:	0e1b      	lsrs	r3, r3, #24
 8000728:	0fff      	lsrs	r7, r7, #31
 800072a:	2b00      	cmp	r3, #0
 800072c:	d100      	bne.n	8000730 <__aeabi_fmul+0x44>
 800072e:	e070      	b.n	8000812 <__aeabi_fmul+0x126>
 8000730:	2bff      	cmp	r3, #255	; 0xff
 8000732:	d100      	bne.n	8000736 <__aeabi_fmul+0x4a>
 8000734:	e086      	b.n	8000844 <__aeabi_fmul+0x158>
 8000736:	4642      	mov	r2, r8
 8000738:	00d0      	lsls	r0, r2, #3
 800073a:	2280      	movs	r2, #128	; 0x80
 800073c:	3b7f      	subs	r3, #127	; 0x7f
 800073e:	18ed      	adds	r5, r5, r3
 8000740:	2300      	movs	r3, #0
 8000742:	04d2      	lsls	r2, r2, #19
 8000744:	4302      	orrs	r2, r0
 8000746:	4690      	mov	r8, r2
 8000748:	469c      	mov	ip, r3
 800074a:	0031      	movs	r1, r6
 800074c:	464b      	mov	r3, r9
 800074e:	4079      	eors	r1, r7
 8000750:	1c68      	adds	r0, r5, #1
 8000752:	2b0f      	cmp	r3, #15
 8000754:	d81c      	bhi.n	8000790 <__aeabi_fmul+0xa4>
 8000756:	4a76      	ldr	r2, [pc, #472]	; (8000930 <__aeabi_fmul+0x244>)
 8000758:	009b      	lsls	r3, r3, #2
 800075a:	58d3      	ldr	r3, [r2, r3]
 800075c:	469f      	mov	pc, r3
 800075e:	0039      	movs	r1, r7
 8000760:	4644      	mov	r4, r8
 8000762:	46e2      	mov	sl, ip
 8000764:	4653      	mov	r3, sl
 8000766:	2b02      	cmp	r3, #2
 8000768:	d00f      	beq.n	800078a <__aeabi_fmul+0x9e>
 800076a:	2b03      	cmp	r3, #3
 800076c:	d100      	bne.n	8000770 <__aeabi_fmul+0x84>
 800076e:	e0d7      	b.n	8000920 <__aeabi_fmul+0x234>
 8000770:	2b01      	cmp	r3, #1
 8000772:	d137      	bne.n	80007e4 <__aeabi_fmul+0xf8>
 8000774:	2000      	movs	r0, #0
 8000776:	2400      	movs	r4, #0
 8000778:	05c0      	lsls	r0, r0, #23
 800077a:	4320      	orrs	r0, r4
 800077c:	07c9      	lsls	r1, r1, #31
 800077e:	4308      	orrs	r0, r1
 8000780:	bce0      	pop	{r5, r6, r7}
 8000782:	46ba      	mov	sl, r7
 8000784:	46b1      	mov	r9, r6
 8000786:	46a8      	mov	r8, r5
 8000788:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800078a:	20ff      	movs	r0, #255	; 0xff
 800078c:	2400      	movs	r4, #0
 800078e:	e7f3      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000790:	0c26      	lsrs	r6, r4, #16
 8000792:	0424      	lsls	r4, r4, #16
 8000794:	0c22      	lsrs	r2, r4, #16
 8000796:	4644      	mov	r4, r8
 8000798:	0424      	lsls	r4, r4, #16
 800079a:	0c24      	lsrs	r4, r4, #16
 800079c:	4643      	mov	r3, r8
 800079e:	0027      	movs	r7, r4
 80007a0:	0c1b      	lsrs	r3, r3, #16
 80007a2:	4357      	muls	r7, r2
 80007a4:	4374      	muls	r4, r6
 80007a6:	435a      	muls	r2, r3
 80007a8:	435e      	muls	r6, r3
 80007aa:	1912      	adds	r2, r2, r4
 80007ac:	0c3b      	lsrs	r3, r7, #16
 80007ae:	189b      	adds	r3, r3, r2
 80007b0:	429c      	cmp	r4, r3
 80007b2:	d903      	bls.n	80007bc <__aeabi_fmul+0xd0>
 80007b4:	2280      	movs	r2, #128	; 0x80
 80007b6:	0252      	lsls	r2, r2, #9
 80007b8:	4694      	mov	ip, r2
 80007ba:	4466      	add	r6, ip
 80007bc:	043f      	lsls	r7, r7, #16
 80007be:	041a      	lsls	r2, r3, #16
 80007c0:	0c3f      	lsrs	r7, r7, #16
 80007c2:	19d2      	adds	r2, r2, r7
 80007c4:	0194      	lsls	r4, r2, #6
 80007c6:	1e67      	subs	r7, r4, #1
 80007c8:	41bc      	sbcs	r4, r7
 80007ca:	0c1b      	lsrs	r3, r3, #16
 80007cc:	0e92      	lsrs	r2, r2, #26
 80007ce:	199b      	adds	r3, r3, r6
 80007d0:	4314      	orrs	r4, r2
 80007d2:	019b      	lsls	r3, r3, #6
 80007d4:	431c      	orrs	r4, r3
 80007d6:	011b      	lsls	r3, r3, #4
 80007d8:	d400      	bmi.n	80007dc <__aeabi_fmul+0xf0>
 80007da:	e09b      	b.n	8000914 <__aeabi_fmul+0x228>
 80007dc:	2301      	movs	r3, #1
 80007de:	0862      	lsrs	r2, r4, #1
 80007e0:	401c      	ands	r4, r3
 80007e2:	4314      	orrs	r4, r2
 80007e4:	0002      	movs	r2, r0
 80007e6:	327f      	adds	r2, #127	; 0x7f
 80007e8:	2a00      	cmp	r2, #0
 80007ea:	dd64      	ble.n	80008b6 <__aeabi_fmul+0x1ca>
 80007ec:	0763      	lsls	r3, r4, #29
 80007ee:	d004      	beq.n	80007fa <__aeabi_fmul+0x10e>
 80007f0:	230f      	movs	r3, #15
 80007f2:	4023      	ands	r3, r4
 80007f4:	2b04      	cmp	r3, #4
 80007f6:	d000      	beq.n	80007fa <__aeabi_fmul+0x10e>
 80007f8:	3404      	adds	r4, #4
 80007fa:	0123      	lsls	r3, r4, #4
 80007fc:	d503      	bpl.n	8000806 <__aeabi_fmul+0x11a>
 80007fe:	0002      	movs	r2, r0
 8000800:	4b4c      	ldr	r3, [pc, #304]	; (8000934 <__aeabi_fmul+0x248>)
 8000802:	3280      	adds	r2, #128	; 0x80
 8000804:	401c      	ands	r4, r3
 8000806:	2afe      	cmp	r2, #254	; 0xfe
 8000808:	dcbf      	bgt.n	800078a <__aeabi_fmul+0x9e>
 800080a:	01a4      	lsls	r4, r4, #6
 800080c:	0a64      	lsrs	r4, r4, #9
 800080e:	b2d0      	uxtb	r0, r2
 8000810:	e7b2      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000812:	4643      	mov	r3, r8
 8000814:	2b00      	cmp	r3, #0
 8000816:	d13d      	bne.n	8000894 <__aeabi_fmul+0x1a8>
 8000818:	464a      	mov	r2, r9
 800081a:	3301      	adds	r3, #1
 800081c:	431a      	orrs	r2, r3
 800081e:	4691      	mov	r9, r2
 8000820:	469c      	mov	ip, r3
 8000822:	e792      	b.n	800074a <__aeabi_fmul+0x5e>
 8000824:	2c00      	cmp	r4, #0
 8000826:	d129      	bne.n	800087c <__aeabi_fmul+0x190>
 8000828:	2304      	movs	r3, #4
 800082a:	4699      	mov	r9, r3
 800082c:	3b03      	subs	r3, #3
 800082e:	2500      	movs	r5, #0
 8000830:	469a      	mov	sl, r3
 8000832:	e774      	b.n	800071e <__aeabi_fmul+0x32>
 8000834:	2c00      	cmp	r4, #0
 8000836:	d11b      	bne.n	8000870 <__aeabi_fmul+0x184>
 8000838:	2308      	movs	r3, #8
 800083a:	4699      	mov	r9, r3
 800083c:	3b06      	subs	r3, #6
 800083e:	25ff      	movs	r5, #255	; 0xff
 8000840:	469a      	mov	sl, r3
 8000842:	e76c      	b.n	800071e <__aeabi_fmul+0x32>
 8000844:	4643      	mov	r3, r8
 8000846:	35ff      	adds	r5, #255	; 0xff
 8000848:	2b00      	cmp	r3, #0
 800084a:	d10b      	bne.n	8000864 <__aeabi_fmul+0x178>
 800084c:	2302      	movs	r3, #2
 800084e:	464a      	mov	r2, r9
 8000850:	431a      	orrs	r2, r3
 8000852:	4691      	mov	r9, r2
 8000854:	469c      	mov	ip, r3
 8000856:	e778      	b.n	800074a <__aeabi_fmul+0x5e>
 8000858:	4653      	mov	r3, sl
 800085a:	0031      	movs	r1, r6
 800085c:	2b02      	cmp	r3, #2
 800085e:	d000      	beq.n	8000862 <__aeabi_fmul+0x176>
 8000860:	e783      	b.n	800076a <__aeabi_fmul+0x7e>
 8000862:	e792      	b.n	800078a <__aeabi_fmul+0x9e>
 8000864:	2303      	movs	r3, #3
 8000866:	464a      	mov	r2, r9
 8000868:	431a      	orrs	r2, r3
 800086a:	4691      	mov	r9, r2
 800086c:	469c      	mov	ip, r3
 800086e:	e76c      	b.n	800074a <__aeabi_fmul+0x5e>
 8000870:	230c      	movs	r3, #12
 8000872:	4699      	mov	r9, r3
 8000874:	3b09      	subs	r3, #9
 8000876:	25ff      	movs	r5, #255	; 0xff
 8000878:	469a      	mov	sl, r3
 800087a:	e750      	b.n	800071e <__aeabi_fmul+0x32>
 800087c:	0020      	movs	r0, r4
 800087e:	f000 faa5 	bl	8000dcc <__clzsi2>
 8000882:	2576      	movs	r5, #118	; 0x76
 8000884:	1f43      	subs	r3, r0, #5
 8000886:	409c      	lsls	r4, r3
 8000888:	2300      	movs	r3, #0
 800088a:	426d      	negs	r5, r5
 800088c:	4699      	mov	r9, r3
 800088e:	469a      	mov	sl, r3
 8000890:	1a2d      	subs	r5, r5, r0
 8000892:	e744      	b.n	800071e <__aeabi_fmul+0x32>
 8000894:	4640      	mov	r0, r8
 8000896:	f000 fa99 	bl	8000dcc <__clzsi2>
 800089a:	4642      	mov	r2, r8
 800089c:	1f43      	subs	r3, r0, #5
 800089e:	409a      	lsls	r2, r3
 80008a0:	2300      	movs	r3, #0
 80008a2:	1a2d      	subs	r5, r5, r0
 80008a4:	4690      	mov	r8, r2
 80008a6:	469c      	mov	ip, r3
 80008a8:	3d76      	subs	r5, #118	; 0x76
 80008aa:	e74e      	b.n	800074a <__aeabi_fmul+0x5e>
 80008ac:	2480      	movs	r4, #128	; 0x80
 80008ae:	2100      	movs	r1, #0
 80008b0:	20ff      	movs	r0, #255	; 0xff
 80008b2:	03e4      	lsls	r4, r4, #15
 80008b4:	e760      	b.n	8000778 <__aeabi_fmul+0x8c>
 80008b6:	2301      	movs	r3, #1
 80008b8:	1a9b      	subs	r3, r3, r2
 80008ba:	2b1b      	cmp	r3, #27
 80008bc:	dd00      	ble.n	80008c0 <__aeabi_fmul+0x1d4>
 80008be:	e759      	b.n	8000774 <__aeabi_fmul+0x88>
 80008c0:	0022      	movs	r2, r4
 80008c2:	309e      	adds	r0, #158	; 0x9e
 80008c4:	40da      	lsrs	r2, r3
 80008c6:	4084      	lsls	r4, r0
 80008c8:	0013      	movs	r3, r2
 80008ca:	1e62      	subs	r2, r4, #1
 80008cc:	4194      	sbcs	r4, r2
 80008ce:	431c      	orrs	r4, r3
 80008d0:	0763      	lsls	r3, r4, #29
 80008d2:	d004      	beq.n	80008de <__aeabi_fmul+0x1f2>
 80008d4:	230f      	movs	r3, #15
 80008d6:	4023      	ands	r3, r4
 80008d8:	2b04      	cmp	r3, #4
 80008da:	d000      	beq.n	80008de <__aeabi_fmul+0x1f2>
 80008dc:	3404      	adds	r4, #4
 80008de:	0163      	lsls	r3, r4, #5
 80008e0:	d51a      	bpl.n	8000918 <__aeabi_fmul+0x22c>
 80008e2:	2001      	movs	r0, #1
 80008e4:	2400      	movs	r4, #0
 80008e6:	e747      	b.n	8000778 <__aeabi_fmul+0x8c>
 80008e8:	2080      	movs	r0, #128	; 0x80
 80008ea:	03c0      	lsls	r0, r0, #15
 80008ec:	4204      	tst	r4, r0
 80008ee:	d009      	beq.n	8000904 <__aeabi_fmul+0x218>
 80008f0:	4643      	mov	r3, r8
 80008f2:	4203      	tst	r3, r0
 80008f4:	d106      	bne.n	8000904 <__aeabi_fmul+0x218>
 80008f6:	4644      	mov	r4, r8
 80008f8:	4304      	orrs	r4, r0
 80008fa:	0264      	lsls	r4, r4, #9
 80008fc:	0039      	movs	r1, r7
 80008fe:	20ff      	movs	r0, #255	; 0xff
 8000900:	0a64      	lsrs	r4, r4, #9
 8000902:	e739      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000904:	2080      	movs	r0, #128	; 0x80
 8000906:	03c0      	lsls	r0, r0, #15
 8000908:	4304      	orrs	r4, r0
 800090a:	0264      	lsls	r4, r4, #9
 800090c:	0031      	movs	r1, r6
 800090e:	20ff      	movs	r0, #255	; 0xff
 8000910:	0a64      	lsrs	r4, r4, #9
 8000912:	e731      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000914:	0028      	movs	r0, r5
 8000916:	e765      	b.n	80007e4 <__aeabi_fmul+0xf8>
 8000918:	01a4      	lsls	r4, r4, #6
 800091a:	2000      	movs	r0, #0
 800091c:	0a64      	lsrs	r4, r4, #9
 800091e:	e72b      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000920:	2080      	movs	r0, #128	; 0x80
 8000922:	03c0      	lsls	r0, r0, #15
 8000924:	4304      	orrs	r4, r0
 8000926:	0264      	lsls	r4, r4, #9
 8000928:	20ff      	movs	r0, #255	; 0xff
 800092a:	0a64      	lsrs	r4, r4, #9
 800092c:	e724      	b.n	8000778 <__aeabi_fmul+0x8c>
 800092e:	46c0      	nop			; (mov r8, r8)
 8000930:	08004cb0 	.word	0x08004cb0
 8000934:	f7ffffff 	.word	0xf7ffffff

08000938 <__aeabi_fsub>:
 8000938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800093a:	46ce      	mov	lr, r9
 800093c:	4647      	mov	r7, r8
 800093e:	0243      	lsls	r3, r0, #9
 8000940:	0a5b      	lsrs	r3, r3, #9
 8000942:	024e      	lsls	r6, r1, #9
 8000944:	00da      	lsls	r2, r3, #3
 8000946:	4694      	mov	ip, r2
 8000948:	0a72      	lsrs	r2, r6, #9
 800094a:	4691      	mov	r9, r2
 800094c:	0045      	lsls	r5, r0, #1
 800094e:	004a      	lsls	r2, r1, #1
 8000950:	b580      	push	{r7, lr}
 8000952:	0e2d      	lsrs	r5, r5, #24
 8000954:	001f      	movs	r7, r3
 8000956:	0fc4      	lsrs	r4, r0, #31
 8000958:	0e12      	lsrs	r2, r2, #24
 800095a:	0fc9      	lsrs	r1, r1, #31
 800095c:	09b6      	lsrs	r6, r6, #6
 800095e:	2aff      	cmp	r2, #255	; 0xff
 8000960:	d05b      	beq.n	8000a1a <__aeabi_fsub+0xe2>
 8000962:	2001      	movs	r0, #1
 8000964:	4041      	eors	r1, r0
 8000966:	428c      	cmp	r4, r1
 8000968:	d039      	beq.n	80009de <__aeabi_fsub+0xa6>
 800096a:	1aa8      	subs	r0, r5, r2
 800096c:	2800      	cmp	r0, #0
 800096e:	dd5a      	ble.n	8000a26 <__aeabi_fsub+0xee>
 8000970:	2a00      	cmp	r2, #0
 8000972:	d06a      	beq.n	8000a4a <__aeabi_fsub+0x112>
 8000974:	2dff      	cmp	r5, #255	; 0xff
 8000976:	d100      	bne.n	800097a <__aeabi_fsub+0x42>
 8000978:	e0d9      	b.n	8000b2e <__aeabi_fsub+0x1f6>
 800097a:	2280      	movs	r2, #128	; 0x80
 800097c:	04d2      	lsls	r2, r2, #19
 800097e:	4316      	orrs	r6, r2
 8000980:	281b      	cmp	r0, #27
 8000982:	dc00      	bgt.n	8000986 <__aeabi_fsub+0x4e>
 8000984:	e0e9      	b.n	8000b5a <__aeabi_fsub+0x222>
 8000986:	2001      	movs	r0, #1
 8000988:	4663      	mov	r3, ip
 800098a:	1a18      	subs	r0, r3, r0
 800098c:	0143      	lsls	r3, r0, #5
 800098e:	d400      	bmi.n	8000992 <__aeabi_fsub+0x5a>
 8000990:	e0b4      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000992:	0180      	lsls	r0, r0, #6
 8000994:	0987      	lsrs	r7, r0, #6
 8000996:	0038      	movs	r0, r7
 8000998:	f000 fa18 	bl	8000dcc <__clzsi2>
 800099c:	3805      	subs	r0, #5
 800099e:	4087      	lsls	r7, r0
 80009a0:	4285      	cmp	r5, r0
 80009a2:	dc00      	bgt.n	80009a6 <__aeabi_fsub+0x6e>
 80009a4:	e0cc      	b.n	8000b40 <__aeabi_fsub+0x208>
 80009a6:	1a2d      	subs	r5, r5, r0
 80009a8:	48b5      	ldr	r0, [pc, #724]	; (8000c80 <__aeabi_fsub+0x348>)
 80009aa:	4038      	ands	r0, r7
 80009ac:	0743      	lsls	r3, r0, #29
 80009ae:	d004      	beq.n	80009ba <__aeabi_fsub+0x82>
 80009b0:	230f      	movs	r3, #15
 80009b2:	4003      	ands	r3, r0
 80009b4:	2b04      	cmp	r3, #4
 80009b6:	d000      	beq.n	80009ba <__aeabi_fsub+0x82>
 80009b8:	3004      	adds	r0, #4
 80009ba:	0143      	lsls	r3, r0, #5
 80009bc:	d400      	bmi.n	80009c0 <__aeabi_fsub+0x88>
 80009be:	e0a0      	b.n	8000b02 <__aeabi_fsub+0x1ca>
 80009c0:	1c6a      	adds	r2, r5, #1
 80009c2:	2dfe      	cmp	r5, #254	; 0xfe
 80009c4:	d100      	bne.n	80009c8 <__aeabi_fsub+0x90>
 80009c6:	e08d      	b.n	8000ae4 <__aeabi_fsub+0x1ac>
 80009c8:	0180      	lsls	r0, r0, #6
 80009ca:	0a47      	lsrs	r7, r0, #9
 80009cc:	b2d2      	uxtb	r2, r2
 80009ce:	05d0      	lsls	r0, r2, #23
 80009d0:	4338      	orrs	r0, r7
 80009d2:	07e4      	lsls	r4, r4, #31
 80009d4:	4320      	orrs	r0, r4
 80009d6:	bcc0      	pop	{r6, r7}
 80009d8:	46b9      	mov	r9, r7
 80009da:	46b0      	mov	r8, r6
 80009dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009de:	1aa8      	subs	r0, r5, r2
 80009e0:	4680      	mov	r8, r0
 80009e2:	2800      	cmp	r0, #0
 80009e4:	dd45      	ble.n	8000a72 <__aeabi_fsub+0x13a>
 80009e6:	2a00      	cmp	r2, #0
 80009e8:	d070      	beq.n	8000acc <__aeabi_fsub+0x194>
 80009ea:	2dff      	cmp	r5, #255	; 0xff
 80009ec:	d100      	bne.n	80009f0 <__aeabi_fsub+0xb8>
 80009ee:	e09e      	b.n	8000b2e <__aeabi_fsub+0x1f6>
 80009f0:	2380      	movs	r3, #128	; 0x80
 80009f2:	04db      	lsls	r3, r3, #19
 80009f4:	431e      	orrs	r6, r3
 80009f6:	4643      	mov	r3, r8
 80009f8:	2b1b      	cmp	r3, #27
 80009fa:	dc00      	bgt.n	80009fe <__aeabi_fsub+0xc6>
 80009fc:	e0d2      	b.n	8000ba4 <__aeabi_fsub+0x26c>
 80009fe:	2001      	movs	r0, #1
 8000a00:	4460      	add	r0, ip
 8000a02:	0143      	lsls	r3, r0, #5
 8000a04:	d57a      	bpl.n	8000afc <__aeabi_fsub+0x1c4>
 8000a06:	3501      	adds	r5, #1
 8000a08:	2dff      	cmp	r5, #255	; 0xff
 8000a0a:	d06b      	beq.n	8000ae4 <__aeabi_fsub+0x1ac>
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	4a9d      	ldr	r2, [pc, #628]	; (8000c84 <__aeabi_fsub+0x34c>)
 8000a10:	4003      	ands	r3, r0
 8000a12:	0840      	lsrs	r0, r0, #1
 8000a14:	4010      	ands	r0, r2
 8000a16:	4318      	orrs	r0, r3
 8000a18:	e7c8      	b.n	80009ac <__aeabi_fsub+0x74>
 8000a1a:	2e00      	cmp	r6, #0
 8000a1c:	d020      	beq.n	8000a60 <__aeabi_fsub+0x128>
 8000a1e:	428c      	cmp	r4, r1
 8000a20:	d023      	beq.n	8000a6a <__aeabi_fsub+0x132>
 8000a22:	0028      	movs	r0, r5
 8000a24:	38ff      	subs	r0, #255	; 0xff
 8000a26:	2800      	cmp	r0, #0
 8000a28:	d039      	beq.n	8000a9e <__aeabi_fsub+0x166>
 8000a2a:	1b57      	subs	r7, r2, r5
 8000a2c:	2d00      	cmp	r5, #0
 8000a2e:	d000      	beq.n	8000a32 <__aeabi_fsub+0xfa>
 8000a30:	e09d      	b.n	8000b6e <__aeabi_fsub+0x236>
 8000a32:	4663      	mov	r3, ip
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	d100      	bne.n	8000a3a <__aeabi_fsub+0x102>
 8000a38:	e0db      	b.n	8000bf2 <__aeabi_fsub+0x2ba>
 8000a3a:	1e7b      	subs	r3, r7, #1
 8000a3c:	2f01      	cmp	r7, #1
 8000a3e:	d100      	bne.n	8000a42 <__aeabi_fsub+0x10a>
 8000a40:	e10d      	b.n	8000c5e <__aeabi_fsub+0x326>
 8000a42:	2fff      	cmp	r7, #255	; 0xff
 8000a44:	d071      	beq.n	8000b2a <__aeabi_fsub+0x1f2>
 8000a46:	001f      	movs	r7, r3
 8000a48:	e098      	b.n	8000b7c <__aeabi_fsub+0x244>
 8000a4a:	2e00      	cmp	r6, #0
 8000a4c:	d100      	bne.n	8000a50 <__aeabi_fsub+0x118>
 8000a4e:	e0a7      	b.n	8000ba0 <__aeabi_fsub+0x268>
 8000a50:	1e42      	subs	r2, r0, #1
 8000a52:	2801      	cmp	r0, #1
 8000a54:	d100      	bne.n	8000a58 <__aeabi_fsub+0x120>
 8000a56:	e0e6      	b.n	8000c26 <__aeabi_fsub+0x2ee>
 8000a58:	28ff      	cmp	r0, #255	; 0xff
 8000a5a:	d068      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000a5c:	0010      	movs	r0, r2
 8000a5e:	e78f      	b.n	8000980 <__aeabi_fsub+0x48>
 8000a60:	2001      	movs	r0, #1
 8000a62:	4041      	eors	r1, r0
 8000a64:	42a1      	cmp	r1, r4
 8000a66:	d000      	beq.n	8000a6a <__aeabi_fsub+0x132>
 8000a68:	e77f      	b.n	800096a <__aeabi_fsub+0x32>
 8000a6a:	20ff      	movs	r0, #255	; 0xff
 8000a6c:	4240      	negs	r0, r0
 8000a6e:	4680      	mov	r8, r0
 8000a70:	44a8      	add	r8, r5
 8000a72:	4640      	mov	r0, r8
 8000a74:	2800      	cmp	r0, #0
 8000a76:	d038      	beq.n	8000aea <__aeabi_fsub+0x1b2>
 8000a78:	1b51      	subs	r1, r2, r5
 8000a7a:	2d00      	cmp	r5, #0
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_fsub+0x148>
 8000a7e:	e0ae      	b.n	8000bde <__aeabi_fsub+0x2a6>
 8000a80:	2aff      	cmp	r2, #255	; 0xff
 8000a82:	d100      	bne.n	8000a86 <__aeabi_fsub+0x14e>
 8000a84:	e0df      	b.n	8000c46 <__aeabi_fsub+0x30e>
 8000a86:	2380      	movs	r3, #128	; 0x80
 8000a88:	4660      	mov	r0, ip
 8000a8a:	04db      	lsls	r3, r3, #19
 8000a8c:	4318      	orrs	r0, r3
 8000a8e:	4684      	mov	ip, r0
 8000a90:	291b      	cmp	r1, #27
 8000a92:	dc00      	bgt.n	8000a96 <__aeabi_fsub+0x15e>
 8000a94:	e0d9      	b.n	8000c4a <__aeabi_fsub+0x312>
 8000a96:	2001      	movs	r0, #1
 8000a98:	0015      	movs	r5, r2
 8000a9a:	1980      	adds	r0, r0, r6
 8000a9c:	e7b1      	b.n	8000a02 <__aeabi_fsub+0xca>
 8000a9e:	20fe      	movs	r0, #254	; 0xfe
 8000aa0:	1c6a      	adds	r2, r5, #1
 8000aa2:	4210      	tst	r0, r2
 8000aa4:	d171      	bne.n	8000b8a <__aeabi_fsub+0x252>
 8000aa6:	2d00      	cmp	r5, #0
 8000aa8:	d000      	beq.n	8000aac <__aeabi_fsub+0x174>
 8000aaa:	e0a6      	b.n	8000bfa <__aeabi_fsub+0x2c2>
 8000aac:	4663      	mov	r3, ip
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	d100      	bne.n	8000ab4 <__aeabi_fsub+0x17c>
 8000ab2:	e0d9      	b.n	8000c68 <__aeabi_fsub+0x330>
 8000ab4:	2200      	movs	r2, #0
 8000ab6:	2e00      	cmp	r6, #0
 8000ab8:	d100      	bne.n	8000abc <__aeabi_fsub+0x184>
 8000aba:	e788      	b.n	80009ce <__aeabi_fsub+0x96>
 8000abc:	1b98      	subs	r0, r3, r6
 8000abe:	0143      	lsls	r3, r0, #5
 8000ac0:	d400      	bmi.n	8000ac4 <__aeabi_fsub+0x18c>
 8000ac2:	e0e1      	b.n	8000c88 <__aeabi_fsub+0x350>
 8000ac4:	4663      	mov	r3, ip
 8000ac6:	000c      	movs	r4, r1
 8000ac8:	1af0      	subs	r0, r6, r3
 8000aca:	e76f      	b.n	80009ac <__aeabi_fsub+0x74>
 8000acc:	2e00      	cmp	r6, #0
 8000ace:	d100      	bne.n	8000ad2 <__aeabi_fsub+0x19a>
 8000ad0:	e0b7      	b.n	8000c42 <__aeabi_fsub+0x30a>
 8000ad2:	0002      	movs	r2, r0
 8000ad4:	3a01      	subs	r2, #1
 8000ad6:	2801      	cmp	r0, #1
 8000ad8:	d100      	bne.n	8000adc <__aeabi_fsub+0x1a4>
 8000ada:	e09c      	b.n	8000c16 <__aeabi_fsub+0x2de>
 8000adc:	28ff      	cmp	r0, #255	; 0xff
 8000ade:	d026      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000ae0:	4690      	mov	r8, r2
 8000ae2:	e788      	b.n	80009f6 <__aeabi_fsub+0xbe>
 8000ae4:	22ff      	movs	r2, #255	; 0xff
 8000ae6:	2700      	movs	r7, #0
 8000ae8:	e771      	b.n	80009ce <__aeabi_fsub+0x96>
 8000aea:	20fe      	movs	r0, #254	; 0xfe
 8000aec:	1c6a      	adds	r2, r5, #1
 8000aee:	4210      	tst	r0, r2
 8000af0:	d064      	beq.n	8000bbc <__aeabi_fsub+0x284>
 8000af2:	2aff      	cmp	r2, #255	; 0xff
 8000af4:	d0f6      	beq.n	8000ae4 <__aeabi_fsub+0x1ac>
 8000af6:	0015      	movs	r5, r2
 8000af8:	4466      	add	r6, ip
 8000afa:	0870      	lsrs	r0, r6, #1
 8000afc:	0743      	lsls	r3, r0, #29
 8000afe:	d000      	beq.n	8000b02 <__aeabi_fsub+0x1ca>
 8000b00:	e756      	b.n	80009b0 <__aeabi_fsub+0x78>
 8000b02:	08c3      	lsrs	r3, r0, #3
 8000b04:	2dff      	cmp	r5, #255	; 0xff
 8000b06:	d012      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b08:	025b      	lsls	r3, r3, #9
 8000b0a:	0a5f      	lsrs	r7, r3, #9
 8000b0c:	b2ea      	uxtb	r2, r5
 8000b0e:	e75e      	b.n	80009ce <__aeabi_fsub+0x96>
 8000b10:	4662      	mov	r2, ip
 8000b12:	2a00      	cmp	r2, #0
 8000b14:	d100      	bne.n	8000b18 <__aeabi_fsub+0x1e0>
 8000b16:	e096      	b.n	8000c46 <__aeabi_fsub+0x30e>
 8000b18:	2e00      	cmp	r6, #0
 8000b1a:	d008      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b1c:	2280      	movs	r2, #128	; 0x80
 8000b1e:	03d2      	lsls	r2, r2, #15
 8000b20:	4213      	tst	r3, r2
 8000b22:	d004      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b24:	4648      	mov	r0, r9
 8000b26:	4210      	tst	r0, r2
 8000b28:	d101      	bne.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b2a:	000c      	movs	r4, r1
 8000b2c:	464b      	mov	r3, r9
 8000b2e:	2b00      	cmp	r3, #0
 8000b30:	d0d8      	beq.n	8000ae4 <__aeabi_fsub+0x1ac>
 8000b32:	2780      	movs	r7, #128	; 0x80
 8000b34:	03ff      	lsls	r7, r7, #15
 8000b36:	431f      	orrs	r7, r3
 8000b38:	027f      	lsls	r7, r7, #9
 8000b3a:	22ff      	movs	r2, #255	; 0xff
 8000b3c:	0a7f      	lsrs	r7, r7, #9
 8000b3e:	e746      	b.n	80009ce <__aeabi_fsub+0x96>
 8000b40:	2320      	movs	r3, #32
 8000b42:	003a      	movs	r2, r7
 8000b44:	1b45      	subs	r5, r0, r5
 8000b46:	0038      	movs	r0, r7
 8000b48:	3501      	adds	r5, #1
 8000b4a:	40ea      	lsrs	r2, r5
 8000b4c:	1b5d      	subs	r5, r3, r5
 8000b4e:	40a8      	lsls	r0, r5
 8000b50:	1e43      	subs	r3, r0, #1
 8000b52:	4198      	sbcs	r0, r3
 8000b54:	2500      	movs	r5, #0
 8000b56:	4310      	orrs	r0, r2
 8000b58:	e728      	b.n	80009ac <__aeabi_fsub+0x74>
 8000b5a:	2320      	movs	r3, #32
 8000b5c:	1a1b      	subs	r3, r3, r0
 8000b5e:	0032      	movs	r2, r6
 8000b60:	409e      	lsls	r6, r3
 8000b62:	40c2      	lsrs	r2, r0
 8000b64:	0030      	movs	r0, r6
 8000b66:	1e43      	subs	r3, r0, #1
 8000b68:	4198      	sbcs	r0, r3
 8000b6a:	4310      	orrs	r0, r2
 8000b6c:	e70c      	b.n	8000988 <__aeabi_fsub+0x50>
 8000b6e:	2aff      	cmp	r2, #255	; 0xff
 8000b70:	d0db      	beq.n	8000b2a <__aeabi_fsub+0x1f2>
 8000b72:	2380      	movs	r3, #128	; 0x80
 8000b74:	4660      	mov	r0, ip
 8000b76:	04db      	lsls	r3, r3, #19
 8000b78:	4318      	orrs	r0, r3
 8000b7a:	4684      	mov	ip, r0
 8000b7c:	2f1b      	cmp	r7, #27
 8000b7e:	dd56      	ble.n	8000c2e <__aeabi_fsub+0x2f6>
 8000b80:	2001      	movs	r0, #1
 8000b82:	000c      	movs	r4, r1
 8000b84:	0015      	movs	r5, r2
 8000b86:	1a30      	subs	r0, r6, r0
 8000b88:	e700      	b.n	800098c <__aeabi_fsub+0x54>
 8000b8a:	4663      	mov	r3, ip
 8000b8c:	1b9f      	subs	r7, r3, r6
 8000b8e:	017b      	lsls	r3, r7, #5
 8000b90:	d43d      	bmi.n	8000c0e <__aeabi_fsub+0x2d6>
 8000b92:	2f00      	cmp	r7, #0
 8000b94:	d000      	beq.n	8000b98 <__aeabi_fsub+0x260>
 8000b96:	e6fe      	b.n	8000996 <__aeabi_fsub+0x5e>
 8000b98:	2400      	movs	r4, #0
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	2700      	movs	r7, #0
 8000b9e:	e716      	b.n	80009ce <__aeabi_fsub+0x96>
 8000ba0:	0005      	movs	r5, r0
 8000ba2:	e7af      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000ba4:	0032      	movs	r2, r6
 8000ba6:	4643      	mov	r3, r8
 8000ba8:	4641      	mov	r1, r8
 8000baa:	40da      	lsrs	r2, r3
 8000bac:	2320      	movs	r3, #32
 8000bae:	1a5b      	subs	r3, r3, r1
 8000bb0:	409e      	lsls	r6, r3
 8000bb2:	0030      	movs	r0, r6
 8000bb4:	1e43      	subs	r3, r0, #1
 8000bb6:	4198      	sbcs	r0, r3
 8000bb8:	4310      	orrs	r0, r2
 8000bba:	e721      	b.n	8000a00 <__aeabi_fsub+0xc8>
 8000bbc:	2d00      	cmp	r5, #0
 8000bbe:	d1a7      	bne.n	8000b10 <__aeabi_fsub+0x1d8>
 8000bc0:	4663      	mov	r3, ip
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d059      	beq.n	8000c7a <__aeabi_fsub+0x342>
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	2e00      	cmp	r6, #0
 8000bca:	d100      	bne.n	8000bce <__aeabi_fsub+0x296>
 8000bcc:	e6ff      	b.n	80009ce <__aeabi_fsub+0x96>
 8000bce:	0030      	movs	r0, r6
 8000bd0:	4460      	add	r0, ip
 8000bd2:	0143      	lsls	r3, r0, #5
 8000bd4:	d592      	bpl.n	8000afc <__aeabi_fsub+0x1c4>
 8000bd6:	4b2a      	ldr	r3, [pc, #168]	; (8000c80 <__aeabi_fsub+0x348>)
 8000bd8:	3501      	adds	r5, #1
 8000bda:	4018      	ands	r0, r3
 8000bdc:	e78e      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000bde:	4663      	mov	r3, ip
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d047      	beq.n	8000c74 <__aeabi_fsub+0x33c>
 8000be4:	1e4b      	subs	r3, r1, #1
 8000be6:	2901      	cmp	r1, #1
 8000be8:	d015      	beq.n	8000c16 <__aeabi_fsub+0x2de>
 8000bea:	29ff      	cmp	r1, #255	; 0xff
 8000bec:	d02b      	beq.n	8000c46 <__aeabi_fsub+0x30e>
 8000bee:	0019      	movs	r1, r3
 8000bf0:	e74e      	b.n	8000a90 <__aeabi_fsub+0x158>
 8000bf2:	000c      	movs	r4, r1
 8000bf4:	464b      	mov	r3, r9
 8000bf6:	003d      	movs	r5, r7
 8000bf8:	e784      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000bfa:	4662      	mov	r2, ip
 8000bfc:	2a00      	cmp	r2, #0
 8000bfe:	d18b      	bne.n	8000b18 <__aeabi_fsub+0x1e0>
 8000c00:	2e00      	cmp	r6, #0
 8000c02:	d192      	bne.n	8000b2a <__aeabi_fsub+0x1f2>
 8000c04:	2780      	movs	r7, #128	; 0x80
 8000c06:	2400      	movs	r4, #0
 8000c08:	22ff      	movs	r2, #255	; 0xff
 8000c0a:	03ff      	lsls	r7, r7, #15
 8000c0c:	e6df      	b.n	80009ce <__aeabi_fsub+0x96>
 8000c0e:	4663      	mov	r3, ip
 8000c10:	000c      	movs	r4, r1
 8000c12:	1af7      	subs	r7, r6, r3
 8000c14:	e6bf      	b.n	8000996 <__aeabi_fsub+0x5e>
 8000c16:	0030      	movs	r0, r6
 8000c18:	4460      	add	r0, ip
 8000c1a:	2501      	movs	r5, #1
 8000c1c:	0143      	lsls	r3, r0, #5
 8000c1e:	d400      	bmi.n	8000c22 <__aeabi_fsub+0x2ea>
 8000c20:	e76c      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000c22:	2502      	movs	r5, #2
 8000c24:	e6f2      	b.n	8000a0c <__aeabi_fsub+0xd4>
 8000c26:	4663      	mov	r3, ip
 8000c28:	2501      	movs	r5, #1
 8000c2a:	1b98      	subs	r0, r3, r6
 8000c2c:	e6ae      	b.n	800098c <__aeabi_fsub+0x54>
 8000c2e:	2320      	movs	r3, #32
 8000c30:	4664      	mov	r4, ip
 8000c32:	4660      	mov	r0, ip
 8000c34:	40fc      	lsrs	r4, r7
 8000c36:	1bdf      	subs	r7, r3, r7
 8000c38:	40b8      	lsls	r0, r7
 8000c3a:	1e43      	subs	r3, r0, #1
 8000c3c:	4198      	sbcs	r0, r3
 8000c3e:	4320      	orrs	r0, r4
 8000c40:	e79f      	b.n	8000b82 <__aeabi_fsub+0x24a>
 8000c42:	0005      	movs	r5, r0
 8000c44:	e75e      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000c46:	464b      	mov	r3, r9
 8000c48:	e771      	b.n	8000b2e <__aeabi_fsub+0x1f6>
 8000c4a:	2320      	movs	r3, #32
 8000c4c:	4665      	mov	r5, ip
 8000c4e:	4660      	mov	r0, ip
 8000c50:	40cd      	lsrs	r5, r1
 8000c52:	1a59      	subs	r1, r3, r1
 8000c54:	4088      	lsls	r0, r1
 8000c56:	1e43      	subs	r3, r0, #1
 8000c58:	4198      	sbcs	r0, r3
 8000c5a:	4328      	orrs	r0, r5
 8000c5c:	e71c      	b.n	8000a98 <__aeabi_fsub+0x160>
 8000c5e:	4663      	mov	r3, ip
 8000c60:	000c      	movs	r4, r1
 8000c62:	2501      	movs	r5, #1
 8000c64:	1af0      	subs	r0, r6, r3
 8000c66:	e691      	b.n	800098c <__aeabi_fsub+0x54>
 8000c68:	2e00      	cmp	r6, #0
 8000c6a:	d095      	beq.n	8000b98 <__aeabi_fsub+0x260>
 8000c6c:	000c      	movs	r4, r1
 8000c6e:	464f      	mov	r7, r9
 8000c70:	2200      	movs	r2, #0
 8000c72:	e6ac      	b.n	80009ce <__aeabi_fsub+0x96>
 8000c74:	464b      	mov	r3, r9
 8000c76:	000d      	movs	r5, r1
 8000c78:	e744      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000c7a:	464f      	mov	r7, r9
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	e6a6      	b.n	80009ce <__aeabi_fsub+0x96>
 8000c80:	fbffffff 	.word	0xfbffffff
 8000c84:	7dffffff 	.word	0x7dffffff
 8000c88:	2800      	cmp	r0, #0
 8000c8a:	d000      	beq.n	8000c8e <__aeabi_fsub+0x356>
 8000c8c:	e736      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000c8e:	2400      	movs	r4, #0
 8000c90:	2700      	movs	r7, #0
 8000c92:	e69c      	b.n	80009ce <__aeabi_fsub+0x96>

08000c94 <__aeabi_f2iz>:
 8000c94:	0241      	lsls	r1, r0, #9
 8000c96:	0042      	lsls	r2, r0, #1
 8000c98:	0fc3      	lsrs	r3, r0, #31
 8000c9a:	0a49      	lsrs	r1, r1, #9
 8000c9c:	2000      	movs	r0, #0
 8000c9e:	0e12      	lsrs	r2, r2, #24
 8000ca0:	2a7e      	cmp	r2, #126	; 0x7e
 8000ca2:	dd03      	ble.n	8000cac <__aeabi_f2iz+0x18>
 8000ca4:	2a9d      	cmp	r2, #157	; 0x9d
 8000ca6:	dd02      	ble.n	8000cae <__aeabi_f2iz+0x1a>
 8000ca8:	4a09      	ldr	r2, [pc, #36]	; (8000cd0 <__aeabi_f2iz+0x3c>)
 8000caa:	1898      	adds	r0, r3, r2
 8000cac:	4770      	bx	lr
 8000cae:	2080      	movs	r0, #128	; 0x80
 8000cb0:	0400      	lsls	r0, r0, #16
 8000cb2:	4301      	orrs	r1, r0
 8000cb4:	2a95      	cmp	r2, #149	; 0x95
 8000cb6:	dc07      	bgt.n	8000cc8 <__aeabi_f2iz+0x34>
 8000cb8:	2096      	movs	r0, #150	; 0x96
 8000cba:	1a82      	subs	r2, r0, r2
 8000cbc:	40d1      	lsrs	r1, r2
 8000cbe:	4248      	negs	r0, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d1f3      	bne.n	8000cac <__aeabi_f2iz+0x18>
 8000cc4:	0008      	movs	r0, r1
 8000cc6:	e7f1      	b.n	8000cac <__aeabi_f2iz+0x18>
 8000cc8:	3a96      	subs	r2, #150	; 0x96
 8000cca:	4091      	lsls	r1, r2
 8000ccc:	e7f7      	b.n	8000cbe <__aeabi_f2iz+0x2a>
 8000cce:	46c0      	nop			; (mov r8, r8)
 8000cd0:	7fffffff 	.word	0x7fffffff

08000cd4 <__aeabi_ui2f>:
 8000cd4:	b570      	push	{r4, r5, r6, lr}
 8000cd6:	1e05      	subs	r5, r0, #0
 8000cd8:	d00e      	beq.n	8000cf8 <__aeabi_ui2f+0x24>
 8000cda:	f000 f877 	bl	8000dcc <__clzsi2>
 8000cde:	239e      	movs	r3, #158	; 0x9e
 8000ce0:	0004      	movs	r4, r0
 8000ce2:	1a1b      	subs	r3, r3, r0
 8000ce4:	2b96      	cmp	r3, #150	; 0x96
 8000ce6:	dc0c      	bgt.n	8000d02 <__aeabi_ui2f+0x2e>
 8000ce8:	2808      	cmp	r0, #8
 8000cea:	dd01      	ble.n	8000cf0 <__aeabi_ui2f+0x1c>
 8000cec:	3c08      	subs	r4, #8
 8000cee:	40a5      	lsls	r5, r4
 8000cf0:	026d      	lsls	r5, r5, #9
 8000cf2:	0a6d      	lsrs	r5, r5, #9
 8000cf4:	b2d8      	uxtb	r0, r3
 8000cf6:	e001      	b.n	8000cfc <__aeabi_ui2f+0x28>
 8000cf8:	2000      	movs	r0, #0
 8000cfa:	2500      	movs	r5, #0
 8000cfc:	05c0      	lsls	r0, r0, #23
 8000cfe:	4328      	orrs	r0, r5
 8000d00:	bd70      	pop	{r4, r5, r6, pc}
 8000d02:	2b99      	cmp	r3, #153	; 0x99
 8000d04:	dd09      	ble.n	8000d1a <__aeabi_ui2f+0x46>
 8000d06:	0002      	movs	r2, r0
 8000d08:	0029      	movs	r1, r5
 8000d0a:	321b      	adds	r2, #27
 8000d0c:	4091      	lsls	r1, r2
 8000d0e:	1e4a      	subs	r2, r1, #1
 8000d10:	4191      	sbcs	r1, r2
 8000d12:	2205      	movs	r2, #5
 8000d14:	1a12      	subs	r2, r2, r0
 8000d16:	40d5      	lsrs	r5, r2
 8000d18:	430d      	orrs	r5, r1
 8000d1a:	2c05      	cmp	r4, #5
 8000d1c:	dc12      	bgt.n	8000d44 <__aeabi_ui2f+0x70>
 8000d1e:	0029      	movs	r1, r5
 8000d20:	4e0c      	ldr	r6, [pc, #48]	; (8000d54 <__aeabi_ui2f+0x80>)
 8000d22:	4031      	ands	r1, r6
 8000d24:	076a      	lsls	r2, r5, #29
 8000d26:	d009      	beq.n	8000d3c <__aeabi_ui2f+0x68>
 8000d28:	200f      	movs	r0, #15
 8000d2a:	4028      	ands	r0, r5
 8000d2c:	2804      	cmp	r0, #4
 8000d2e:	d005      	beq.n	8000d3c <__aeabi_ui2f+0x68>
 8000d30:	3104      	adds	r1, #4
 8000d32:	014a      	lsls	r2, r1, #5
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_ui2f+0x68>
 8000d36:	239f      	movs	r3, #159	; 0x9f
 8000d38:	4031      	ands	r1, r6
 8000d3a:	1b1b      	subs	r3, r3, r4
 8000d3c:	0189      	lsls	r1, r1, #6
 8000d3e:	0a4d      	lsrs	r5, r1, #9
 8000d40:	b2d8      	uxtb	r0, r3
 8000d42:	e7db      	b.n	8000cfc <__aeabi_ui2f+0x28>
 8000d44:	1f62      	subs	r2, r4, #5
 8000d46:	4095      	lsls	r5, r2
 8000d48:	0029      	movs	r1, r5
 8000d4a:	4e02      	ldr	r6, [pc, #8]	; (8000d54 <__aeabi_ui2f+0x80>)
 8000d4c:	4031      	ands	r1, r6
 8000d4e:	076a      	lsls	r2, r5, #29
 8000d50:	d0f4      	beq.n	8000d3c <__aeabi_ui2f+0x68>
 8000d52:	e7e9      	b.n	8000d28 <__aeabi_ui2f+0x54>
 8000d54:	fbffffff 	.word	0xfbffffff

08000d58 <__aeabi_cfrcmple>:
 8000d58:	4684      	mov	ip, r0
 8000d5a:	0008      	movs	r0, r1
 8000d5c:	4661      	mov	r1, ip
 8000d5e:	e7ff      	b.n	8000d60 <__aeabi_cfcmpeq>

08000d60 <__aeabi_cfcmpeq>:
 8000d60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000d62:	f000 f8c9 	bl	8000ef8 <__lesf2>
 8000d66:	2800      	cmp	r0, #0
 8000d68:	d401      	bmi.n	8000d6e <__aeabi_cfcmpeq+0xe>
 8000d6a:	2100      	movs	r1, #0
 8000d6c:	42c8      	cmn	r0, r1
 8000d6e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000d70 <__aeabi_fcmpeq>:
 8000d70:	b510      	push	{r4, lr}
 8000d72:	f000 f855 	bl	8000e20 <__eqsf2>
 8000d76:	4240      	negs	r0, r0
 8000d78:	3001      	adds	r0, #1
 8000d7a:	bd10      	pop	{r4, pc}

08000d7c <__aeabi_fcmplt>:
 8000d7c:	b510      	push	{r4, lr}
 8000d7e:	f000 f8bb 	bl	8000ef8 <__lesf2>
 8000d82:	2800      	cmp	r0, #0
 8000d84:	db01      	blt.n	8000d8a <__aeabi_fcmplt+0xe>
 8000d86:	2000      	movs	r0, #0
 8000d88:	bd10      	pop	{r4, pc}
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	bd10      	pop	{r4, pc}
 8000d8e:	46c0      	nop			; (mov r8, r8)

08000d90 <__aeabi_fcmple>:
 8000d90:	b510      	push	{r4, lr}
 8000d92:	f000 f8b1 	bl	8000ef8 <__lesf2>
 8000d96:	2800      	cmp	r0, #0
 8000d98:	dd01      	ble.n	8000d9e <__aeabi_fcmple+0xe>
 8000d9a:	2000      	movs	r0, #0
 8000d9c:	bd10      	pop	{r4, pc}
 8000d9e:	2001      	movs	r0, #1
 8000da0:	bd10      	pop	{r4, pc}
 8000da2:	46c0      	nop			; (mov r8, r8)

08000da4 <__aeabi_fcmpgt>:
 8000da4:	b510      	push	{r4, lr}
 8000da6:	f000 f861 	bl	8000e6c <__gesf2>
 8000daa:	2800      	cmp	r0, #0
 8000dac:	dc01      	bgt.n	8000db2 <__aeabi_fcmpgt+0xe>
 8000dae:	2000      	movs	r0, #0
 8000db0:	bd10      	pop	{r4, pc}
 8000db2:	2001      	movs	r0, #1
 8000db4:	bd10      	pop	{r4, pc}
 8000db6:	46c0      	nop			; (mov r8, r8)

08000db8 <__aeabi_fcmpge>:
 8000db8:	b510      	push	{r4, lr}
 8000dba:	f000 f857 	bl	8000e6c <__gesf2>
 8000dbe:	2800      	cmp	r0, #0
 8000dc0:	da01      	bge.n	8000dc6 <__aeabi_fcmpge+0xe>
 8000dc2:	2000      	movs	r0, #0
 8000dc4:	bd10      	pop	{r4, pc}
 8000dc6:	2001      	movs	r0, #1
 8000dc8:	bd10      	pop	{r4, pc}
 8000dca:	46c0      	nop			; (mov r8, r8)

08000dcc <__clzsi2>:
 8000dcc:	211c      	movs	r1, #28
 8000dce:	2301      	movs	r3, #1
 8000dd0:	041b      	lsls	r3, r3, #16
 8000dd2:	4298      	cmp	r0, r3
 8000dd4:	d301      	bcc.n	8000dda <__clzsi2+0xe>
 8000dd6:	0c00      	lsrs	r0, r0, #16
 8000dd8:	3910      	subs	r1, #16
 8000dda:	0a1b      	lsrs	r3, r3, #8
 8000ddc:	4298      	cmp	r0, r3
 8000dde:	d301      	bcc.n	8000de4 <__clzsi2+0x18>
 8000de0:	0a00      	lsrs	r0, r0, #8
 8000de2:	3908      	subs	r1, #8
 8000de4:	091b      	lsrs	r3, r3, #4
 8000de6:	4298      	cmp	r0, r3
 8000de8:	d301      	bcc.n	8000dee <__clzsi2+0x22>
 8000dea:	0900      	lsrs	r0, r0, #4
 8000dec:	3904      	subs	r1, #4
 8000dee:	a202      	add	r2, pc, #8	; (adr r2, 8000df8 <__clzsi2+0x2c>)
 8000df0:	5c10      	ldrb	r0, [r2, r0]
 8000df2:	1840      	adds	r0, r0, r1
 8000df4:	4770      	bx	lr
 8000df6:	46c0      	nop			; (mov r8, r8)
 8000df8:	02020304 	.word	0x02020304
 8000dfc:	01010101 	.word	0x01010101
	...

08000e08 <__clzdi2>:
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	2900      	cmp	r1, #0
 8000e0c:	d103      	bne.n	8000e16 <__clzdi2+0xe>
 8000e0e:	f7ff ffdd 	bl	8000dcc <__clzsi2>
 8000e12:	3020      	adds	r0, #32
 8000e14:	e002      	b.n	8000e1c <__clzdi2+0x14>
 8000e16:	0008      	movs	r0, r1
 8000e18:	f7ff ffd8 	bl	8000dcc <__clzsi2>
 8000e1c:	bd10      	pop	{r4, pc}
 8000e1e:	46c0      	nop			; (mov r8, r8)

08000e20 <__eqsf2>:
 8000e20:	b570      	push	{r4, r5, r6, lr}
 8000e22:	0042      	lsls	r2, r0, #1
 8000e24:	0245      	lsls	r5, r0, #9
 8000e26:	024e      	lsls	r6, r1, #9
 8000e28:	004c      	lsls	r4, r1, #1
 8000e2a:	0fc3      	lsrs	r3, r0, #31
 8000e2c:	0a6d      	lsrs	r5, r5, #9
 8000e2e:	2001      	movs	r0, #1
 8000e30:	0e12      	lsrs	r2, r2, #24
 8000e32:	0a76      	lsrs	r6, r6, #9
 8000e34:	0e24      	lsrs	r4, r4, #24
 8000e36:	0fc9      	lsrs	r1, r1, #31
 8000e38:	2aff      	cmp	r2, #255	; 0xff
 8000e3a:	d006      	beq.n	8000e4a <__eqsf2+0x2a>
 8000e3c:	2cff      	cmp	r4, #255	; 0xff
 8000e3e:	d003      	beq.n	8000e48 <__eqsf2+0x28>
 8000e40:	42a2      	cmp	r2, r4
 8000e42:	d101      	bne.n	8000e48 <__eqsf2+0x28>
 8000e44:	42b5      	cmp	r5, r6
 8000e46:	d006      	beq.n	8000e56 <__eqsf2+0x36>
 8000e48:	bd70      	pop	{r4, r5, r6, pc}
 8000e4a:	2d00      	cmp	r5, #0
 8000e4c:	d1fc      	bne.n	8000e48 <__eqsf2+0x28>
 8000e4e:	2cff      	cmp	r4, #255	; 0xff
 8000e50:	d1fa      	bne.n	8000e48 <__eqsf2+0x28>
 8000e52:	2e00      	cmp	r6, #0
 8000e54:	d1f8      	bne.n	8000e48 <__eqsf2+0x28>
 8000e56:	428b      	cmp	r3, r1
 8000e58:	d006      	beq.n	8000e68 <__eqsf2+0x48>
 8000e5a:	2001      	movs	r0, #1
 8000e5c:	2a00      	cmp	r2, #0
 8000e5e:	d1f3      	bne.n	8000e48 <__eqsf2+0x28>
 8000e60:	0028      	movs	r0, r5
 8000e62:	1e43      	subs	r3, r0, #1
 8000e64:	4198      	sbcs	r0, r3
 8000e66:	e7ef      	b.n	8000e48 <__eqsf2+0x28>
 8000e68:	2000      	movs	r0, #0
 8000e6a:	e7ed      	b.n	8000e48 <__eqsf2+0x28>

08000e6c <__gesf2>:
 8000e6c:	b570      	push	{r4, r5, r6, lr}
 8000e6e:	0042      	lsls	r2, r0, #1
 8000e70:	0245      	lsls	r5, r0, #9
 8000e72:	024e      	lsls	r6, r1, #9
 8000e74:	004c      	lsls	r4, r1, #1
 8000e76:	0fc3      	lsrs	r3, r0, #31
 8000e78:	0a6d      	lsrs	r5, r5, #9
 8000e7a:	0e12      	lsrs	r2, r2, #24
 8000e7c:	0a76      	lsrs	r6, r6, #9
 8000e7e:	0e24      	lsrs	r4, r4, #24
 8000e80:	0fc8      	lsrs	r0, r1, #31
 8000e82:	2aff      	cmp	r2, #255	; 0xff
 8000e84:	d01b      	beq.n	8000ebe <__gesf2+0x52>
 8000e86:	2cff      	cmp	r4, #255	; 0xff
 8000e88:	d00e      	beq.n	8000ea8 <__gesf2+0x3c>
 8000e8a:	2a00      	cmp	r2, #0
 8000e8c:	d11b      	bne.n	8000ec6 <__gesf2+0x5a>
 8000e8e:	2c00      	cmp	r4, #0
 8000e90:	d101      	bne.n	8000e96 <__gesf2+0x2a>
 8000e92:	2e00      	cmp	r6, #0
 8000e94:	d01c      	beq.n	8000ed0 <__gesf2+0x64>
 8000e96:	2d00      	cmp	r5, #0
 8000e98:	d00c      	beq.n	8000eb4 <__gesf2+0x48>
 8000e9a:	4283      	cmp	r3, r0
 8000e9c:	d01c      	beq.n	8000ed8 <__gesf2+0x6c>
 8000e9e:	2102      	movs	r1, #2
 8000ea0:	1e58      	subs	r0, r3, #1
 8000ea2:	4008      	ands	r0, r1
 8000ea4:	3801      	subs	r0, #1
 8000ea6:	bd70      	pop	{r4, r5, r6, pc}
 8000ea8:	2e00      	cmp	r6, #0
 8000eaa:	d122      	bne.n	8000ef2 <__gesf2+0x86>
 8000eac:	2a00      	cmp	r2, #0
 8000eae:	d1f4      	bne.n	8000e9a <__gesf2+0x2e>
 8000eb0:	2d00      	cmp	r5, #0
 8000eb2:	d1f2      	bne.n	8000e9a <__gesf2+0x2e>
 8000eb4:	2800      	cmp	r0, #0
 8000eb6:	d1f6      	bne.n	8000ea6 <__gesf2+0x3a>
 8000eb8:	2001      	movs	r0, #1
 8000eba:	4240      	negs	r0, r0
 8000ebc:	e7f3      	b.n	8000ea6 <__gesf2+0x3a>
 8000ebe:	2d00      	cmp	r5, #0
 8000ec0:	d117      	bne.n	8000ef2 <__gesf2+0x86>
 8000ec2:	2cff      	cmp	r4, #255	; 0xff
 8000ec4:	d0f0      	beq.n	8000ea8 <__gesf2+0x3c>
 8000ec6:	2c00      	cmp	r4, #0
 8000ec8:	d1e7      	bne.n	8000e9a <__gesf2+0x2e>
 8000eca:	2e00      	cmp	r6, #0
 8000ecc:	d1e5      	bne.n	8000e9a <__gesf2+0x2e>
 8000ece:	e7e6      	b.n	8000e9e <__gesf2+0x32>
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	2d00      	cmp	r5, #0
 8000ed4:	d0e7      	beq.n	8000ea6 <__gesf2+0x3a>
 8000ed6:	e7e2      	b.n	8000e9e <__gesf2+0x32>
 8000ed8:	42a2      	cmp	r2, r4
 8000eda:	dc05      	bgt.n	8000ee8 <__gesf2+0x7c>
 8000edc:	dbea      	blt.n	8000eb4 <__gesf2+0x48>
 8000ede:	42b5      	cmp	r5, r6
 8000ee0:	d802      	bhi.n	8000ee8 <__gesf2+0x7c>
 8000ee2:	d3e7      	bcc.n	8000eb4 <__gesf2+0x48>
 8000ee4:	2000      	movs	r0, #0
 8000ee6:	e7de      	b.n	8000ea6 <__gesf2+0x3a>
 8000ee8:	4243      	negs	r3, r0
 8000eea:	4158      	adcs	r0, r3
 8000eec:	0040      	lsls	r0, r0, #1
 8000eee:	3801      	subs	r0, #1
 8000ef0:	e7d9      	b.n	8000ea6 <__gesf2+0x3a>
 8000ef2:	2002      	movs	r0, #2
 8000ef4:	4240      	negs	r0, r0
 8000ef6:	e7d6      	b.n	8000ea6 <__gesf2+0x3a>

08000ef8 <__lesf2>:
 8000ef8:	b570      	push	{r4, r5, r6, lr}
 8000efa:	0042      	lsls	r2, r0, #1
 8000efc:	0245      	lsls	r5, r0, #9
 8000efe:	024e      	lsls	r6, r1, #9
 8000f00:	004c      	lsls	r4, r1, #1
 8000f02:	0fc3      	lsrs	r3, r0, #31
 8000f04:	0a6d      	lsrs	r5, r5, #9
 8000f06:	0e12      	lsrs	r2, r2, #24
 8000f08:	0a76      	lsrs	r6, r6, #9
 8000f0a:	0e24      	lsrs	r4, r4, #24
 8000f0c:	0fc8      	lsrs	r0, r1, #31
 8000f0e:	2aff      	cmp	r2, #255	; 0xff
 8000f10:	d00b      	beq.n	8000f2a <__lesf2+0x32>
 8000f12:	2cff      	cmp	r4, #255	; 0xff
 8000f14:	d00d      	beq.n	8000f32 <__lesf2+0x3a>
 8000f16:	2a00      	cmp	r2, #0
 8000f18:	d11f      	bne.n	8000f5a <__lesf2+0x62>
 8000f1a:	2c00      	cmp	r4, #0
 8000f1c:	d116      	bne.n	8000f4c <__lesf2+0x54>
 8000f1e:	2e00      	cmp	r6, #0
 8000f20:	d114      	bne.n	8000f4c <__lesf2+0x54>
 8000f22:	2000      	movs	r0, #0
 8000f24:	2d00      	cmp	r5, #0
 8000f26:	d010      	beq.n	8000f4a <__lesf2+0x52>
 8000f28:	e009      	b.n	8000f3e <__lesf2+0x46>
 8000f2a:	2d00      	cmp	r5, #0
 8000f2c:	d10c      	bne.n	8000f48 <__lesf2+0x50>
 8000f2e:	2cff      	cmp	r4, #255	; 0xff
 8000f30:	d113      	bne.n	8000f5a <__lesf2+0x62>
 8000f32:	2e00      	cmp	r6, #0
 8000f34:	d108      	bne.n	8000f48 <__lesf2+0x50>
 8000f36:	2a00      	cmp	r2, #0
 8000f38:	d008      	beq.n	8000f4c <__lesf2+0x54>
 8000f3a:	4283      	cmp	r3, r0
 8000f3c:	d012      	beq.n	8000f64 <__lesf2+0x6c>
 8000f3e:	2102      	movs	r1, #2
 8000f40:	1e58      	subs	r0, r3, #1
 8000f42:	4008      	ands	r0, r1
 8000f44:	3801      	subs	r0, #1
 8000f46:	e000      	b.n	8000f4a <__lesf2+0x52>
 8000f48:	2002      	movs	r0, #2
 8000f4a:	bd70      	pop	{r4, r5, r6, pc}
 8000f4c:	2d00      	cmp	r5, #0
 8000f4e:	d1f4      	bne.n	8000f3a <__lesf2+0x42>
 8000f50:	2800      	cmp	r0, #0
 8000f52:	d1fa      	bne.n	8000f4a <__lesf2+0x52>
 8000f54:	2001      	movs	r0, #1
 8000f56:	4240      	negs	r0, r0
 8000f58:	e7f7      	b.n	8000f4a <__lesf2+0x52>
 8000f5a:	2c00      	cmp	r4, #0
 8000f5c:	d1ed      	bne.n	8000f3a <__lesf2+0x42>
 8000f5e:	2e00      	cmp	r6, #0
 8000f60:	d1eb      	bne.n	8000f3a <__lesf2+0x42>
 8000f62:	e7ec      	b.n	8000f3e <__lesf2+0x46>
 8000f64:	42a2      	cmp	r2, r4
 8000f66:	dc05      	bgt.n	8000f74 <__lesf2+0x7c>
 8000f68:	dbf2      	blt.n	8000f50 <__lesf2+0x58>
 8000f6a:	42b5      	cmp	r5, r6
 8000f6c:	d802      	bhi.n	8000f74 <__lesf2+0x7c>
 8000f6e:	d3ef      	bcc.n	8000f50 <__lesf2+0x58>
 8000f70:	2000      	movs	r0, #0
 8000f72:	e7ea      	b.n	8000f4a <__lesf2+0x52>
 8000f74:	4243      	negs	r3, r0
 8000f76:	4158      	adcs	r0, r3
 8000f78:	0040      	lsls	r0, r0, #1
 8000f7a:	3801      	subs	r0, #1
 8000f7c:	e7e5      	b.n	8000f4a <__lesf2+0x52>
 8000f7e:	46c0      	nop			; (mov r8, r8)

08000f80 <initDrv8830>:
 8000f80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000f82:	2317      	movs	r3, #23
 8000f84:	2280      	movs	r2, #128	; 0x80
 8000f86:	446b      	add	r3, sp
 8000f88:	701a      	strb	r2, [r3, #0]
 8000f8a:	3a7b      	subs	r2, #123	; 0x7b
 8000f8c:	9202      	str	r2, [sp, #8]
 8000f8e:	3a04      	subs	r2, #4
 8000f90:	9300      	str	r3, [sp, #0]
 8000f92:	21c0      	movs	r1, #192	; 0xc0
 8000f94:	0013      	movs	r3, r2
 8000f96:	9201      	str	r2, [sp, #4]
 8000f98:	4802      	ldr	r0, [pc, #8]	; (8000fa4 <initDrv8830+0x24>)
 8000f9a:	f001 fdd3 	bl	8002b44 <HAL_I2C_Mem_Write>
 8000f9e:	b007      	add	sp, #28
 8000fa0:	bd00      	pop	{pc}
 8000fa2:	46c0      	nop			; (mov r8, r8)
 8000fa4:	20000290 	.word	0x20000290

08000fa8 <setMotor>:
 8000fa8:	2216      	movs	r2, #22
 8000faa:	237c      	movs	r3, #124	; 0x7c
 8000fac:	b570      	push	{r4, r5, r6, lr}
 8000fae:	2401      	movs	r4, #1
 8000fb0:	2505      	movs	r5, #5
 8000fb2:	b086      	sub	sp, #24
 8000fb4:	4e0d      	ldr	r6, [pc, #52]	; (8000fec <setMotor+0x44>)
 8000fb6:	446a      	add	r2, sp
 8000fb8:	4303      	orrs	r3, r0
 8000fba:	7013      	strb	r3, [r2, #0]
 8000fbc:	21c0      	movs	r1, #192	; 0xc0
 8000fbe:	0023      	movs	r3, r4
 8000fc0:	9502      	str	r5, [sp, #8]
 8000fc2:	9200      	str	r2, [sp, #0]
 8000fc4:	0030      	movs	r0, r6
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	9401      	str	r4, [sp, #4]
 8000fca:	f001 fdbb 	bl	8002b44 <HAL_I2C_Mem_Write>
 8000fce:	9502      	str	r5, [sp, #8]
 8000fd0:	3512      	adds	r5, #18
 8000fd2:	446d      	add	r5, sp
 8000fd4:	0023      	movs	r3, r4
 8000fd6:	0022      	movs	r2, r4
 8000fd8:	21c0      	movs	r1, #192	; 0xc0
 8000fda:	0030      	movs	r0, r6
 8000fdc:	9401      	str	r4, [sp, #4]
 8000fde:	9500      	str	r5, [sp, #0]
 8000fe0:	f001 fe8e 	bl	8002d00 <HAL_I2C_Mem_Read>
 8000fe4:	7828      	ldrb	r0, [r5, #0]
 8000fe6:	b006      	add	sp, #24
 8000fe8:	bd70      	pop	{r4, r5, r6, pc}
 8000fea:	46c0      	nop			; (mov r8, r8)
 8000fec:	20000290 	.word	0x20000290

08000ff0 <initEns160>:
 8000ff0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000ff2:	2217      	movs	r2, #23
 8000ff4:	2302      	movs	r3, #2
 8000ff6:	446a      	add	r2, sp
 8000ff8:	7013      	strb	r3, [r2, #0]
 8000ffa:	3308      	adds	r3, #8
 8000ffc:	9302      	str	r3, [sp, #8]
 8000ffe:	3b09      	subs	r3, #9
 8001000:	9200      	str	r2, [sp, #0]
 8001002:	21a4      	movs	r1, #164	; 0xa4
 8001004:	2210      	movs	r2, #16
 8001006:	9301      	str	r3, [sp, #4]
 8001008:	4802      	ldr	r0, [pc, #8]	; (8001014 <initEns160+0x24>)
 800100a:	f001 fd9b 	bl	8002b44 <HAL_I2C_Mem_Write>
 800100e:	b007      	add	sp, #28
 8001010:	bd00      	pop	{pc}
 8001012:	46c0      	nop			; (mov r8, r8)
 8001014:	20000290 	.word	0x20000290

08001018 <getCO2>:
 8001018:	b530      	push	{r4, r5, lr}
 800101a:	4d0a      	ldr	r5, [pc, #40]	; (8001044 <getCO2+0x2c>)
 800101c:	b087      	sub	sp, #28
 800101e:	0028      	movs	r0, r5
 8001020:	f001 fc16 	bl	8002850 <HAL_I2C_Init>
 8001024:	230a      	movs	r3, #10
 8001026:	ac05      	add	r4, sp, #20
 8001028:	9302      	str	r3, [sp, #8]
 800102a:	3b08      	subs	r3, #8
 800102c:	9301      	str	r3, [sp, #4]
 800102e:	2224      	movs	r2, #36	; 0x24
 8001030:	21a4      	movs	r1, #164	; 0xa4
 8001032:	0028      	movs	r0, r5
 8001034:	9400      	str	r4, [sp, #0]
 8001036:	3b01      	subs	r3, #1
 8001038:	f001 fe62 	bl	8002d00 <HAL_I2C_Mem_Read>
 800103c:	8820      	ldrh	r0, [r4, #0]
 800103e:	b007      	add	sp, #28
 8001040:	bd30      	pop	{r4, r5, pc}
 8001042:	46c0      	nop			; (mov r8, r8)
 8001044:	20000290 	.word	0x20000290

08001048 <motor_set>:

/* Private user code ----------------------------------------------*/
/* USER CODE BEGIN 0 */

/* if you motor run control you set drv8830 memory */
void motor_set(uint8_t voltage, uint8_t control){
 8001048:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	uint8_t set_command = voltage << 2 | control;
 800104a:	2217      	movs	r2, #23
	HAL_I2C_Mem_Write(&hi2c1, DRV8830_DeviceAddress, DRV8830_CONTROL, 1, &set_command, 1, 100);
 800104c:	2364      	movs	r3, #100	; 0x64
	uint8_t set_command = voltage << 2 | control;
 800104e:	0080      	lsls	r0, r0, #2
 8001050:	446a      	add	r2, sp
 8001052:	4308      	orrs	r0, r1
 8001054:	7010      	strb	r0, [r2, #0]
	HAL_I2C_Mem_Write(&hi2c1, DRV8830_DeviceAddress, DRV8830_CONTROL, 1, &set_command, 1, 100);
 8001056:	9302      	str	r3, [sp, #8]
 8001058:	3b63      	subs	r3, #99	; 0x63
 800105a:	9200      	str	r2, [sp, #0]
 800105c:	21c0      	movs	r1, #192	; 0xc0
 800105e:	2200      	movs	r2, #0
 8001060:	9301      	str	r3, [sp, #4]
 8001062:	4802      	ldr	r0, [pc, #8]	; (800106c <motor_set+0x24>)
 8001064:	f001 fd6e 	bl	8002b44 <HAL_I2C_Mem_Write>
}
 8001068:	b007      	add	sp, #28
 800106a:	bd00      	pop	{pc}
 800106c:	20000290 	.word	0x20000290

08001070 <motor_drive>:

void motor_drive(uint8_t* state, uint8_t* power){
 8001070:	0003      	movs	r3, r0
 8001072:	b510      	push	{r4, lr}
	if(*state == 1) motor_set(motor_power[*power], DRV8830_CW);
 8001074:	780a      	ldrb	r2, [r1, #0]
 8001076:	4905      	ldr	r1, [pc, #20]	; (800108c <motor_drive+0x1c>)
 8001078:	5c88      	ldrb	r0, [r1, r2]
 800107a:	7819      	ldrb	r1, [r3, #0]
 800107c:	2901      	cmp	r1, #1
 800107e:	d102      	bne.n	8001086 <motor_drive+0x16>
	else            motor_set(motor_power[*power], DRV8830_STOP);
 8001080:	f7ff ffe2 	bl	8001048 <motor_set>
}
 8001084:	bd10      	pop	{r4, pc}
	else            motor_set(motor_power[*power], DRV8830_STOP);
 8001086:	2100      	movs	r1, #0
 8001088:	e7fa      	b.n	8001080 <motor_drive+0x10>
 800108a:	46c0      	nop			; (mov r8, r8)
 800108c:	2000010c 	.word	0x2000010c

08001090 <BUZ>:

/* BUZZER run function */
void BUZ(BUZ_POWER_Typedef state){
 8001090:	0003      	movs	r3, r0
	if(state == buz_on) HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001092:	2100      	movs	r1, #0
void BUZ(BUZ_POWER_Typedef state){
 8001094:	b510      	push	{r4, lr}
 8001096:	4804      	ldr	r0, [pc, #16]	; (80010a8 <BUZ+0x18>)
	if(state == buz_on) HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001098:	2b01      	cmp	r3, #1
 800109a:	d102      	bne.n	80010a2 <BUZ+0x12>
 800109c:	f002 fcdc 	bl	8003a58 <HAL_TIM_PWM_Start>
	else                HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_1);
}
 80010a0:	bd10      	pop	{r4, pc}
	else                HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_1);
 80010a2:	f002 fcdd 	bl	8003a60 <HAL_TIM_PWM_Stop>
}
 80010a6:	e7fb      	b.n	80010a0 <BUZ+0x10>
 80010a8:	200002e4 	.word	0x200002e4

080010ac <get_sensor>:

/* return as memory have a values */
void* get_sensor(GET_SENSOR_Typedef mem){
 80010ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if(mem == get_sht41){
 80010ae:	2800      	cmp	r0, #0
 80010b0:	d10c      	bne.n	80010cc <get_sensor+0x20>
		SHT41_t* buf = (SHT41_t*)malloc(sizeof(SHT41_t));
 80010b2:	3008      	adds	r0, #8
 80010b4:	f003 f920 	bl	80042f8 <malloc>
		*buf = getTempSht41();
 80010b8:	466d      	mov	r5, sp
		SHT41_t* buf = (SHT41_t*)malloc(sizeof(SHT41_t));
 80010ba:	0004      	movs	r4, r0
		*buf = getTempSht41();
 80010bc:	0028      	movs	r0, r5
 80010be:	f000 ff9b 	bl	8001ff8 <getTempSht41>
 80010c2:	0023      	movs	r3, r4
 80010c4:	cd06      	ldmia	r5!, {r1, r2}
 80010c6:	c306      	stmia	r3!, {r1, r2}
	else{
		uint16_t* buf = (uint16_t*)malloc(sizeof(uint16_t));
		*buf = getCO2();
		return buf;
	}
}
 80010c8:	0020      	movs	r0, r4
 80010ca:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
		uint16_t* buf = (uint16_t*)malloc(sizeof(uint16_t));
 80010cc:	2002      	movs	r0, #2
 80010ce:	f003 f913 	bl	80042f8 <malloc>
 80010d2:	0004      	movs	r4, r0
		*buf = getCO2();
 80010d4:	f7ff ffa0 	bl	8001018 <getCO2>
 80010d8:	8020      	strh	r0, [r4, #0]
		return buf;
 80010da:	e7f5      	b.n	80010c8 <get_sensor+0x1c>

080010dc <free_addr>:

/* sensor values memory free and NULL reset */
void free_addr(void** address){
 80010dc:	b510      	push	{r4, lr}
 80010de:	0004      	movs	r4, r0
	free(*address);
 80010e0:	6800      	ldr	r0, [r0, #0]
 80010e2:	f003 f913 	bl	800430c <free>
	*address = NULL;
 80010e6:	2300      	movs	r3, #0
 80010e8:	6023      	str	r3, [r4, #0]
}
 80010ea:	bd10      	pop	{r4, pc}

080010ec <nextion_inst_set>:

/* nextion instruction set */
void nextion_inst_set(char* str){
 80010ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
	uint8_t end_cmd[3] = { 0xFF, 0xFF, 0xFF };
 80010ee:	2503      	movs	r5, #3
void nextion_inst_set(char* str){
 80010f0:	0004      	movs	r4, r0
	uint8_t end_cmd[3] = { 0xFF, 0xFF, 0xFF };
 80010f2:	002a      	movs	r2, r5
 80010f4:	490a      	ldr	r1, [pc, #40]	; (8001120 <nextion_inst_set+0x34>)
 80010f6:	a801      	add	r0, sp, #4
 80010f8:	f003 f912 	bl	8004320 <memcpy>
	HAL_UART_Transmit(&huart1, (uint8_t*)str, strlen(str), 100);
 80010fc:	0020      	movs	r0, r4
 80010fe:	f7ff f803 	bl	8000108 <strlen>
 8001102:	4e08      	ldr	r6, [pc, #32]	; (8001124 <nextion_inst_set+0x38>)
 8001104:	0021      	movs	r1, r4
 8001106:	b282      	uxth	r2, r0
 8001108:	2364      	movs	r3, #100	; 0x64
 800110a:	0030      	movs	r0, r6
 800110c:	f002 ff4d 	bl	8003faa <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1, end_cmd, 3, 100);
 8001110:	002a      	movs	r2, r5
 8001112:	0030      	movs	r0, r6
 8001114:	2364      	movs	r3, #100	; 0x64
 8001116:	a901      	add	r1, sp, #4
 8001118:	f002 ff47 	bl	8003faa <HAL_UART_Transmit>
}
 800111c:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
 800111e:	46c0      	nop			; (mov r8, r8)
 8001120:	08004cf0 	.word	0x08004cf0
 8001124:	20000324 	.word	0x20000324

08001128 <get_touch>:

/* get nextion LCD touch coordinate */
void get_touch(POS_Typedef* buf){
	HAL_StatusTypeDef res = HAL_OK;
	uint8_t rx_dat[8] = { 0, };
 8001128:	2300      	movs	r3, #0
void get_touch(POS_Typedef* buf){
 800112a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800112c:	0004      	movs	r4, r0

	nextion_inst_set("get tch0");
 800112e:	481b      	ldr	r0, [pc, #108]	; (800119c <get_touch+0x74>)
	uint8_t rx_dat[8] = { 0, };
 8001130:	9300      	str	r3, [sp, #0]
 8001132:	9301      	str	r3, [sp, #4]
	nextion_inst_set("get tch0");
 8001134:	f7ff ffda 	bl	80010ec <nextion_inst_set>
	res = HAL_UART_Receive(&huart1, rx_dat, 8, 100);
 8001138:	4d19      	ldr	r5, [pc, #100]	; (80011a0 <get_touch+0x78>)
 800113a:	2364      	movs	r3, #100	; 0x64
 800113c:	2208      	movs	r2, #8
 800113e:	4669      	mov	r1, sp
 8001140:	0028      	movs	r0, r5
 8001142:	f002 ff99 	bl	8004078 <HAL_UART_Receive>
	if(res == HAL_OK) { if(rx_dat[0] == 0x71) { buf->x = rx_dat[2] << 8 | rx_dat[1]; } }
 8001146:	2800      	cmp	r0, #0
 8001148:	d109      	bne.n	800115e <get_touch+0x36>
 800114a:	466b      	mov	r3, sp
 800114c:	781b      	ldrb	r3, [r3, #0]
 800114e:	2b71      	cmp	r3, #113	; 0x71
 8001150:	d105      	bne.n	800115e <get_touch+0x36>
 8001152:	466b      	mov	r3, sp
 8001154:	7859      	ldrb	r1, [r3, #1]
 8001156:	789b      	ldrb	r3, [r3, #2]
 8001158:	021b      	lsls	r3, r3, #8
 800115a:	430b      	orrs	r3, r1
 800115c:	8023      	strh	r3, [r4, #0]

	nextion_inst_set("get tch1");
 800115e:	4811      	ldr	r0, [pc, #68]	; (80011a4 <get_touch+0x7c>)
 8001160:	f7ff ffc4 	bl	80010ec <nextion_inst_set>
	res = HAL_UART_Receive(&huart1, rx_dat, 8, 100);
 8001164:	2364      	movs	r3, #100	; 0x64
 8001166:	2208      	movs	r2, #8
 8001168:	4669      	mov	r1, sp
 800116a:	0028      	movs	r0, r5
 800116c:	f002 ff84 	bl	8004078 <HAL_UART_Receive>
	if(res == HAL_OK) { if(rx_dat[0] == 0x71) { buf->y = rx_dat[2] << 8 | rx_dat[1]; } }
 8001170:	2800      	cmp	r0, #0
 8001172:	d109      	bne.n	8001188 <get_touch+0x60>
 8001174:	466b      	mov	r3, sp
 8001176:	781b      	ldrb	r3, [r3, #0]
 8001178:	2b71      	cmp	r3, #113	; 0x71
 800117a:	d105      	bne.n	8001188 <get_touch+0x60>
 800117c:	466b      	mov	r3, sp
 800117e:	7859      	ldrb	r1, [r3, #1]
 8001180:	789b      	ldrb	r3, [r3, #2]
 8001182:	021b      	lsls	r3, r3, #8
 8001184:	430b      	orrs	r3, r1
 8001186:	8063      	strh	r3, [r4, #2]

	if(buf->x > 0 && buf->y > 0) buf->touched = 1;
	else buf->touched = 0;
 8001188:	2300      	movs	r3, #0
	if(buf->x > 0 && buf->y > 0) buf->touched = 1;
 800118a:	8822      	ldrh	r2, [r4, #0]
 800118c:	429a      	cmp	r2, r3
 800118e:	d003      	beq.n	8001198 <get_touch+0x70>
 8001190:	8863      	ldrh	r3, [r4, #2]
 8001192:	1e5a      	subs	r2, r3, #1
 8001194:	4193      	sbcs	r3, r2
	else buf->touched = 0;
 8001196:	b2db      	uxtb	r3, r3
 8001198:	7123      	strb	r3, [r4, #4]
}
 800119a:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
 800119c:	08004cf4 	.word	0x08004cf4
 80011a0:	20000324 	.word	0x20000324
 80011a4:	08004cfd 	.word	0x08004cfd

080011a8 <get_slide>:

/* slide state set */
void get_slide(SLIDE_Typedef* buf, POS_Typedef* xy){
 80011a8:	b570      	push	{r4, r5, r6, lr}
	static POS_Typedef befo_touch       = { 0, 0, 0 }; // previous touch coordinate
	static POS_Typedef touch_coordinate = { 0, 0, 0 }; // save first touch coordinate

	if(befo_touch.touched != xy->touched){
 80011aa:	4d15      	ldr	r5, [pc, #84]	; (8001200 <get_slide+0x58>)
void get_slide(SLIDE_Typedef* buf, POS_Typedef* xy){
 80011ac:	000c      	movs	r4, r1
	if(befo_touch.touched != xy->touched){
 80011ae:	792b      	ldrb	r3, [r5, #4]
 80011b0:	7909      	ldrb	r1, [r1, #4]
void get_slide(SLIDE_Typedef* buf, POS_Typedef* xy){
 80011b2:	0006      	movs	r6, r0
	if(befo_touch.touched != xy->touched){
 80011b4:	428b      	cmp	r3, r1
 80011b6:	d01f      	beq.n	80011f8 <get_slide+0x50>
		/* if release touch this function run */
		if(xy->touched == 0){
 80011b8:	4812      	ldr	r0, [pc, #72]	; (8001204 <get_slide+0x5c>)
 80011ba:	2900      	cmp	r1, #0
 80011bc:	d117      	bne.n	80011ee <get_slide+0x46>
			if(touch_coordinate.y > befo_touch.y)       *buf = (touch_coordinate.y - befo_touch.y > 30) ? up_slide   : none;
 80011be:	8842      	ldrh	r2, [r0, #2]
 80011c0:	886b      	ldrh	r3, [r5, #2]
 80011c2:	429a      	cmp	r2, r3
 80011c4:	d90b      	bls.n	80011de <get_slide+0x36>
 80011c6:	1ad3      	subs	r3, r2, r3
 80011c8:	2201      	movs	r2, #1
 80011ca:	2b1e      	cmp	r3, #30
 80011cc:	dc00      	bgt.n	80011d0 <get_slide+0x28>
 80011ce:	1c0a      	adds	r2, r1, #0
 80011d0:	7032      	strb	r2, [r6, #0]
		}
		/* if touch this function run */
		else touch_coordinate = *xy;
	}
	else *buf  = none;
	befo_touch = *xy;
 80011d2:	0028      	movs	r0, r5
 80011d4:	2206      	movs	r2, #6
 80011d6:	0021      	movs	r1, r4
 80011d8:	f003 f8a2 	bl	8004320 <memcpy>
}
 80011dc:	bd70      	pop	{r4, r5, r6, pc}
			else if(befo_touch.y  > touch_coordinate.y) *buf = (befo_touch.y - touch_coordinate.y > 30) ? down_slide : none;
 80011de:	429a      	cmp	r2, r3
 80011e0:	d2f7      	bcs.n	80011d2 <get_slide+0x2a>
 80011e2:	1a9b      	subs	r3, r3, r2
 80011e4:	2b1e      	cmp	r3, #30
 80011e6:	dd00      	ble.n	80011ea <get_slide+0x42>
 80011e8:	2102      	movs	r1, #2
 80011ea:	7031      	strb	r1, [r6, #0]
 80011ec:	e7f1      	b.n	80011d2 <get_slide+0x2a>
		else touch_coordinate = *xy;
 80011ee:	2206      	movs	r2, #6
 80011f0:	0021      	movs	r1, r4
 80011f2:	f003 f895 	bl	8004320 <memcpy>
 80011f6:	e7ec      	b.n	80011d2 <get_slide+0x2a>
	else *buf  = none;
 80011f8:	2300      	movs	r3, #0
 80011fa:	7003      	strb	r3, [r0, #0]
 80011fc:	e7e9      	b.n	80011d2 <get_slide+0x2a>
 80011fe:	46c0      	nop			; (mov r8, r8)
 8001200:	2000021c 	.word	0x2000021c
 8001204:	200003b0 	.word	0x200003b0

08001208 <area_check>:

/* area touch check */
uint8_t area_check(POS_Typedef* curXY, AREA_Typedef* area){
	if(curXY->x >= area->x0 - 10 && curXY->x <= area->x1 + 10){
 8001208:	880a      	ldrh	r2, [r1, #0]
uint8_t area_check(POS_Typedef* curXY, AREA_Typedef* area){
 800120a:	b510      	push	{r4, lr}
	if(curXY->x >= area->x0 - 10 && curXY->x <= area->x1 + 10){
 800120c:	8804      	ldrh	r4, [r0, #0]
 800120e:	3a0a      	subs	r2, #10
uint8_t area_check(POS_Typedef* curXY, AREA_Typedef* area){
 8001210:	0003      	movs	r3, r0
			screen_update = (screen_update == 1) ? 0 : screen_update;
			buzM = (buzM == 0) ? 1 : buzM;
			return 1;
		}
	}
	return 0;
 8001212:	2000      	movs	r0, #0
	if(curXY->x >= area->x0 - 10 && curXY->x <= area->x1 + 10){
 8001214:	4294      	cmp	r4, r2
 8001216:	db1a      	blt.n	800124e <area_check+0x46>
 8001218:	888a      	ldrh	r2, [r1, #4]
 800121a:	320a      	adds	r2, #10
 800121c:	4294      	cmp	r4, r2
 800121e:	dc16      	bgt.n	800124e <area_check+0x46>
		if(curXY->y >= area->y0 - 10 && curXY->y <= area->y1 + 10){
 8001220:	885a      	ldrh	r2, [r3, #2]
 8001222:	884b      	ldrh	r3, [r1, #2]
 8001224:	3b0a      	subs	r3, #10
 8001226:	429a      	cmp	r2, r3
 8001228:	db11      	blt.n	800124e <area_check+0x46>
 800122a:	88cb      	ldrh	r3, [r1, #6]
 800122c:	330a      	adds	r3, #10
 800122e:	429a      	cmp	r2, r3
 8001230:	dc0d      	bgt.n	800124e <area_check+0x46>
			screen_update = (screen_update == 1) ? 0 : screen_update;
 8001232:	4a07      	ldr	r2, [pc, #28]	; (8001250 <area_check+0x48>)
 8001234:	7813      	ldrb	r3, [r2, #0]
 8001236:	2b01      	cmp	r3, #1
 8001238:	d100      	bne.n	800123c <area_check+0x34>
 800123a:	0003      	movs	r3, r0
 800123c:	7013      	strb	r3, [r2, #0]
			buzM = (buzM == 0) ? 1 : buzM;
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <area_check+0x4c>)
 8001240:	7819      	ldrb	r1, [r3, #0]
 8001242:	1c0a      	adds	r2, r1, #0
 8001244:	2900      	cmp	r1, #0
 8001246:	d100      	bne.n	800124a <area_check+0x42>
 8001248:	2201      	movs	r2, #1
 800124a:	2001      	movs	r0, #1
 800124c:	701a      	strb	r2, [r3, #0]
}
 800124e:	bd10      	pop	{r4, pc}
 8001250:	200003ae 	.word	0x200003ae
 8001254:	20000286 	.word	0x20000286

08001258 <segment_draw>:

/* segment draw */
void segment_draw(POS_Typedef* xy, uint8_t* data){
 8001258:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* segment 'a' draw */
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y, data[a] == 1 ? "BLACK" : "WHITE");
 800125a:	8802      	ldrh	r2, [r0, #0]
void segment_draw(POS_Typedef* xy, uint8_t* data){
 800125c:	0004      	movs	r4, r0
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y, data[a] == 1 ? "BLACK" : "WHITE");
 800125e:	8843      	ldrh	r3, [r0, #2]
 8001260:	7808      	ldrb	r0, [r1, #0]
void segment_draw(POS_Typedef* xy, uint8_t* data){
 8001262:	000e      	movs	r6, r1
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y, data[a] == 1 ? "BLACK" : "WHITE");
 8001264:	320a      	adds	r2, #10
 8001266:	4939      	ldr	r1, [pc, #228]	; (800134c <segment_draw+0xf4>)
 8001268:	2801      	cmp	r0, #1
 800126a:	d000      	beq.n	800126e <segment_draw+0x16>
 800126c:	4938      	ldr	r1, [pc, #224]	; (8001350 <segment_draw+0xf8>)
 800126e:	4d39      	ldr	r5, [pc, #228]	; (8001354 <segment_draw+0xfc>)
 8001270:	4f39      	ldr	r7, [pc, #228]	; (8001358 <segment_draw+0x100>)
 8001272:	9100      	str	r1, [sp, #0]
 8001274:	0028      	movs	r0, r5
 8001276:	0039      	movs	r1, r7
 8001278:	f003 f958 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 800127c:	0028      	movs	r0, r5
 800127e:	f7ff ff35 	bl	80010ec <nextion_inst_set>

	/* segment 'b' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x + 40, xy->y + 10, data[b] == 1 ? "BLACK" : "WHITE");
 8001282:	8822      	ldrh	r2, [r4, #0]
 8001284:	8863      	ldrh	r3, [r4, #2]
 8001286:	7870      	ldrb	r0, [r6, #1]
 8001288:	4930      	ldr	r1, [pc, #192]	; (800134c <segment_draw+0xf4>)
 800128a:	3228      	adds	r2, #40	; 0x28
 800128c:	330a      	adds	r3, #10
 800128e:	2801      	cmp	r0, #1
 8001290:	d000      	beq.n	8001294 <segment_draw+0x3c>
 8001292:	492f      	ldr	r1, [pc, #188]	; (8001350 <segment_draw+0xf8>)
 8001294:	9100      	str	r1, [sp, #0]
 8001296:	0028      	movs	r0, r5
 8001298:	4930      	ldr	r1, [pc, #192]	; (800135c <segment_draw+0x104>)
 800129a:	f003 f947 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 800129e:	0028      	movs	r0, r5
 80012a0:	f7ff ff24 	bl	80010ec <nextion_inst_set>

	/* segment 'c' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x + 40, xy->y + 50, data[c] == 1 ? "BLACK" : "WHITE");
 80012a4:	8822      	ldrh	r2, [r4, #0]
 80012a6:	8863      	ldrh	r3, [r4, #2]
 80012a8:	78b0      	ldrb	r0, [r6, #2]
 80012aa:	4928      	ldr	r1, [pc, #160]	; (800134c <segment_draw+0xf4>)
 80012ac:	3228      	adds	r2, #40	; 0x28
 80012ae:	3332      	adds	r3, #50	; 0x32
 80012b0:	2801      	cmp	r0, #1
 80012b2:	d000      	beq.n	80012b6 <segment_draw+0x5e>
 80012b4:	4926      	ldr	r1, [pc, #152]	; (8001350 <segment_draw+0xf8>)
 80012b6:	9100      	str	r1, [sp, #0]
 80012b8:	0028      	movs	r0, r5
 80012ba:	4928      	ldr	r1, [pc, #160]	; (800135c <segment_draw+0x104>)
 80012bc:	f003 f936 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 80012c0:	0028      	movs	r0, r5
 80012c2:	f7ff ff13 	bl	80010ec <nextion_inst_set>

	/* segment 'd' draw */
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y + 80, data[d] == 1 ? "BLACK" : "WHITE");
 80012c6:	8822      	ldrh	r2, [r4, #0]
 80012c8:	8863      	ldrh	r3, [r4, #2]
 80012ca:	78f0      	ldrb	r0, [r6, #3]
 80012cc:	491f      	ldr	r1, [pc, #124]	; (800134c <segment_draw+0xf4>)
 80012ce:	320a      	adds	r2, #10
 80012d0:	3350      	adds	r3, #80	; 0x50
 80012d2:	2801      	cmp	r0, #1
 80012d4:	d000      	beq.n	80012d8 <segment_draw+0x80>
 80012d6:	491e      	ldr	r1, [pc, #120]	; (8001350 <segment_draw+0xf8>)
 80012d8:	9100      	str	r1, [sp, #0]
 80012da:	0028      	movs	r0, r5
 80012dc:	0039      	movs	r1, r7
 80012de:	f003 f925 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 80012e2:	0028      	movs	r0, r5
 80012e4:	f7ff ff02 	bl	80010ec <nextion_inst_set>

	/* segment 'e' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x, xy->y + 50, data[e] == 1 ? "BLACK" : "WHITE");
 80012e8:	8863      	ldrh	r3, [r4, #2]
 80012ea:	7930      	ldrb	r0, [r6, #4]
 80012ec:	8822      	ldrh	r2, [r4, #0]
 80012ee:	4917      	ldr	r1, [pc, #92]	; (800134c <segment_draw+0xf4>)
 80012f0:	3332      	adds	r3, #50	; 0x32
 80012f2:	2801      	cmp	r0, #1
 80012f4:	d000      	beq.n	80012f8 <segment_draw+0xa0>
 80012f6:	4916      	ldr	r1, [pc, #88]	; (8001350 <segment_draw+0xf8>)
 80012f8:	9100      	str	r1, [sp, #0]
 80012fa:	0028      	movs	r0, r5
 80012fc:	4917      	ldr	r1, [pc, #92]	; (800135c <segment_draw+0x104>)
 80012fe:	f003 f915 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001302:	0028      	movs	r0, r5
 8001304:	f7ff fef2 	bl	80010ec <nextion_inst_set>

	/* segment 'f' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x, xy->y + 10, data[f] == 1 ? "BLACK" : "WHITE");
 8001308:	8863      	ldrh	r3, [r4, #2]
 800130a:	7970      	ldrb	r0, [r6, #5]
 800130c:	8822      	ldrh	r2, [r4, #0]
 800130e:	490f      	ldr	r1, [pc, #60]	; (800134c <segment_draw+0xf4>)
 8001310:	330a      	adds	r3, #10
 8001312:	2801      	cmp	r0, #1
 8001314:	d000      	beq.n	8001318 <segment_draw+0xc0>
 8001316:	490e      	ldr	r1, [pc, #56]	; (8001350 <segment_draw+0xf8>)
 8001318:	9100      	str	r1, [sp, #0]
 800131a:	0028      	movs	r0, r5
 800131c:	490f      	ldr	r1, [pc, #60]	; (800135c <segment_draw+0x104>)
 800131e:	f003 f905 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001322:	0028      	movs	r0, r5
 8001324:	f7ff fee2 	bl	80010ec <nextion_inst_set>

	/* segment 'g' draw */
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y + 40, data[g] == 1 ? "BLACK" : "WHITE");
 8001328:	8822      	ldrh	r2, [r4, #0]
 800132a:	8863      	ldrh	r3, [r4, #2]
 800132c:	79b0      	ldrb	r0, [r6, #6]
 800132e:	4907      	ldr	r1, [pc, #28]	; (800134c <segment_draw+0xf4>)
 8001330:	320a      	adds	r2, #10
 8001332:	3328      	adds	r3, #40	; 0x28
 8001334:	2801      	cmp	r0, #1
 8001336:	d000      	beq.n	800133a <segment_draw+0xe2>
 8001338:	4905      	ldr	r1, [pc, #20]	; (8001350 <segment_draw+0xf8>)
 800133a:	0028      	movs	r0, r5
 800133c:	9100      	str	r1, [sp, #0]
 800133e:	0039      	movs	r1, r7
 8001340:	f003 f8f4 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001344:	0028      	movs	r0, r5
 8001346:	f7ff fed1 	bl	80010ec <nextion_inst_set>
}
 800134a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800134c:	08004e9d 	.word	0x08004e9d
 8001350:	08005239 	.word	0x08005239
 8001354:	20000222 	.word	0x20000222
 8001358:	08004d06 	.word	0x08004d06
 800135c:	08004d1a 	.word	0x08004d1a

08001360 <value_put>:

/* segment draw all in one */
void value_put(uint8_t* data, DISPLAY_MENU_Typedef menu, POS_Typedef* xy){
 8001360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001362:	0007      	movs	r7, r0
 8001364:	b085      	sub	sp, #20
	POS_Typedef buf = *xy;
 8001366:	ac02      	add	r4, sp, #8
void value_put(uint8_t* data, DISPLAY_MENU_Typedef menu, POS_Typedef* xy){
 8001368:	000d      	movs	r5, r1
	POS_Typedef buf = *xy;
 800136a:	0020      	movs	r0, r4
void value_put(uint8_t* data, DISPLAY_MENU_Typedef menu, POS_Typedef* xy){
 800136c:	0011      	movs	r1, r2
	POS_Typedef buf = *xy;
 800136e:	2206      	movs	r2, #6
 8001370:	f002 ffd6 	bl	8004320 <memcpy>

	if(*data / 10 > 0) segment_draw(&buf, (uint8_t*)&segment_data[*data / 10]);
 8001374:	7838      	ldrb	r0, [r7, #0]
 8001376:	4e1b      	ldr	r6, [pc, #108]	; (80013e4 <value_put+0x84>)
 8001378:	2809      	cmp	r0, #9
 800137a:	d92a      	bls.n	80013d2 <value_put+0x72>
 800137c:	210a      	movs	r1, #10
 800137e:	f7fe fedf 	bl	8000140 <__udivsi3>
 8001382:	2107      	movs	r1, #7
 8001384:	b2c0      	uxtb	r0, r0
 8001386:	4341      	muls	r1, r0
 8001388:	1871      	adds	r1, r6, r1
	else               segment_draw(&buf, (uint8_t*)&segment_data[10]);
 800138a:	0020      	movs	r0, r4
 800138c:	f7ff ff64 	bl	8001258 <segment_draw>
	buf.x += 60;
 8001390:	8823      	ldrh	r3, [r4, #0]
	segment_draw(&buf, (uint8_t*)&segment_data[*data % 10]);
 8001392:	7838      	ldrb	r0, [r7, #0]
	buf.x += 60;
 8001394:	333c      	adds	r3, #60	; 0x3c
 8001396:	8023      	strh	r3, [r4, #0]
	segment_draw(&buf, (uint8_t*)&segment_data[*data % 10]);
 8001398:	210a      	movs	r1, #10
 800139a:	f7fe ff57 	bl	800024c <__aeabi_uidivmod>
 800139e:	b2cb      	uxtb	r3, r1
 80013a0:	2107      	movs	r1, #7
 80013a2:	4359      	muls	r1, r3
 80013a4:	0020      	movs	r0, r4
 80013a6:	1871      	adds	r1, r6, r1
 80013a8:	f7ff ff56 	bl	8001258 <segment_draw>

	buf.x += 60;
 80013ac:	8822      	ldrh	r2, [r4, #0]
 80013ae:	8863      	ldrh	r3, [r4, #2]
 80013b0:	323c      	adds	r2, #60	; 0x3c
 80013b2:	b292      	uxth	r2, r2
 80013b4:	8022      	strh	r2, [r4, #0]
	if(menu == temp_display) sprintf(bf, "xstr %d,%d,50,90,0,BLACK,WHITE,0,0,1,\"%cC\"", buf.x, buf.y, 0xb0);
 80013b6:	4c0c      	ldr	r4, [pc, #48]	; (80013e8 <value_put+0x88>)
 80013b8:	2d00      	cmp	r5, #0
 80013ba:	d10d      	bne.n	80013d8 <value_put+0x78>
 80013bc:	21b0      	movs	r1, #176	; 0xb0
 80013be:	0020      	movs	r0, r4
 80013c0:	9100      	str	r1, [sp, #0]
 80013c2:	490a      	ldr	r1, [pc, #40]	; (80013ec <value_put+0x8c>)
 80013c4:	f003 f8b2 	bl	800452c <siprintf>
	else                     sprintf(bf, "xstr %d,%d,50,90,0,BLACK,WHITE,0,3,1,\"s later\"", buf.x, buf.y);
	nextion_inst_set(bf);
 80013c8:	0020      	movs	r0, r4
 80013ca:	f7ff fe8f 	bl	80010ec <nextion_inst_set>
}
 80013ce:	b005      	add	sp, #20
 80013d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	else               segment_draw(&buf, (uint8_t*)&segment_data[10]);
 80013d2:	0031      	movs	r1, r6
 80013d4:	3146      	adds	r1, #70	; 0x46
 80013d6:	e7d8      	b.n	800138a <value_put+0x2a>
	else                     sprintf(bf, "xstr %d,%d,50,90,0,BLACK,WHITE,0,3,1,\"s later\"", buf.x, buf.y);
 80013d8:	0020      	movs	r0, r4
 80013da:	4905      	ldr	r1, [pc, #20]	; (80013f0 <value_put+0x90>)
 80013dc:	f003 f8a6 	bl	800452c <siprintf>
 80013e0:	e7f2      	b.n	80013c8 <value_put+0x68>
 80013e2:	46c0      	nop			; (mov r8, r8)
 80013e4:	20000111 	.word	0x20000111
 80013e8:	20000222 	.word	0x20000222
 80013ec:	08004d2e 	.word	0x08004d2e
 80013f0:	08004d59 	.word	0x08004d59

080013f4 <wind_power_draw>:

/* basic y range 20, 20++ */
/* member to member distance is 20pixcel */
void wind_power_draw(uint8_t* data){
 80013f4:	b570      	push	{r4, r5, r6, lr}
 80013f6:	0006      	movs	r6, r0
	/* sky blue 22271 */

	/* 1. figure */
	sprintf(bf, "fill 320,170-20,10,20,%s", *data >= 0 ? "22271" : "WHITE");
 80013f8:	4c39      	ldr	r4, [pc, #228]	; (80014e0 <wind_power_draw+0xec>)
 80013fa:	4d3a      	ldr	r5, [pc, #232]	; (80014e4 <wind_power_draw+0xf0>)
 80013fc:	493a      	ldr	r1, [pc, #232]	; (80014e8 <wind_power_draw+0xf4>)
 80013fe:	002a      	movs	r2, r5
 8001400:	0020      	movs	r0, r4
 8001402:	f003 f893 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001406:	0020      	movs	r0, r4
 8001408:	f7ff fe70 	bl	80010ec <nextion_inst_set>
	sprintf(bf, "cirs 325,170-20,5,%s",     *data >= 0 ? "22271" : "WHITE");
 800140c:	002a      	movs	r2, r5
 800140e:	4937      	ldr	r1, [pc, #220]	; (80014ec <wind_power_draw+0xf8>)
 8001410:	0020      	movs	r0, r4
 8001412:	f003 f88b 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001416:	0020      	movs	r0, r4
 8001418:	f7ff fe68 	bl	80010ec <nextion_inst_set>

	/* 2. figure */
	sprintf(bf, "fill 340,170-30,10,30,%s", *data >= 1 ? "22271" : "WHITE");
 800141c:	7833      	ldrb	r3, [r6, #0]
 800141e:	002a      	movs	r2, r5
 8001420:	2b00      	cmp	r3, #0
 8001422:	d100      	bne.n	8001426 <wind_power_draw+0x32>
 8001424:	4a32      	ldr	r2, [pc, #200]	; (80014f0 <wind_power_draw+0xfc>)
 8001426:	4933      	ldr	r1, [pc, #204]	; (80014f4 <wind_power_draw+0x100>)
 8001428:	0020      	movs	r0, r4
 800142a:	f003 f87f 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 800142e:	0020      	movs	r0, r4
 8001430:	f7ff fe5c 	bl	80010ec <nextion_inst_set>
	sprintf(bf, "cirs 345,170-30,5,%s",     *data >= 1 ? "22271" : "WHITE");
 8001434:	7833      	ldrb	r3, [r6, #0]
 8001436:	002a      	movs	r2, r5
 8001438:	2b00      	cmp	r3, #0
 800143a:	d100      	bne.n	800143e <wind_power_draw+0x4a>
 800143c:	4a2c      	ldr	r2, [pc, #176]	; (80014f0 <wind_power_draw+0xfc>)
 800143e:	492e      	ldr	r1, [pc, #184]	; (80014f8 <wind_power_draw+0x104>)
 8001440:	0020      	movs	r0, r4
 8001442:	f003 f873 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001446:	0020      	movs	r0, r4
 8001448:	f7ff fe50 	bl	80010ec <nextion_inst_set>

	/* 3. figure */
	sprintf(bf, "fill 360,170-40,10,40,%s", *data >= 2 ? "22271" : "WHITE");
 800144c:	7833      	ldrb	r3, [r6, #0]
 800144e:	002a      	movs	r2, r5
 8001450:	2b01      	cmp	r3, #1
 8001452:	d800      	bhi.n	8001456 <wind_power_draw+0x62>
 8001454:	4a26      	ldr	r2, [pc, #152]	; (80014f0 <wind_power_draw+0xfc>)
 8001456:	4929      	ldr	r1, [pc, #164]	; (80014fc <wind_power_draw+0x108>)
 8001458:	0020      	movs	r0, r4
 800145a:	f003 f867 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 800145e:	0020      	movs	r0, r4
 8001460:	f7ff fe44 	bl	80010ec <nextion_inst_set>
	sprintf(bf, "cirs 365,170-40,5,%s",     *data >= 2 ? "22271" : "WHITE");
 8001464:	7833      	ldrb	r3, [r6, #0]
 8001466:	002a      	movs	r2, r5
 8001468:	2b01      	cmp	r3, #1
 800146a:	d800      	bhi.n	800146e <wind_power_draw+0x7a>
 800146c:	4a20      	ldr	r2, [pc, #128]	; (80014f0 <wind_power_draw+0xfc>)
 800146e:	4924      	ldr	r1, [pc, #144]	; (8001500 <wind_power_draw+0x10c>)
 8001470:	0020      	movs	r0, r4
 8001472:	f003 f85b 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001476:	0020      	movs	r0, r4
 8001478:	f7ff fe38 	bl	80010ec <nextion_inst_set>

	/* 4. figure */
	sprintf(bf, "fill 380,170-50,10,50,%s", *data >= 3 ? "22271" : "WHITE");
 800147c:	7833      	ldrb	r3, [r6, #0]
 800147e:	002a      	movs	r2, r5
 8001480:	2b02      	cmp	r3, #2
 8001482:	d800      	bhi.n	8001486 <wind_power_draw+0x92>
 8001484:	4a1a      	ldr	r2, [pc, #104]	; (80014f0 <wind_power_draw+0xfc>)
 8001486:	491f      	ldr	r1, [pc, #124]	; (8001504 <wind_power_draw+0x110>)
 8001488:	0020      	movs	r0, r4
 800148a:	f003 f84f 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 800148e:	0020      	movs	r0, r4
 8001490:	f7ff fe2c 	bl	80010ec <nextion_inst_set>
	sprintf(bf, "cirs 385,170-50,5,%s",     *data >= 3 ? "22271" : "WHITE");
 8001494:	7833      	ldrb	r3, [r6, #0]
 8001496:	002a      	movs	r2, r5
 8001498:	2b02      	cmp	r3, #2
 800149a:	d800      	bhi.n	800149e <wind_power_draw+0xaa>
 800149c:	4a14      	ldr	r2, [pc, #80]	; (80014f0 <wind_power_draw+0xfc>)
 800149e:	491a      	ldr	r1, [pc, #104]	; (8001508 <wind_power_draw+0x114>)
 80014a0:	0020      	movs	r0, r4
 80014a2:	f003 f843 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 80014a6:	0020      	movs	r0, r4
 80014a8:	f7ff fe20 	bl	80010ec <nextion_inst_set>

	/* 5. figure */
	sprintf(bf, "fill 400,170-60,10,60,%s", *data >= 4 ? "22271" : "WHITE");
 80014ac:	7833      	ldrb	r3, [r6, #0]
 80014ae:	002a      	movs	r2, r5
 80014b0:	2b03      	cmp	r3, #3
 80014b2:	d800      	bhi.n	80014b6 <wind_power_draw+0xc2>
 80014b4:	4a0e      	ldr	r2, [pc, #56]	; (80014f0 <wind_power_draw+0xfc>)
 80014b6:	4915      	ldr	r1, [pc, #84]	; (800150c <wind_power_draw+0x118>)
 80014b8:	0020      	movs	r0, r4
 80014ba:	f003 f837 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 80014be:	0020      	movs	r0, r4
 80014c0:	f7ff fe14 	bl	80010ec <nextion_inst_set>
	sprintf(bf, "cirs 405,170-60,5,%s",     *data >= 4 ? "22271" : "WHITE");
 80014c4:	7833      	ldrb	r3, [r6, #0]
 80014c6:	002a      	movs	r2, r5
 80014c8:	2b03      	cmp	r3, #3
 80014ca:	d800      	bhi.n	80014ce <wind_power_draw+0xda>
 80014cc:	4a08      	ldr	r2, [pc, #32]	; (80014f0 <wind_power_draw+0xfc>)
 80014ce:	4910      	ldr	r1, [pc, #64]	; (8001510 <wind_power_draw+0x11c>)
 80014d0:	0020      	movs	r0, r4
 80014d2:	f003 f82b 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 80014d6:	0020      	movs	r0, r4
 80014d8:	f7ff fe08 	bl	80010ec <nextion_inst_set>
}
 80014dc:	bd70      	pop	{r4, r5, r6, pc}
 80014de:	46c0      	nop			; (mov r8, r8)
 80014e0:	20000222 	.word	0x20000222
 80014e4:	08004d88 	.word	0x08004d88
 80014e8:	08004d8e 	.word	0x08004d8e
 80014ec:	08004da7 	.word	0x08004da7
 80014f0:	08005239 	.word	0x08005239
 80014f4:	08004dbc 	.word	0x08004dbc
 80014f8:	08004dd5 	.word	0x08004dd5
 80014fc:	08004dea 	.word	0x08004dea
 8001500:	08004e03 	.word	0x08004e03
 8001504:	08004e18 	.word	0x08004e18
 8001508:	08004e31 	.word	0x08004e31
 800150c:	08004e46 	.word	0x08004e46
 8001510:	08004e5f 	.word	0x08004e5f

08001514 <power_switch_draw>:

/* power switch draw */
void power_switch_draw(void){
 8001514:	b510      	push	{r4, lr}
	nextion_inst_set("fill 180,180,130,92,65093");
 8001516:	4808      	ldr	r0, [pc, #32]	; (8001538 <power_switch_draw+0x24>)
 8001518:	f7ff fde8 	bl	80010ec <nextion_inst_set>

	nextion_inst_set("cir 245,226,20,BLACK");
 800151c:	4807      	ldr	r0, [pc, #28]	; (800153c <power_switch_draw+0x28>)
 800151e:	f7ff fde5 	bl	80010ec <nextion_inst_set>

	nextion_inst_set("fill 245-10,226-30,20,30,65093");
 8001522:	4807      	ldr	r0, [pc, #28]	; (8001540 <power_switch_draw+0x2c>)
 8001524:	f7ff fde2 	bl	80010ec <nextion_inst_set>
	nextion_inst_set("fill 245-5,226-25,10,25,BLACK");
 8001528:	4806      	ldr	r0, [pc, #24]	; (8001544 <power_switch_draw+0x30>)
 800152a:	f7ff fddf 	bl	80010ec <nextion_inst_set>

	nextion_inst_set("draw 180,180,180+130,272,BLACK");
 800152e:	4806      	ldr	r0, [pc, #24]	; (8001548 <power_switch_draw+0x34>)
 8001530:	f7ff fddc 	bl	80010ec <nextion_inst_set>
}
 8001534:	bd10      	pop	{r4, pc}
 8001536:	46c0      	nop			; (mov r8, r8)
 8001538:	08004e74 	.word	0x08004e74
 800153c:	08004e8e 	.word	0x08004e8e
 8001540:	08004ea3 	.word	0x08004ea3
 8001544:	08004ec2 	.word	0x08004ec2
 8001548:	08004ee0 	.word	0x08004ee0

0800154c <button_draw>:

/* button draw merge (lower menu button`s draw) */
void button_draw(BUTTON_DATA_Typedef* data,	LOWER_MENU_Typedef state){
 800154c:	b573      	push	{r0, r1, r4, r5, r6, lr}
	/* have two floor button draw */
	if(state == power_set_state){
		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 800154e:	8802      	ldrh	r2, [r0, #0]
void button_draw(BUTTON_DATA_Typedef* data,	LOWER_MENU_Typedef state){
 8001550:	0004      	movs	r4, r0
		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 8001552:	8843      	ldrh	r3, [r0, #2]
 8001554:	4d47      	ldr	r5, [pc, #284]	; (8001674 <button_draw+0x128>)
	if(state == power_set_state){
 8001556:	2900      	cmp	r1, #0
 8001558:	d127      	bne.n	80015aa <button_draw+0x5e>
		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 800155a:	6981      	ldr	r1, [r0, #24]
 800155c:	4e46      	ldr	r6, [pc, #280]	; (8001678 <button_draw+0x12c>)
 800155e:	9101      	str	r1, [sp, #4]
 8001560:	6a01      	ldr	r1, [r0, #32]
 8001562:	0028      	movs	r0, r5
 8001564:	9100      	str	r1, [sp, #0]
 8001566:	0031      	movs	r1, r6
 8001568:	f002 ffe0 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 800156c:	0028      	movs	r0, r5
 800156e:	f7ff fdbd 	bl	80010ec <nextion_inst_set>

		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0 + 20, data->color, data->second_string);
 8001572:	69e1      	ldr	r1, [r4, #28]
 8001574:	8863      	ldrh	r3, [r4, #2]
 8001576:	9101      	str	r1, [sp, #4]
 8001578:	6a21      	ldr	r1, [r4, #32]
 800157a:	8822      	ldrh	r2, [r4, #0]
 800157c:	3314      	adds	r3, #20
 800157e:	9100      	str	r1, [sp, #0]
		nextion_inst_set(bf);

		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y1, data->right_area.x1, (data->right_area.y0 + data->right_area.y1) / 2);
		nextion_inst_set(bf);

		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y0, data->right_area.x0, data->right_area.y1);
 8001580:	0031      	movs	r1, r6
		nextion_inst_set(bf);
	}
	/* basic button draw */
	else if(state == alarm_set_state){
		sprintf(bf, "xstr %d,%d,100,40,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 8001582:	0028      	movs	r0, r5
 8001584:	f002 ffd2 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 8001588:	0028      	movs	r0, r5
 800158a:	f7ff fdaf 	bl	80010ec <nextion_inst_set>
	}

	sprintf(bf, "draw %d,%d,%d,%d,BLACK", data->area.x0, data->area.y0, data->area.x1, data->area.y1);
 800158e:	88e1      	ldrh	r1, [r4, #6]
 8001590:	0028      	movs	r0, r5
 8001592:	9101      	str	r1, [sp, #4]
 8001594:	88a1      	ldrh	r1, [r4, #4]
 8001596:	8863      	ldrh	r3, [r4, #2]
 8001598:	8822      	ldrh	r2, [r4, #0]
 800159a:	9100      	str	r1, [sp, #0]
 800159c:	4937      	ldr	r1, [pc, #220]	; (800167c <button_draw+0x130>)
 800159e:	f002 ffc5 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 80015a2:	0028      	movs	r0, r5
 80015a4:	f7ff fda2 	bl	80010ec <nextion_inst_set>
}
 80015a8:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
	else if(state == temp_set_state){
 80015aa:	2901      	cmp	r1, #1
 80015ac:	d159      	bne.n	8001662 <button_draw+0x116>
		sprintf(bf, "xstr %d,%d,140,40,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 80015ae:	6981      	ldr	r1, [r0, #24]
 80015b0:	9101      	str	r1, [sp, #4]
 80015b2:	6a01      	ldr	r1, [r0, #32]
 80015b4:	0028      	movs	r0, r5
 80015b6:	9100      	str	r1, [sp, #0]
 80015b8:	4931      	ldr	r1, [pc, #196]	; (8001680 <button_draw+0x134>)
 80015ba:	f002 ffb7 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 80015be:	0028      	movs	r0, r5
 80015c0:	f7ff fd94 	bl	80010ec <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->left_area.x0, (data->left_area.y0 + data->left_area.y1) / 2, data->left_area.x1, data->left_area.y0);
 80015c4:	8961      	ldrh	r1, [r4, #10]
 80015c6:	89e3      	ldrh	r3, [r4, #14]
 80015c8:	4e2e      	ldr	r6, [pc, #184]	; (8001684 <button_draw+0x138>)
 80015ca:	185b      	adds	r3, r3, r1
 80015cc:	9101      	str	r1, [sp, #4]
 80015ce:	89a1      	ldrh	r1, [r4, #12]
 80015d0:	8922      	ldrh	r2, [r4, #8]
 80015d2:	105b      	asrs	r3, r3, #1
 80015d4:	9100      	str	r1, [sp, #0]
 80015d6:	0028      	movs	r0, r5
 80015d8:	0031      	movs	r1, r6
 80015da:	f002 ffa7 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 80015de:	0028      	movs	r0, r5
 80015e0:	f7ff fd84 	bl	80010ec <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->left_area.x0, (data->left_area.y0 + data->left_area.y1) / 2, data->left_area.x1, data->left_area.y1);
 80015e4:	89e1      	ldrh	r1, [r4, #14]
 80015e6:	8963      	ldrh	r3, [r4, #10]
 80015e8:	9101      	str	r1, [sp, #4]
 80015ea:	185b      	adds	r3, r3, r1
 80015ec:	89a1      	ldrh	r1, [r4, #12]
 80015ee:	8922      	ldrh	r2, [r4, #8]
 80015f0:	105b      	asrs	r3, r3, #1
 80015f2:	9100      	str	r1, [sp, #0]
 80015f4:	0028      	movs	r0, r5
 80015f6:	0031      	movs	r1, r6
 80015f8:	f002 ff98 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 80015fc:	0028      	movs	r0, r5
 80015fe:	f7ff fd75 	bl	80010ec <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->left_area.x1, data->left_area.y0, data->left_area.x1, data->left_area.y1);
 8001602:	89a2      	ldrh	r2, [r4, #12]
 8001604:	89e1      	ldrh	r1, [r4, #14]
 8001606:	8963      	ldrh	r3, [r4, #10]
 8001608:	9200      	str	r2, [sp, #0]
 800160a:	9101      	str	r1, [sp, #4]
 800160c:	0028      	movs	r0, r5
 800160e:	0031      	movs	r1, r6
 8001610:	f002 ff8c 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 8001614:	0028      	movs	r0, r5
 8001616:	f7ff fd69 	bl	80010ec <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y0, data->right_area.x1, (data->right_area.y0 + data->right_area.y1) / 2);
 800161a:	8a63      	ldrh	r3, [r4, #18]
 800161c:	8ae1      	ldrh	r1, [r4, #22]
 800161e:	8a22      	ldrh	r2, [r4, #16]
 8001620:	18c9      	adds	r1, r1, r3
 8001622:	1049      	asrs	r1, r1, #1
 8001624:	9101      	str	r1, [sp, #4]
 8001626:	8aa1      	ldrh	r1, [r4, #20]
 8001628:	0028      	movs	r0, r5
 800162a:	9100      	str	r1, [sp, #0]
 800162c:	0031      	movs	r1, r6
 800162e:	f002 ff7d 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 8001632:	0028      	movs	r0, r5
 8001634:	f7ff fd5a 	bl	80010ec <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y1, data->right_area.x1, (data->right_area.y0 + data->right_area.y1) / 2);
 8001638:	8ae3      	ldrh	r3, [r4, #22]
 800163a:	8a61      	ldrh	r1, [r4, #18]
 800163c:	8a22      	ldrh	r2, [r4, #16]
 800163e:	18c9      	adds	r1, r1, r3
 8001640:	1049      	asrs	r1, r1, #1
 8001642:	9101      	str	r1, [sp, #4]
 8001644:	8aa1      	ldrh	r1, [r4, #20]
 8001646:	0028      	movs	r0, r5
 8001648:	9100      	str	r1, [sp, #0]
 800164a:	0031      	movs	r1, r6
 800164c:	f002 ff6e 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 8001650:	0028      	movs	r0, r5
 8001652:	f7ff fd4b 	bl	80010ec <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y0, data->right_area.x0, data->right_area.y1);
 8001656:	8a22      	ldrh	r2, [r4, #16]
 8001658:	8ae1      	ldrh	r1, [r4, #22]
 800165a:	8a63      	ldrh	r3, [r4, #18]
 800165c:	9101      	str	r1, [sp, #4]
 800165e:	9200      	str	r2, [sp, #0]
 8001660:	e78e      	b.n	8001580 <button_draw+0x34>
	else if(state == alarm_set_state){
 8001662:	2902      	cmp	r1, #2
 8001664:	d000      	beq.n	8001668 <button_draw+0x11c>
 8001666:	e792      	b.n	800158e <button_draw+0x42>
		sprintf(bf, "xstr %d,%d,100,40,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 8001668:	6981      	ldr	r1, [r0, #24]
 800166a:	9101      	str	r1, [sp, #4]
 800166c:	6a01      	ldr	r1, [r0, #32]
 800166e:	9100      	str	r1, [sp, #0]
 8001670:	4905      	ldr	r1, [pc, #20]	; (8001688 <button_draw+0x13c>)
 8001672:	e786      	b.n	8001582 <button_draw+0x36>
 8001674:	20000222 	.word	0x20000222
 8001678:	08004eff 	.word	0x08004eff
 800167c:	08004f8d 	.word	0x08004f8d
 8001680:	08004f26 	.word	0x08004f26
 8001684:	08004f4e 	.word	0x08004f4e
 8001688:	08004f65 	.word	0x08004f65

0800168c <lower_power>:

/* power state button */
void lower_power(void){
 800168c:	b510      	push	{r4, lr}
	power_switch_draw();
 800168e:	f7ff ff41 	bl	8001514 <power_switch_draw>
	button_draw(&button[buz_button],    lower_menu);
 8001692:	4c05      	ldr	r4, [pc, #20]	; (80016a8 <lower_power+0x1c>)
 8001694:	4805      	ldr	r0, [pc, #20]	; (80016ac <lower_power+0x20>)
 8001696:	7821      	ldrb	r1, [r4, #0]
 8001698:	f7ff ff58 	bl	800154c <button_draw>
	button_draw(&button[select_button], lower_menu);
 800169c:	7821      	ldrb	r1, [r4, #0]
 800169e:	4804      	ldr	r0, [pc, #16]	; (80016b0 <lower_power+0x24>)
 80016a0:	f7ff ff54 	bl	800154c <button_draw>
}
 80016a4:	bd10      	pop	{r4, pc}
 80016a6:	46c0      	nop			; (mov r8, r8)
 80016a8:	200003ac 	.word	0x200003ac
 80016ac:	20000000 	.word	0x20000000
 80016b0:	20000024 	.word	0x20000024

080016b4 <lower_temp>:

/* arrow state button */
void lower_temp(void){
 80016b4:	b510      	push	{r4, lr}
	button_draw(&button[temp_button], lower_menu);
 80016b6:	4c05      	ldr	r4, [pc, #20]	; (80016cc <lower_temp+0x18>)
 80016b8:	4805      	ldr	r0, [pc, #20]	; (80016d0 <lower_temp+0x1c>)
 80016ba:	7821      	ldrb	r1, [r4, #0]
 80016bc:	f7ff ff46 	bl	800154c <button_draw>
	button_draw(&button[wind_button], lower_menu);
 80016c0:	7821      	ldrb	r1, [r4, #0]
 80016c2:	4804      	ldr	r0, [pc, #16]	; (80016d4 <lower_temp+0x20>)
 80016c4:	f7ff ff42 	bl	800154c <button_draw>
}
 80016c8:	bd10      	pop	{r4, pc}
 80016ca:	46c0      	nop			; (mov r8, r8)
 80016cc:	200003ac 	.word	0x200003ac
 80016d0:	20000048 	.word	0x20000048
 80016d4:	2000006c 	.word	0x2000006c

080016d8 <lower_alarm>:

/* basic state button */
void lower_alarm(void){
 80016d8:	b510      	push	{r4, lr}
	button_draw(&button[alarm_on_button],  lower_menu);
 80016da:	4c07      	ldr	r4, [pc, #28]	; (80016f8 <lower_alarm+0x20>)
 80016dc:	4807      	ldr	r0, [pc, #28]	; (80016fc <lower_alarm+0x24>)
 80016de:	7821      	ldrb	r1, [r4, #0]
 80016e0:	f7ff ff34 	bl	800154c <button_draw>
	button_draw(&button[alarm_off_button], lower_menu);
 80016e4:	7821      	ldrb	r1, [r4, #0]
 80016e6:	4806      	ldr	r0, [pc, #24]	; (8001700 <lower_alarm+0x28>)
 80016e8:	f7ff ff30 	bl	800154c <button_draw>
	button_draw(&button[alarm_ok_button],  lower_menu);
 80016ec:	7821      	ldrb	r1, [r4, #0]
 80016ee:	4805      	ldr	r0, [pc, #20]	; (8001704 <lower_alarm+0x2c>)
 80016f0:	f7ff ff2c 	bl	800154c <button_draw>
}
 80016f4:	bd10      	pop	{r4, pc}
 80016f6:	46c0      	nop			; (mov r8, r8)
 80016f8:	200003ac 	.word	0x200003ac
 80016fc:	20000090 	.word	0x20000090
 8001700:	200000b4 	.word	0x200000b4
 8001704:	200000d8 	.word	0x200000d8

08001708 <basic_screen>:

/* button function merge */
void (*lower_menu_fuc[3])(void) = { lower_power, lower_temp, lower_alarm };

/* merge all display function */
void basic_screen(MODE_Typedef* alarm, MODE_Typedef* color, uint8_t* data, uint8_t* wind_data){
 8001708:	b5f0      	push	{r4, r5, r6, r7, lr}
 800170a:	b08f      	sub	sp, #60	; 0x3c
 800170c:	9307      	str	r3, [sp, #28]
	/* mode title display */
	sprintf(bf, "xstr 0,0,120,30,0,%s,WHITE,1,1,1,\"cooling\"",       *color == cooling     ? "RED" : "BLACK");
 800170e:	780b      	ldrb	r3, [r1, #0]
void basic_screen(MODE_Typedef* alarm, MODE_Typedef* color, uint8_t* data, uint8_t* wind_data){
 8001710:	9206      	str	r2, [sp, #24]
 8001712:	000d      	movs	r5, r1
	sprintf(bf, "xstr 0,0,120,30,0,%s,WHITE,1,1,1,\"cooling\"",       *color == cooling     ? "RED" : "BLACK");
 8001714:	4a8d      	ldr	r2, [pc, #564]	; (800194c <basic_screen+0x244>)
void basic_screen(MODE_Typedef* alarm, MODE_Typedef* color, uint8_t* data, uint8_t* wind_data){
 8001716:	9005      	str	r0, [sp, #20]
	sprintf(bf, "xstr 0,0,120,30,0,%s,WHITE,1,1,1,\"cooling\"",       *color == cooling     ? "RED" : "BLACK");
 8001718:	2b00      	cmp	r3, #0
 800171a:	d000      	beq.n	800171e <basic_screen+0x16>
 800171c:	4a8c      	ldr	r2, [pc, #560]	; (8001950 <basic_screen+0x248>)
 800171e:	4c8d      	ldr	r4, [pc, #564]	; (8001954 <basic_screen+0x24c>)
 8001720:	498d      	ldr	r1, [pc, #564]	; (8001958 <basic_screen+0x250>)
 8001722:	0020      	movs	r0, r4
 8001724:	f002 ff02 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001728:	0020      	movs	r0, r4
 800172a:	f7ff fcdf 	bl	80010ec <nextion_inst_set>

	sprintf(bf, "xstr 120,0,120,30,0,%s,WHITE,1,1,1,\"Dehumidify\"",  *color == dehumidity  ? "RED" : "BLACK");
 800172e:	782b      	ldrb	r3, [r5, #0]
 8001730:	4a86      	ldr	r2, [pc, #536]	; (800194c <basic_screen+0x244>)
 8001732:	2b01      	cmp	r3, #1
 8001734:	d000      	beq.n	8001738 <basic_screen+0x30>
 8001736:	4a86      	ldr	r2, [pc, #536]	; (8001950 <basic_screen+0x248>)
 8001738:	4988      	ldr	r1, [pc, #544]	; (800195c <basic_screen+0x254>)
 800173a:	0020      	movs	r0, r4
 800173c:	f002 fef6 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001740:	0020      	movs	r0, r4
 8001742:	f7ff fcd3 	bl	80010ec <nextion_inst_set>

	sprintf(bf, "xstr 240,0,120,30,0,%s,WHITE,1,1,1,\"ventilation\"", *color == ventilation ? "RED" : "BLACK");
 8001746:	782b      	ldrb	r3, [r5, #0]
 8001748:	4a80      	ldr	r2, [pc, #512]	; (800194c <basic_screen+0x244>)
 800174a:	2b02      	cmp	r3, #2
 800174c:	d000      	beq.n	8001750 <basic_screen+0x48>
 800174e:	4a80      	ldr	r2, [pc, #512]	; (8001950 <basic_screen+0x248>)
 8001750:	4983      	ldr	r1, [pc, #524]	; (8001960 <basic_screen+0x258>)
 8001752:	0020      	movs	r0, r4
 8001754:	f002 feea 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001758:	0020      	movs	r0, r4
 800175a:	f7ff fcc7 	bl	80010ec <nextion_inst_set>

	sprintf(bf, "xstr 360,0,120,30,0,%s,WHITE,1,1,1,\"heating\"",     *color == heating     ? "RED" : "BLACK");
 800175e:	782b      	ldrb	r3, [r5, #0]
 8001760:	4a7a      	ldr	r2, [pc, #488]	; (800194c <basic_screen+0x244>)
 8001762:	2b03      	cmp	r3, #3
 8001764:	d000      	beq.n	8001768 <basic_screen+0x60>
 8001766:	4a7a      	ldr	r2, [pc, #488]	; (8001950 <basic_screen+0x248>)
 8001768:	497e      	ldr	r1, [pc, #504]	; (8001964 <basic_screen+0x25c>)
 800176a:	0020      	movs	r0, r4
 800176c:	f002 fede 	bl	800452c <siprintf>
	nextion_inst_set(bf);
 8001770:	0020      	movs	r0, r4
 8001772:	f7ff fcbb 	bl	80010ec <nextion_inst_set>

	if(power == off) nextion_inst_set("fill 0,0,480,30,WHITE");
 8001776:	4b7c      	ldr	r3, [pc, #496]	; (8001968 <basic_screen+0x260>)
 8001778:	781b      	ldrb	r3, [r3, #0]
 800177a:	2b00      	cmp	r3, #0
 800177c:	d102      	bne.n	8001784 <basic_screen+0x7c>
 800177e:	487b      	ldr	r0, [pc, #492]	; (800196c <basic_screen+0x264>)
 8001780:	f7ff fcb4 	bl	80010ec <nextion_inst_set>
		SHT41_t* buf = (SHT41_t*)malloc(sizeof(SHT41_t));
 8001784:	2008      	movs	r0, #8
 8001786:	f002 fdb7 	bl	80042f8 <malloc>
 800178a:	0004      	movs	r4, r0
		*buf = getTempSht41();
 800178c:	ad08      	add	r5, sp, #32
 800178e:	0028      	movs	r0, r5
 8001790:	f000 fc32 	bl	8001ff8 <getTempSht41>
 8001794:	0023      	movs	r3, r4

	/* get sensor value */
	SHT41_t*  sht41_value  = get_sensor(get_sht41);
	uint16_t* ens160_value = get_sensor(get_ens160);
 8001796:	2001      	movs	r0, #1
		*buf = getTempSht41();
 8001798:	cd06      	ldmia	r5!, {r1, r2}
 800179a:	c306      	stmia	r3!, {r1, r2}
	SHT41_t*  sht41_value  = get_sensor(get_sht41);
 800179c:	940a      	str	r4, [sp, #40]	; 0x28
	uint16_t* ens160_value = get_sensor(get_ens160);
 800179e:	f7ff fc85 	bl	80010ac <get_sensor>

	sensor[sht41_temp].data = (uint16_t)sht41_value->temperature;
 80017a2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
	uint16_t* ens160_value = get_sensor(get_ens160);
 80017a4:	0005      	movs	r5, r0
 80017a6:	900b      	str	r0, [sp, #44]	; 0x2c
	sensor[sht41_temp].data = (uint16_t)sht41_value->temperature;
 80017a8:	6838      	ldr	r0, [r7, #0]
 80017aa:	f7fe fda3 	bl	80002f4 <__aeabi_f2uiz>
 80017ae:	4c70      	ldr	r4, [pc, #448]	; (8001970 <basic_screen+0x268>)
 80017b0:	8120      	strh	r0, [r4, #8]
	sensor[sht41_hum].data  = (uint16_t)sht41_value->humidity;
 80017b2:	6878      	ldr	r0, [r7, #4]
 80017b4:	f7fe fd9e 	bl	80002f4 <__aeabi_f2uiz>
 80017b8:	8320      	strh	r0, [r4, #24]
	sensor[ens160_co2].data = *ens160_value;
 80017ba:	882b      	ldrh	r3, [r5, #0]

	free_addr((void*)&sht41_value);
 80017bc:	a80a      	add	r0, sp, #40	; 0x28
	sensor[ens160_co2].data = *ens160_value;
 80017be:	8523      	strh	r3, [r4, #40]	; 0x28
	free_addr((void*)&sht41_value);
 80017c0:	f7ff fc8c 	bl	80010dc <free_addr>
	free_addr((void*)&ens160_value);
 80017c4:	a80b      	add	r0, sp, #44	; 0x2c
 80017c6:	f7ff fc89 	bl	80010dc <free_addr>

	/* sensor value display */
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 80017ca:	2500      	movs	r5, #0
		if(i == sht41_temp){
 80017cc:	4968      	ldr	r1, [pc, #416]	; (8001970 <basic_screen+0x268>)
 80017ce:	2d00      	cmp	r5, #0
 80017d0:	d000      	beq.n	80017d4 <basic_screen+0xcc>
 80017d2:	e086      	b.n	80018e2 <basic_screen+0x1da>
			/* sensor value draw (temperature) */
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%d%cC\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data, 0xb0);
 80017d4:	4864      	ldr	r0, [pc, #400]	; (8001968 <basic_screen+0x260>)
 80017d6:	880a      	ldrh	r2, [r1, #0]
 80017d8:	7800      	ldrb	r0, [r0, #0]
 80017da:	884b      	ldrh	r3, [r1, #2]
 80017dc:	4684      	mov	ip, r0
 80017de:	4666      	mov	r6, ip
 80017e0:	68cf      	ldr	r7, [r1, #12]
 80017e2:	485c      	ldr	r0, [pc, #368]	; (8001954 <basic_screen+0x24c>)
 80017e4:	2e01      	cmp	r6, #1
 80017e6:	d000      	beq.n	80017ea <basic_screen+0xe2>
 80017e8:	e09a      	b.n	8001920 <basic_screen+0x218>
 80017ea:	36af      	adds	r6, #175	; 0xaf
 80017ec:	9602      	str	r6, [sp, #8]
 80017ee:	8909      	ldrh	r1, [r1, #8]
 80017f0:	9700      	str	r7, [sp, #0]
 80017f2:	9101      	str	r1, [sp, #4]
 80017f4:	495f      	ldr	r1, [pc, #380]	; (8001974 <basic_screen+0x26c>)
 80017f6:	f002 fe99 	bl	800452c <siprintf>
		/* sensor value draw (co2) */
		else if(i == ens160_co2){
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%dppm\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data);
			else            sprintf(bf, "fill %d,%d,160,30,%s", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color);
		}
		nextion_inst_set(bf);
 80017fa:	4f56      	ldr	r7, [pc, #344]	; (8001954 <basic_screen+0x24c>)
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 80017fc:	3501      	adds	r5, #1
		nextion_inst_set(bf);
 80017fe:	0038      	movs	r0, r7
 8001800:	f7ff fc74 	bl	80010ec <nextion_inst_set>

		/* sensor outline draw */
		sprintf(bf, "draw %d,%d,%d,%d,BLACK", sensor[i].area.x0, sensor[i].area.y0, sensor[i].area.x1, sensor[i].area.y1);
 8001804:	88e1      	ldrh	r1, [r4, #6]
 8001806:	8863      	ldrh	r3, [r4, #2]
 8001808:	8822      	ldrh	r2, [r4, #0]
 800180a:	9101      	str	r1, [sp, #4]
 800180c:	88a1      	ldrh	r1, [r4, #4]
 800180e:	0038      	movs	r0, r7
 8001810:	9100      	str	r1, [sp, #0]
 8001812:	4959      	ldr	r1, [pc, #356]	; (8001978 <basic_screen+0x270>)
 8001814:	f002 fe8a 	bl	800452c <siprintf>
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 8001818:	b2ed      	uxtb	r5, r5
		nextion_inst_set(bf);
 800181a:	0038      	movs	r0, r7
 800181c:	f7ff fc66 	bl	80010ec <nextion_inst_set>
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 8001820:	3410      	adds	r4, #16
 8001822:	2d03      	cmp	r5, #3
 8001824:	d1d2      	bne.n	80017cc <basic_screen+0xc4>
	}

	/* middle menu draw */
	POS_Typedef draw_pos = { 150, 80, 0 };
 8001826:	2206      	movs	r2, #6
 8001828:	4954      	ldr	r1, [pc, #336]	; (800197c <basic_screen+0x274>)
 800182a:	a80c      	add	r0, sp, #48	; 0x30
 800182c:	f002 fd78 	bl	8004320 <memcpy>
	if(power == on) {
 8001830:	4c4d      	ldr	r4, [pc, #308]	; (8001968 <basic_screen+0x260>)
		if(*alarm != ventilation) value_put(data, *alarm == on_alarm || *alarm == off_alarm ? alarm_display : temp_display, &draw_pos);
 8001832:	9b05      	ldr	r3, [sp, #20]
	if(power == on) {
 8001834:	7822      	ldrb	r2, [r4, #0]
		if(*alarm != ventilation) value_put(data, *alarm == on_alarm || *alarm == off_alarm ? alarm_display : temp_display, &draw_pos);
 8001836:	781b      	ldrb	r3, [r3, #0]
	if(power == on) {
 8001838:	2a01      	cmp	r2, #1
 800183a:	d000      	beq.n	800183e <basic_screen+0x136>
 800183c:	e079      	b.n	8001932 <basic_screen+0x22a>
		if(*alarm != ventilation) value_put(data, *alarm == on_alarm || *alarm == off_alarm ? alarm_display : temp_display, &draw_pos);
 800183e:	2b02      	cmp	r3, #2
 8001840:	d100      	bne.n	8001844 <basic_screen+0x13c>
 8001842:	e072      	b.n	800192a <basic_screen+0x222>
 8001844:	2100      	movs	r1, #0
 8001846:	3b04      	subs	r3, #4
 8001848:	b2db      	uxtb	r3, r3
 800184a:	429a      	cmp	r2, r3
 800184c:	4149      	adcs	r1, r1
 800184e:	9806      	ldr	r0, [sp, #24]
 8001850:	b2c9      	uxtb	r1, r1
 8001852:	aa0c      	add	r2, sp, #48	; 0x30
 8001854:	f7ff fd84 	bl	8001360 <value_put>
		else                      nextion_inst_set("fill 150,61,169,118,WHITE");
		wind_power_draw(wind_data);
 8001858:	9807      	ldr	r0, [sp, #28]
 800185a:	f7ff fdcb 	bl	80013f4 <wind_power_draw>
	}
	else if(*alarm == on_alarm || *alarm == off_alarm) value_put(data, alarm_display, &draw_pos);
	else nextion_inst_set("fill 0,61,480,118,WHITE");

	/* left middle menu */
	if(power == on || *alarm == on_alarm || *alarm == off_alarm){
 800185e:	7823      	ldrb	r3, [r4, #0]
 8001860:	2b01      	cmp	r3, #1
 8001862:	d004      	beq.n	800186e <basic_screen+0x166>
 8001864:	9b05      	ldr	r3, [sp, #20]
 8001866:	781b      	ldrb	r3, [r3, #0]
 8001868:	3b04      	subs	r3, #4
 800186a:	2b01      	cmp	r3, #1
 800186c:	d82b      	bhi.n	80018c6 <basic_screen+0x1be>
		nextion_inst_set("xstr 0,60,90,40,0,WHITE,BLACK,1,1,1,\"desired\"");
 800186e:	4844      	ldr	r0, [pc, #272]	; (8001980 <basic_screen+0x278>)
 8001870:	f7ff fc3c 	bl	80010ec <nextion_inst_set>
		nextion_inst_set("draw 0,60,90,60+40,BLACK");
 8001874:	4843      	ldr	r0, [pc, #268]	; (8001984 <basic_screen+0x27c>)
 8001876:	f7ff fc39 	bl	80010ec <nextion_inst_set>

		sprintf(bf, "xstr 0,100,90,40,0,%s,%s,1,1,1,\"on\"", *alarm == on_alarm ? "WHITE" : "BLACK", *alarm == on_alarm ? "BLACK" : "WHITE");
 800187a:	9b05      	ldr	r3, [sp, #20]
 800187c:	4d34      	ldr	r5, [pc, #208]	; (8001950 <basic_screen+0x248>)
 800187e:	7819      	ldrb	r1, [r3, #0]
 8001880:	4c41      	ldr	r4, [pc, #260]	; (8001988 <basic_screen+0x280>)
 8001882:	002b      	movs	r3, r5
 8001884:	0022      	movs	r2, r4
 8001886:	2904      	cmp	r1, #4
 8001888:	d001      	beq.n	800188e <basic_screen+0x186>
 800188a:	002a      	movs	r2, r5
 800188c:	0023      	movs	r3, r4
 800188e:	493f      	ldr	r1, [pc, #252]	; (800198c <basic_screen+0x284>)
 8001890:	0038      	movs	r0, r7
 8001892:	f002 fe4b 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 8001896:	0038      	movs	r0, r7
 8001898:	f7ff fc28 	bl	80010ec <nextion_inst_set>
		nextion_inst_set("draw 0,100,90,100+40,BLACK");
 800189c:	483c      	ldr	r0, [pc, #240]	; (8001990 <basic_screen+0x288>)
 800189e:	f7ff fc25 	bl	80010ec <nextion_inst_set>

		sprintf(bf, "xstr 0,140,90,40,0,%s,%s,1,1,1,\"off\"", *alarm == off_alarm ? "WHITE" : "BLACK", *alarm == off_alarm ? "BLACK" : "WHITE");
 80018a2:	9b05      	ldr	r3, [sp, #20]
 80018a4:	002a      	movs	r2, r5
 80018a6:	7819      	ldrb	r1, [r3, #0]
 80018a8:	0023      	movs	r3, r4
 80018aa:	2905      	cmp	r1, #5
 80018ac:	d101      	bne.n	80018b2 <basic_screen+0x1aa>
 80018ae:	0022      	movs	r2, r4
 80018b0:	002b      	movs	r3, r5
 80018b2:	4938      	ldr	r1, [pc, #224]	; (8001994 <basic_screen+0x28c>)
 80018b4:	0038      	movs	r0, r7
 80018b6:	f002 fe39 	bl	800452c <siprintf>
		nextion_inst_set(bf);
 80018ba:	0038      	movs	r0, r7
 80018bc:	f7ff fc16 	bl	80010ec <nextion_inst_set>
		nextion_inst_set("draw 0,140,90,140+40,BLACK");
 80018c0:	4835      	ldr	r0, [pc, #212]	; (8001998 <basic_screen+0x290>)
 80018c2:	f7ff fc13 	bl	80010ec <nextion_inst_set>
	}

	/* lower menu draw */
	nextion_inst_set("fill 0,180,480,92,WHITE");
 80018c6:	4835      	ldr	r0, [pc, #212]	; (800199c <basic_screen+0x294>)
 80018c8:	f7ff fc10 	bl	80010ec <nextion_inst_set>
	nextion_inst_set("line 0,180,480,180,BLACK");
 80018cc:	4834      	ldr	r0, [pc, #208]	; (80019a0 <basic_screen+0x298>)
 80018ce:	f7ff fc0d 	bl	80010ec <nextion_inst_set>
	lower_menu_fuc[lower_menu]();
 80018d2:	4b34      	ldr	r3, [pc, #208]	; (80019a4 <basic_screen+0x29c>)
 80018d4:	4a34      	ldr	r2, [pc, #208]	; (80019a8 <basic_screen+0x2a0>)
 80018d6:	781b      	ldrb	r3, [r3, #0]
 80018d8:	009b      	lsls	r3, r3, #2
 80018da:	589b      	ldr	r3, [r3, r2]
 80018dc:	4798      	blx	r3
}
 80018de:	b00f      	add	sp, #60	; 0x3c
 80018e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%d%cC\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data, 0xb0);
 80018e2:	4b21      	ldr	r3, [pc, #132]	; (8001968 <basic_screen+0x260>)
 80018e4:	781b      	ldrb	r3, [r3, #0]
 80018e6:	469c      	mov	ip, r3
		else if(i == sht41_hum){
 80018e8:	2d01      	cmp	r5, #1
 80018ea:	d10d      	bne.n	8001908 <basic_screen+0x200>
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%d%%\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data);
 80018ec:	4666      	mov	r6, ip
 80018ee:	8a0a      	ldrh	r2, [r1, #16]
 80018f0:	8a4b      	ldrh	r3, [r1, #18]
 80018f2:	69cf      	ldr	r7, [r1, #28]
 80018f4:	4817      	ldr	r0, [pc, #92]	; (8001954 <basic_screen+0x24c>)
 80018f6:	2e01      	cmp	r6, #1
 80018f8:	d112      	bne.n	8001920 <basic_screen+0x218>
 80018fa:	8b09      	ldrh	r1, [r1, #24]
 80018fc:	9700      	str	r7, [sp, #0]
 80018fe:	9101      	str	r1, [sp, #4]
 8001900:	492a      	ldr	r1, [pc, #168]	; (80019ac <basic_screen+0x2a4>)
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%dppm\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data);
 8001902:	f002 fe13 	bl	800452c <siprintf>
 8001906:	e778      	b.n	80017fa <basic_screen+0xf2>
 8001908:	4666      	mov	r6, ip
 800190a:	8c0a      	ldrh	r2, [r1, #32]
 800190c:	8c4b      	ldrh	r3, [r1, #34]	; 0x22
 800190e:	6acf      	ldr	r7, [r1, #44]	; 0x2c
 8001910:	4810      	ldr	r0, [pc, #64]	; (8001954 <basic_screen+0x24c>)
 8001912:	2e01      	cmp	r6, #1
 8001914:	d104      	bne.n	8001920 <basic_screen+0x218>
 8001916:	8d09      	ldrh	r1, [r1, #40]	; 0x28
 8001918:	9700      	str	r7, [sp, #0]
 800191a:	9101      	str	r1, [sp, #4]
 800191c:	4924      	ldr	r1, [pc, #144]	; (80019b0 <basic_screen+0x2a8>)
 800191e:	e7f0      	b.n	8001902 <basic_screen+0x1fa>
			else            sprintf(bf, "fill %d,%d,160,30,%s", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color);
 8001920:	4924      	ldr	r1, [pc, #144]	; (80019b4 <basic_screen+0x2ac>)
 8001922:	9700      	str	r7, [sp, #0]
 8001924:	f002 fe02 	bl	800452c <siprintf>
 8001928:	e767      	b.n	80017fa <basic_screen+0xf2>
		else                      nextion_inst_set("fill 150,61,169,118,WHITE");
 800192a:	4823      	ldr	r0, [pc, #140]	; (80019b8 <basic_screen+0x2b0>)
 800192c:	f7ff fbde 	bl	80010ec <nextion_inst_set>
 8001930:	e792      	b.n	8001858 <basic_screen+0x150>
	else if(*alarm == on_alarm || *alarm == off_alarm) value_put(data, alarm_display, &draw_pos);
 8001932:	3b04      	subs	r3, #4
 8001934:	2b01      	cmp	r3, #1
 8001936:	d805      	bhi.n	8001944 <basic_screen+0x23c>
 8001938:	2101      	movs	r1, #1
 800193a:	9806      	ldr	r0, [sp, #24]
 800193c:	aa0c      	add	r2, sp, #48	; 0x30
 800193e:	f7ff fd0f 	bl	8001360 <value_put>
 8001942:	e78c      	b.n	800185e <basic_screen+0x156>
	else nextion_inst_set("fill 0,61,480,118,WHITE");
 8001944:	481d      	ldr	r0, [pc, #116]	; (80019bc <basic_screen+0x2b4>)
 8001946:	f7ff fbd1 	bl	80010ec <nextion_inst_set>
 800194a:	e788      	b.n	800185e <basic_screen+0x156>
 800194c:	08004fa4 	.word	0x08004fa4
 8001950:	08004e9d 	.word	0x08004e9d
 8001954:	20000222 	.word	0x20000222
 8001958:	08004fa8 	.word	0x08004fa8
 800195c:	08004fd3 	.word	0x08004fd3
 8001960:	08005003 	.word	0x08005003
 8001964:	08005034 	.word	0x08005034
 8001968:	200003ad 	.word	0x200003ad
 800196c:	08005061 	.word	0x08005061
 8001970:	20000160 	.word	0x20000160
 8001974:	08005077 	.word	0x08005077
 8001978:	08004f8d 	.word	0x08004f8d
 800197c:	08004c1c 	.word	0x08004c1c
 8001980:	0800513e 	.word	0x0800513e
 8001984:	0800516c 	.word	0x0800516c
 8001988:	08005239 	.word	0x08005239
 800198c:	08005185 	.word	0x08005185
 8001990:	080051a9 	.word	0x080051a9
 8001994:	080051c4 	.word	0x080051c4
 8001998:	080051e9 	.word	0x080051e9
 800199c:	08005204 	.word	0x08005204
 80019a0:	0800521c 	.word	0x0800521c
 80019a4:	200003ac 	.word	0x200003ac
 80019a8:	20000100 	.word	0x20000100
 80019ac:	080050b7 	.word	0x080050b7
 80019b0:	080050e1 	.word	0x080050e1
 80019b4:	080050a2 	.word	0x080050a2
 80019b8:	0800510c 	.word	0x0800510c
 80019bc:	08005126 	.word	0x08005126

080019c0 <task_fuc>:

/* all task function */
/* all display function is merge in this function */
void task_fuc(void){
 80019c0:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t tick       = 0;
	uint32_t buz_tick   = 0;
	uint32_t alarm_tick = 0;

	MODE_Typedef mode      = cooling;
 80019c2:	2600      	movs	r6, #0
void task_fuc(void){
 80019c4:	b08b      	sub	sp, #44	; 0x2c
	MODE_Typedef mode      = cooling;
 80019c6:	ab04      	add	r3, sp, #16
 80019c8:	1ddc      	adds	r4, r3, #7
	MODE_Typedef befo_mode = mode;
 80019ca:	ab06      	add	r3, sp, #24
 80019cc:	701e      	strb	r6, [r3, #0]

	uint8_t befo_touch = 0;

	uint8_t set_temp   = 18;
 80019ce:	2312      	movs	r3, #18
 80019d0:	aa04      	add	r2, sp, #16
 80019d2:	7253      	strb	r3, [r2, #9]
	uint8_t wind_power = 0, motorM = 0;
 80019d4:	250a      	movs	r5, #10
 80019d6:	230b      	movs	r3, #11

	AREA_Typedef power_area  = { 180, 180, 180+130, 180+92 };
 80019d8:	4fc1      	ldr	r7, [pc, #772]	; (8001ce0 <task_fuc+0x320>)
	uint8_t wind_power = 0, motorM = 0;
 80019da:	189b      	adds	r3, r3, r2
 80019dc:	18ad      	adds	r5, r5, r2
	AREA_Typedef power_area  = { 180, 180, 180+130, 180+92 };
 80019de:	1db9      	adds	r1, r7, #6
 80019e0:	2208      	movs	r2, #8
 80019e2:	a808      	add	r0, sp, #32
	uint8_t wind_power = 0, motorM = 0;
 80019e4:	701e      	strb	r6, [r3, #0]
 80019e6:	702e      	strb	r6, [r5, #0]
	MODE_Typedef mode      = cooling;
 80019e8:	7026      	strb	r6, [r4, #0]
	AREA_Typedef power_area  = { 180, 180, 180+130, 180+92 };
 80019ea:	f002 fc99 	bl	8004320 <memcpy>
	ALARM_Typedef alarm_time = { 1, 1, 0, 0 };
 80019ee:	0039      	movs	r1, r7
 80019f0:	2204      	movs	r2, #4
 80019f2:	310e      	adds	r1, #14
 80019f4:	a807      	add	r0, sp, #28
 80019f6:	f002 fc93 	bl	8004320 <memcpy>

	/* LCD clear (color: WHITE) */
	nextion_inst_set("cls WHITE");
 80019fa:	4fba      	ldr	r7, [pc, #744]	; (8001ce4 <task_fuc+0x324>)
 80019fc:	0038      	movs	r0, r7
 80019fe:	f7ff fb75 	bl	80010ec <nextion_inst_set>
	nextion_inst_set("cls WHITE");
 8001a02:	0038      	movs	r0, r7
 8001a04:	f7ff fb72 	bl	80010ec <nextion_inst_set>
	nextion_inst_set("cls WHITE");
 8001a08:	0038      	movs	r0, r7
 8001a0a:	f7ff fb6f 	bl	80010ec <nextion_inst_set>
	uint32_t alarm_tick = 0;
 8001a0e:	9602      	str	r6, [sp, #8]
	uint32_t buz_tick   = 0;
 8001a10:	9601      	str	r6, [sp, #4]
	uint32_t tick       = 0;
 8001a12:	9603      	str	r6, [sp, #12]

		/* screen update */
		if(screen_update == 0){
			screen_update = 1;

			basic_screen(&mode, &befo_mode, mode == on_alarm ? &alarm_time.on_time : mode == off_alarm ? &alarm_time.off_time : &set_temp, &wind_power);
 8001a14:	9500      	str	r5, [sp, #0]
		get_touch(&curXY);
 8001a16:	4db4      	ldr	r5, [pc, #720]	; (8001ce8 <task_fuc+0x328>)
 8001a18:	0028      	movs	r0, r5
 8001a1a:	f7ff fb85 	bl	8001128 <get_touch>
		get_slide(&slide_state, &curXY);
 8001a1e:	0029      	movs	r1, r5
 8001a20:	48b2      	ldr	r0, [pc, #712]	; (8001cec <task_fuc+0x32c>)
 8001a22:	f7ff fbc1 	bl	80011a8 <get_slide>
		if(mode != on_alarm && mode != off_alarm) befo_mode = mode;
 8001a26:	7823      	ldrb	r3, [r4, #0]
 8001a28:	1f1a      	subs	r2, r3, #4
 8001a2a:	2a01      	cmp	r2, #1
 8001a2c:	d901      	bls.n	8001a32 <task_fuc+0x72>
 8001a2e:	aa06      	add	r2, sp, #24
 8001a30:	7013      	strb	r3, [r2, #0]
		if(screen_update == 0){
 8001a32:	4aaf      	ldr	r2, [pc, #700]	; (8001cf0 <task_fuc+0x330>)
 8001a34:	7811      	ldrb	r1, [r2, #0]
 8001a36:	2900      	cmp	r1, #0
 8001a38:	d110      	bne.n	8001a5c <task_fuc+0x9c>
			screen_update = 1;
 8001a3a:	3101      	adds	r1, #1
 8001a3c:	7011      	strb	r1, [r2, #0]
			basic_screen(&mode, &befo_mode, mode == on_alarm ? &alarm_time.on_time : mode == off_alarm ? &alarm_time.off_time : &set_temp, &wind_power);
 8001a3e:	aa07      	add	r2, sp, #28
 8001a40:	2b04      	cmp	r3, #4
 8001a42:	d006      	beq.n	8001a52 <task_fuc+0x92>
 8001a44:	220d      	movs	r2, #13
 8001a46:	a904      	add	r1, sp, #16
 8001a48:	1852      	adds	r2, r2, r1
 8001a4a:	2b05      	cmp	r3, #5
 8001a4c:	d001      	beq.n	8001a52 <task_fuc+0x92>
 8001a4e:	2209      	movs	r2, #9
 8001a50:	1852      	adds	r2, r2, r1
 8001a52:	0020      	movs	r0, r4
 8001a54:	9b00      	ldr	r3, [sp, #0]
 8001a56:	a906      	add	r1, sp, #24
 8001a58:	f7ff fe56 	bl	8001708 <basic_screen>
		}

		/* when this function run if you touched LCD */
		if(curXY.touched != befo_touch && curXY.touched == 1){
 8001a5c:	4fa2      	ldr	r7, [pc, #648]	; (8001ce8 <task_fuc+0x328>)
 8001a5e:	793d      	ldrb	r5, [r7, #4]
 8001a60:	42b5      	cmp	r5, r6
 8001a62:	d013      	beq.n	8001a8c <task_fuc+0xcc>
 8001a64:	2d01      	cmp	r5, #1
 8001a66:	d111      	bne.n	8001a8c <task_fuc+0xcc>
			/* touch function for each menu */

			/* buzzer on/off, power on/off, mode change button */
			if(lower_menu == power_set_state){
 8001a68:	4ba2      	ldr	r3, [pc, #648]	; (8001cf4 <task_fuc+0x334>)
 8001a6a:	781e      	ldrb	r6, [r3, #0]
 8001a6c:	2e00      	cmp	r6, #0
 8001a6e:	d157      	bne.n	8001b20 <task_fuc+0x160>
				if(area_check(&curXY, &power_area)){
 8001a70:	0038      	movs	r0, r7
 8001a72:	a908      	add	r1, sp, #32
 8001a74:	f7ff fbc8 	bl	8001208 <area_check>
 8001a78:	2800      	cmp	r0, #0
 8001a7a:	d02c      	beq.n	8001ad6 <task_fuc+0x116>
					power = power == off ? on : off;
 8001a7c:	4a9e      	ldr	r2, [pc, #632]	; (8001cf8 <task_fuc+0x338>)
					mode = cooling;
 8001a7e:	7026      	strb	r6, [r4, #0]
					power = power == off ? on : off;
 8001a80:	7813      	ldrb	r3, [r2, #0]
 8001a82:	4259      	negs	r1, r3
 8001a84:	414b      	adcs	r3, r1
 8001a86:	7013      	strb	r3, [r2, #0]
					wind_power = 0;
 8001a88:	9b00      	ldr	r3, [sp, #0]
 8001a8a:	701e      	strb	r6, [r3, #0]
				else if(area_check(&curXY, &button[alarm_ok_button].area)) mode = befo_mode;
			}
		}

		/* slide function */
		if(slide_state != none){
 8001a8c:	4b97      	ldr	r3, [pc, #604]	; (8001cec <task_fuc+0x32c>)
 8001a8e:	781b      	ldrb	r3, [r3, #0]
 8001a90:	2b00      	cmp	r3, #0
 8001a92:	d00c      	beq.n	8001aae <task_fuc+0xee>
			screen_update = 0;
 8001a94:	2200      	movs	r2, #0
 8001a96:	4996      	ldr	r1, [pc, #600]	; (8001cf0 <task_fuc+0x330>)
 8001a98:	700a      	strb	r2, [r1, #0]

			if(slide_state == up_slide)        lower_menu = (lower_menu == alarm_set_state) ? lower_menu = power_set_state : lower_menu + 1;
 8001a9a:	2b01      	cmp	r3, #1
 8001a9c:	d000      	beq.n	8001aa0 <task_fuc+0xe0>
 8001a9e:	e0b7      	b.n	8001c10 <task_fuc+0x250>
 8001aa0:	4894      	ldr	r0, [pc, #592]	; (8001cf4 <task_fuc+0x334>)
 8001aa2:	7801      	ldrb	r1, [r0, #0]
 8001aa4:	2902      	cmp	r1, #2
 8001aa6:	d001      	beq.n	8001aac <task_fuc+0xec>
 8001aa8:	3101      	adds	r1, #1
 8001aaa:	b2ca      	uxtb	r2, r1
 8001aac:	7002      	strb	r2, [r0, #0]
			else if(slide_state == down_slide) lower_menu = (lower_menu == power_set_state) ? lower_menu = alarm_set_state : lower_menu - 1;
		}


		/* run motor function */
		if(power == on){
 8001aae:	200b      	movs	r0, #11
 8001ab0:	4b91      	ldr	r3, [pc, #580]	; (8001cf8 <task_fuc+0x338>)
 8001ab2:	781a      	ldrb	r2, [r3, #0]
 8001ab4:	ab04      	add	r3, sp, #16
 8001ab6:	18c0      	adds	r0, r0, r3
 8001ab8:	2a01      	cmp	r2, #1
 8001aba:	d000      	beq.n	8001abe <task_fuc+0xfe>
 8001abc:	e13d      	b.n	8001d3a <task_fuc+0x37a>
			if(mode == cooling)          motorM = sensor[sht41_temp].data > set_temp ? 1 : 0;
 8001abe:	7823      	ldrb	r3, [r4, #0]
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	d000      	beq.n	8001ac6 <task_fuc+0x106>
 8001ac4:	e0af      	b.n	8001c26 <task_fuc+0x266>
 8001ac6:	4b8d      	ldr	r3, [pc, #564]	; (8001cfc <task_fuc+0x33c>)
 8001ac8:	891a      	ldrh	r2, [r3, #8]
 8001aca:	ab04      	add	r3, sp, #16
 8001acc:	7a5b      	ldrb	r3, [r3, #9]
			else if(mode == dehumidity)  motorM = sensor[sht41_hum].data >= 70 ? 1 : 0;
			else if(mode == ventilation) motorM = motorM == 0 ? 1 : motorM;
			else if(mode == heating)     motorM = sensor[sht41_temp].data < set_temp ? 1 : 0;
 8001ace:	4293      	cmp	r3, r2
 8001ad0:	419b      	sbcs	r3, r3
 8001ad2:	425b      	negs	r3, r3
 8001ad4:	e0b4      	b.n	8001c40 <task_fuc+0x280>
				else if(area_check(&curXY, &button[buz_button].area)) buz_state = buz_state == buz_on ? buz_off : buz_on;
 8001ad6:	0038      	movs	r0, r7
 8001ad8:	4989      	ldr	r1, [pc, #548]	; (8001d00 <task_fuc+0x340>)
 8001ada:	f7ff fb95 	bl	8001208 <area_check>
 8001ade:	1e06      	subs	r6, r0, #0
 8001ae0:	d006      	beq.n	8001af0 <task_fuc+0x130>
 8001ae2:	4a88      	ldr	r2, [pc, #544]	; (8001d04 <task_fuc+0x344>)
 8001ae4:	7813      	ldrb	r3, [r2, #0]
 8001ae6:	3b01      	subs	r3, #1
 8001ae8:	1e59      	subs	r1, r3, #1
 8001aea:	418b      	sbcs	r3, r1
				else if(area_check(&curXY, &button[wind_button].right_area)) { wind_power = (wind_power < 4) ? wind_power + 1 : wind_power; }
 8001aec:	7013      	strb	r3, [r2, #0]
 8001aee:	e7cd      	b.n	8001a8c <task_fuc+0xcc>
				else if(area_check(&curXY, &button[select_button].area)){
 8001af0:	0038      	movs	r0, r7
 8001af2:	4985      	ldr	r1, [pc, #532]	; (8001d08 <task_fuc+0x348>)
 8001af4:	f7ff fb88 	bl	8001208 <area_check>
 8001af8:	2800      	cmp	r0, #0
 8001afa:	d0c7      	beq.n	8001a8c <task_fuc+0xcc>
					wind_power = (mode == ventilation && wind_power != 1) ? 1 : wind_power;
 8001afc:	9a00      	ldr	r2, [sp, #0]
					mode = mode == heating ? 0 : mode + 1;
 8001afe:	7823      	ldrb	r3, [r4, #0]
					wind_power = (mode == ventilation && wind_power != 1) ? 1 : wind_power;
 8001b00:	7812      	ldrb	r2, [r2, #0]
					mode = mode == heating ? 0 : mode + 1;
 8001b02:	2b03      	cmp	r3, #3
 8001b04:	d102      	bne.n	8001b0c <task_fuc+0x14c>
 8001b06:	7026      	strb	r6, [r4, #0]
					wind_power = (mode == ventilation && wind_power != 1) ? 1 : wind_power;
 8001b08:	0015      	movs	r5, r2
 8001b0a:	e006      	b.n	8001b1a <task_fuc+0x15a>
					mode = mode == heating ? 0 : mode + 1;
 8001b0c:	3301      	adds	r3, #1
 8001b0e:	b2db      	uxtb	r3, r3
 8001b10:	7023      	strb	r3, [r4, #0]
					wind_power = (mode == ventilation && wind_power != 1) ? 1 : wind_power;
 8001b12:	2b02      	cmp	r3, #2
 8001b14:	d1f8      	bne.n	8001b08 <task_fuc+0x148>
 8001b16:	2a01      	cmp	r2, #1
 8001b18:	d0f6      	beq.n	8001b08 <task_fuc+0x148>
 8001b1a:	9b00      	ldr	r3, [sp, #0]
					else alarm_time.on_time = alarm_time.on_time < 20 ? alarm_time.on_time + 1 : 1;
 8001b1c:	701d      	strb	r5, [r3, #0]
 8001b1e:	e7b5      	b.n	8001a8c <task_fuc+0xcc>
			else if(lower_menu == temp_set_state){
 8001b20:	2e01      	cmp	r6, #1
 8001b22:	d138      	bne.n	8001b96 <task_fuc+0x1d6>
				if(area_check(&curXY, &button[temp_button].left_area))       { set_temp = (set_temp > 18) ? set_temp - 1 : set_temp; }
 8001b24:	0038      	movs	r0, r7
 8001b26:	4979      	ldr	r1, [pc, #484]	; (8001d0c <task_fuc+0x34c>)
 8001b28:	f7ff fb6e 	bl	8001208 <area_check>
 8001b2c:	2800      	cmp	r0, #0
 8001b2e:	d017      	beq.n	8001b60 <task_fuc+0x1a0>
 8001b30:	2209      	movs	r2, #9
 8001b32:	ab04      	add	r3, sp, #16
 8001b34:	18d2      	adds	r2, r2, r3
 8001b36:	7813      	ldrb	r3, [r2, #0]
 8001b38:	2b12      	cmp	r3, #18
 8001b3a:	d901      	bls.n	8001b40 <task_fuc+0x180>
 8001b3c:	3b01      	subs	r3, #1
				else if(area_check(&curXY, &button[temp_button].right_area)) { set_temp = (set_temp < 30) ? set_temp + 1 : set_temp; }
 8001b3e:	b2db      	uxtb	r3, r3
 8001b40:	7013      	strb	r3, [r2, #0]
				if(area_check(&curXY, &button[wind_button].left_area))       { wind_power = (wind_power > 0) ? wind_power - 1 : wind_power; }
 8001b42:	4d69      	ldr	r5, [pc, #420]	; (8001ce8 <task_fuc+0x328>)
 8001b44:	4972      	ldr	r1, [pc, #456]	; (8001d10 <task_fuc+0x350>)
 8001b46:	0028      	movs	r0, r5
 8001b48:	f7ff fb5e 	bl	8001208 <area_check>
 8001b4c:	2800      	cmp	r0, #0
 8001b4e:	d015      	beq.n	8001b7c <task_fuc+0x1bc>
 8001b50:	9b00      	ldr	r3, [sp, #0]
 8001b52:	781b      	ldrb	r3, [r3, #0]
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d001      	beq.n	8001b5c <task_fuc+0x19c>
 8001b58:	3b01      	subs	r3, #1
				else if(area_check(&curXY, &button[wind_button].right_area)) { wind_power = (wind_power < 4) ? wind_power + 1 : wind_power; }
 8001b5a:	b2db      	uxtb	r3, r3
 8001b5c:	9a00      	ldr	r2, [sp, #0]
 8001b5e:	e7c5      	b.n	8001aec <task_fuc+0x12c>
				else if(area_check(&curXY, &button[temp_button].right_area)) { set_temp = (set_temp < 30) ? set_temp + 1 : set_temp; }
 8001b60:	0038      	movs	r0, r7
 8001b62:	496c      	ldr	r1, [pc, #432]	; (8001d14 <task_fuc+0x354>)
 8001b64:	f7ff fb50 	bl	8001208 <area_check>
 8001b68:	2800      	cmp	r0, #0
 8001b6a:	d0ea      	beq.n	8001b42 <task_fuc+0x182>
 8001b6c:	2209      	movs	r2, #9
 8001b6e:	ab04      	add	r3, sp, #16
 8001b70:	18d2      	adds	r2, r2, r3
 8001b72:	7813      	ldrb	r3, [r2, #0]
 8001b74:	2b1d      	cmp	r3, #29
 8001b76:	d8e3      	bhi.n	8001b40 <task_fuc+0x180>
 8001b78:	3301      	adds	r3, #1
 8001b7a:	e7e0      	b.n	8001b3e <task_fuc+0x17e>
				else if(area_check(&curXY, &button[wind_button].right_area)) { wind_power = (wind_power < 4) ? wind_power + 1 : wind_power; }
 8001b7c:	0028      	movs	r0, r5
 8001b7e:	4966      	ldr	r1, [pc, #408]	; (8001d18 <task_fuc+0x358>)
 8001b80:	f7ff fb42 	bl	8001208 <area_check>
 8001b84:	2800      	cmp	r0, #0
 8001b86:	d100      	bne.n	8001b8a <task_fuc+0x1ca>
 8001b88:	e780      	b.n	8001a8c <task_fuc+0xcc>
 8001b8a:	9b00      	ldr	r3, [sp, #0]
 8001b8c:	781b      	ldrb	r3, [r3, #0]
 8001b8e:	2b03      	cmp	r3, #3
 8001b90:	d8e4      	bhi.n	8001b5c <task_fuc+0x19c>
 8001b92:	3301      	adds	r3, #1
 8001b94:	e7e1      	b.n	8001b5a <task_fuc+0x19a>
			else if(lower_menu == alarm_set_state){
 8001b96:	2e02      	cmp	r6, #2
 8001b98:	d000      	beq.n	8001b9c <task_fuc+0x1dc>
 8001b9a:	e777      	b.n	8001a8c <task_fuc+0xcc>
				if(area_check(&curXY, &button[alarm_on_button].area)){
 8001b9c:	0038      	movs	r0, r7
 8001b9e:	495f      	ldr	r1, [pc, #380]	; (8001d1c <task_fuc+0x35c>)
 8001ba0:	f7ff fb32 	bl	8001208 <area_check>
 8001ba4:	2800      	cmp	r0, #0
 8001ba6:	d011      	beq.n	8001bcc <task_fuc+0x20c>
					if(mode != on_alarm) {
 8001ba8:	7822      	ldrb	r2, [r4, #0]
 8001baa:	ab07      	add	r3, sp, #28
 8001bac:	2a04      	cmp	r2, #4
 8001bae:	d007      	beq.n	8001bc0 <task_fuc+0x200>
						if(alarm_time.alarm_on_f == 0)  { alarm_time.alarm_on_f  = 1; alarm_time.on_time = 1; }
 8001bb0:	789a      	ldrb	r2, [r3, #2]
 8001bb2:	2a00      	cmp	r2, #0
 8001bb4:	d101      	bne.n	8001bba <task_fuc+0x1fa>
 8001bb6:	709d      	strb	r5, [r3, #2]
 8001bb8:	701d      	strb	r5, [r3, #0]
						mode = on_alarm;
 8001bba:	2304      	movs	r3, #4
				else if(area_check(&curXY, &button[alarm_ok_button].area)) mode = befo_mode;
 8001bbc:	7023      	strb	r3, [r4, #0]
 8001bbe:	e765      	b.n	8001a8c <task_fuc+0xcc>
					else alarm_time.on_time = alarm_time.on_time < 20 ? alarm_time.on_time + 1 : 1;
 8001bc0:	781a      	ldrb	r2, [r3, #0]
 8001bc2:	2a13      	cmp	r2, #19
 8001bc4:	d8aa      	bhi.n	8001b1c <task_fuc+0x15c>
 8001bc6:	3201      	adds	r2, #1
 8001bc8:	b2d5      	uxtb	r5, r2
 8001bca:	e7a7      	b.n	8001b1c <task_fuc+0x15c>
				else if(area_check(&curXY, &button[alarm_off_button].area)){
 8001bcc:	0038      	movs	r0, r7
 8001bce:	4954      	ldr	r1, [pc, #336]	; (8001d20 <task_fuc+0x360>)
 8001bd0:	f7ff fb1a 	bl	8001208 <area_check>
 8001bd4:	2800      	cmp	r0, #0
 8001bd6:	d011      	beq.n	8001bfc <task_fuc+0x23c>
					if(mode != off_alarm) {
 8001bd8:	7822      	ldrb	r2, [r4, #0]
 8001bda:	ab07      	add	r3, sp, #28
 8001bdc:	2a05      	cmp	r2, #5
 8001bde:	d006      	beq.n	8001bee <task_fuc+0x22e>
						if(alarm_time.alarm_off_f == 0) { alarm_time.alarm_off_f = 1; alarm_time.off_time = 1; }
 8001be0:	78da      	ldrb	r2, [r3, #3]
 8001be2:	2a00      	cmp	r2, #0
 8001be4:	d101      	bne.n	8001bea <task_fuc+0x22a>
 8001be6:	70dd      	strb	r5, [r3, #3]
 8001be8:	705d      	strb	r5, [r3, #1]
						mode = off_alarm;
 8001bea:	2305      	movs	r3, #5
 8001bec:	e7e6      	b.n	8001bbc <task_fuc+0x1fc>
					else alarm_time.off_time = alarm_time.off_time < 20 ? alarm_time.off_time + 1 : 1;
 8001bee:	785a      	ldrb	r2, [r3, #1]
 8001bf0:	2a13      	cmp	r2, #19
 8001bf2:	d801      	bhi.n	8001bf8 <task_fuc+0x238>
 8001bf4:	3201      	adds	r2, #1
 8001bf6:	b2d5      	uxtb	r5, r2
 8001bf8:	705d      	strb	r5, [r3, #1]
 8001bfa:	e747      	b.n	8001a8c <task_fuc+0xcc>
				else if(area_check(&curXY, &button[alarm_ok_button].area)) mode = befo_mode;
 8001bfc:	0038      	movs	r0, r7
 8001bfe:	4949      	ldr	r1, [pc, #292]	; (8001d24 <task_fuc+0x364>)
 8001c00:	f7ff fb02 	bl	8001208 <area_check>
 8001c04:	2800      	cmp	r0, #0
 8001c06:	d100      	bne.n	8001c0a <task_fuc+0x24a>
 8001c08:	e740      	b.n	8001a8c <task_fuc+0xcc>
 8001c0a:	ab06      	add	r3, sp, #24
 8001c0c:	781b      	ldrb	r3, [r3, #0]
 8001c0e:	e7d5      	b.n	8001bbc <task_fuc+0x1fc>
			else if(slide_state == down_slide) lower_menu = (lower_menu == power_set_state) ? lower_menu = alarm_set_state : lower_menu - 1;
 8001c10:	2b02      	cmp	r3, #2
 8001c12:	d000      	beq.n	8001c16 <task_fuc+0x256>
 8001c14:	e74b      	b.n	8001aae <task_fuc+0xee>
 8001c16:	4937      	ldr	r1, [pc, #220]	; (8001cf4 <task_fuc+0x334>)
 8001c18:	780a      	ldrb	r2, [r1, #0]
 8001c1a:	2a00      	cmp	r2, #0
 8001c1c:	d001      	beq.n	8001c22 <task_fuc+0x262>
 8001c1e:	3a01      	subs	r2, #1
 8001c20:	b2d3      	uxtb	r3, r2
 8001c22:	700b      	strb	r3, [r1, #0]
 8001c24:	e743      	b.n	8001aae <task_fuc+0xee>
			else if(mode == dehumidity)  motorM = sensor[sht41_hum].data >= 70 ? 1 : 0;
 8001c26:	2b01      	cmp	r3, #1
 8001c28:	d103      	bne.n	8001c32 <task_fuc+0x272>
 8001c2a:	4b34      	ldr	r3, [pc, #208]	; (8001cfc <task_fuc+0x33c>)
 8001c2c:	8b1a      	ldrh	r2, [r3, #24]
 8001c2e:	2345      	movs	r3, #69	; 0x45
 8001c30:	e74d      	b.n	8001ace <task_fuc+0x10e>
			else if(mode == ventilation) motorM = motorM == 0 ? 1 : motorM;
 8001c32:	2b02      	cmp	r3, #2
 8001c34:	d17a      	bne.n	8001d2c <task_fuc+0x36c>
 8001c36:	7801      	ldrb	r1, [r0, #0]
 8001c38:	1c0b      	adds	r3, r1, #0
 8001c3a:	2900      	cmp	r1, #0
 8001c3c:	d100      	bne.n	8001c40 <task_fuc+0x280>
 8001c3e:	1c13      	adds	r3, r2, #0
		}
		else if(motorM == 1) motorM = 0;
 8001c40:	7003      	strb	r3, [r0, #0]

		motor_drive(&motorM, &wind_power);
 8001c42:	9900      	ldr	r1, [sp, #0]
 8001c44:	f7ff fa14 	bl	8001070 <motor_drive>

		/* function that use time */
		if(HAL_GetTick() - tick >= 500){
 8001c48:	f000 fb5e 	bl	8002308 <HAL_GetTick>
 8001c4c:	9b03      	ldr	r3, [sp, #12]
 8001c4e:	1ac0      	subs	r0, r0, r3
 8001c50:	23fa      	movs	r3, #250	; 0xfa
 8001c52:	005b      	lsls	r3, r3, #1
 8001c54:	4298      	cmp	r0, r3
 8001c56:	d305      	bcc.n	8001c64 <task_fuc+0x2a4>
			tick = HAL_GetTick();
 8001c58:	f000 fb56 	bl	8002308 <HAL_GetTick>
			screen_update = 0;
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	4b24      	ldr	r3, [pc, #144]	; (8001cf0 <task_fuc+0x330>)
			tick = HAL_GetTick();
 8001c60:	9003      	str	r0, [sp, #12]
			screen_update = 0;
 8001c62:	701a      	strb	r2, [r3, #0]
		}

		if(buzM == 1){
 8001c64:	4e30      	ldr	r6, [pc, #192]	; (8001d28 <task_fuc+0x368>)
 8001c66:	7833      	ldrb	r3, [r6, #0]
 8001c68:	2b01      	cmp	r3, #1
 8001c6a:	d173      	bne.n	8001d54 <task_fuc+0x394>
			if(HAL_GetTick() - buz_tick < 100){
 8001c6c:	f000 fb4c 	bl	8002308 <HAL_GetTick>
 8001c70:	9b01      	ldr	r3, [sp, #4]
 8001c72:	1ac0      	subs	r0, r0, r3
 8001c74:	2863      	cmp	r0, #99	; 0x63
 8001c76:	d866      	bhi.n	8001d46 <task_fuc+0x386>
				BUZ(buz_state);
 8001c78:	4b22      	ldr	r3, [pc, #136]	; (8001d04 <task_fuc+0x344>)
 8001c7a:	7818      	ldrb	r0, [r3, #0]
			}
			else { buzM = 0; buz_tick = HAL_GetTick(); BUZ(0); }
 8001c7c:	f7ff fa08 	bl	8001090 <BUZ>
		}
		else buz_tick = HAL_GetTick();

		if(mode != on_alarm && mode != off_alarm && (alarm_time.alarm_on_f == 1 || alarm_time.alarm_off_f == 1)){
 8001c80:	7823      	ldrb	r3, [r4, #0]
 8001c82:	3b04      	subs	r3, #4
 8001c84:	2b01      	cmp	r3, #1
 8001c86:	d974      	bls.n	8001d72 <task_fuc+0x3b2>
 8001c88:	ad07      	add	r5, sp, #28
 8001c8a:	78ab      	ldrb	r3, [r5, #2]
 8001c8c:	2b01      	cmp	r3, #1
 8001c8e:	d002      	beq.n	8001c96 <task_fuc+0x2d6>
 8001c90:	78eb      	ldrb	r3, [r5, #3]
 8001c92:	2b01      	cmp	r3, #1
 8001c94:	d16d      	bne.n	8001d72 <task_fuc+0x3b2>
			if(HAL_GetTick() - alarm_tick > 1000){
 8001c96:	f000 fb37 	bl	8002308 <HAL_GetTick>
 8001c9a:	9b02      	ldr	r3, [sp, #8]
 8001c9c:	1ac0      	subs	r0, r0, r3
 8001c9e:	23fa      	movs	r3, #250	; 0xfa
 8001ca0:	009b      	lsls	r3, r3, #2
 8001ca2:	4298      	cmp	r0, r3
 8001ca4:	d918      	bls.n	8001cd8 <task_fuc+0x318>
				alarm_tick = HAL_GetTick();
 8001ca6:	f000 fb2f 	bl	8002308 <HAL_GetTick>

				alarm_time.on_time  = alarm_time.on_time  > 0 ? alarm_time.on_time  - 1 : alarm_time.on_time;
 8001caa:	782a      	ldrb	r2, [r5, #0]
				alarm_tick = HAL_GetTick();
 8001cac:	9002      	str	r0, [sp, #8]
				alarm_time.on_time  = alarm_time.on_time  > 0 ? alarm_time.on_time  - 1 : alarm_time.on_time;
 8001cae:	2a00      	cmp	r2, #0
 8001cb0:	d001      	beq.n	8001cb6 <task_fuc+0x2f6>
 8001cb2:	3a01      	subs	r2, #1
 8001cb4:	b2d2      	uxtb	r2, r2
				alarm_time.off_time = alarm_time.off_time > 0 ? alarm_time.off_time - 1 : alarm_time.off_time;
 8001cb6:	786b      	ldrb	r3, [r5, #1]
				alarm_time.on_time  = alarm_time.on_time  > 0 ? alarm_time.on_time  - 1 : alarm_time.on_time;
 8001cb8:	702a      	strb	r2, [r5, #0]
				alarm_time.off_time = alarm_time.off_time > 0 ? alarm_time.off_time - 1 : alarm_time.off_time;
 8001cba:	2b00      	cmp	r3, #0
 8001cbc:	d001      	beq.n	8001cc2 <task_fuc+0x302>
 8001cbe:	3b01      	subs	r3, #1
 8001cc0:	b2db      	uxtb	r3, r3
 8001cc2:	706b      	strb	r3, [r5, #1]

				if(alarm_time.on_time == 0 && alarm_time.alarm_on_f == 1)        { power = on;  alarm_time.alarm_on_f  = 0; screen_update = 0; }
 8001cc4:	2a00      	cmp	r2, #0
 8001cc6:	d149      	bne.n	8001d5c <task_fuc+0x39c>
 8001cc8:	78a9      	ldrb	r1, [r5, #2]
 8001cca:	2901      	cmp	r1, #1
 8001ccc:	d146      	bne.n	8001d5c <task_fuc+0x39c>
 8001cce:	4b0a      	ldr	r3, [pc, #40]	; (8001cf8 <task_fuc+0x338>)
 8001cd0:	70aa      	strb	r2, [r5, #2]
 8001cd2:	7019      	strb	r1, [r3, #0]
 8001cd4:	4b06      	ldr	r3, [pc, #24]	; (8001cf0 <task_fuc+0x330>)
 8001cd6:	701a      	strb	r2, [r3, #0]
				else if(alarm_time.off_time == 0 && alarm_time.alarm_off_f == 1) { power = off; alarm_time.alarm_off_f = 0; screen_update = 0; }
			}
		}
		else alarm_tick = HAL_GetTick();

		befo_touch = curXY.touched;
 8001cd8:	4b03      	ldr	r3, [pc, #12]	; (8001ce8 <task_fuc+0x328>)
 8001cda:	791e      	ldrb	r6, [r3, #4]
		get_touch(&curXY);
 8001cdc:	e69b      	b.n	8001a16 <task_fuc+0x56>
 8001cde:	46c0      	nop			; (mov r8, r8)
 8001ce0:	08004c1c 	.word	0x08004c1c
 8001ce4:	08005235 	.word	0x08005235
 8001ce8:	20000288 	.word	0x20000288
 8001cec:	200003af 	.word	0x200003af
 8001cf0:	200003ae 	.word	0x200003ae
 8001cf4:	200003ac 	.word	0x200003ac
 8001cf8:	200003ad 	.word	0x200003ad
 8001cfc:	20000160 	.word	0x20000160
 8001d00:	20000000 	.word	0x20000000
 8001d04:	200000fc 	.word	0x200000fc
 8001d08:	20000024 	.word	0x20000024
 8001d0c:	20000050 	.word	0x20000050
 8001d10:	20000074 	.word	0x20000074
 8001d14:	20000058 	.word	0x20000058
 8001d18:	2000007c 	.word	0x2000007c
 8001d1c:	20000090 	.word	0x20000090
 8001d20:	200000b4 	.word	0x200000b4
 8001d24:	200000d8 	.word	0x200000d8
 8001d28:	20000286 	.word	0x20000286
			else if(mode == heating)     motorM = sensor[sht41_temp].data < set_temp ? 1 : 0;
 8001d2c:	2b03      	cmp	r3, #3
 8001d2e:	d188      	bne.n	8001c42 <task_fuc+0x282>
 8001d30:	4b12      	ldr	r3, [pc, #72]	; (8001d7c <task_fuc+0x3bc>)
 8001d32:	aa04      	add	r2, sp, #16
 8001d34:	891b      	ldrh	r3, [r3, #8]
 8001d36:	7a52      	ldrb	r2, [r2, #9]
 8001d38:	e6c9      	b.n	8001ace <task_fuc+0x10e>
		else if(motorM == 1) motorM = 0;
 8001d3a:	7803      	ldrb	r3, [r0, #0]
 8001d3c:	2b01      	cmp	r3, #1
 8001d3e:	d000      	beq.n	8001d42 <task_fuc+0x382>
 8001d40:	e77f      	b.n	8001c42 <task_fuc+0x282>
 8001d42:	2300      	movs	r3, #0
 8001d44:	e77c      	b.n	8001c40 <task_fuc+0x280>
			else { buzM = 0; buz_tick = HAL_GetTick(); BUZ(0); }
 8001d46:	2500      	movs	r5, #0
 8001d48:	7035      	strb	r5, [r6, #0]
 8001d4a:	f000 fadd 	bl	8002308 <HAL_GetTick>
 8001d4e:	9001      	str	r0, [sp, #4]
 8001d50:	0028      	movs	r0, r5
 8001d52:	e793      	b.n	8001c7c <task_fuc+0x2bc>
		else buz_tick = HAL_GetTick();
 8001d54:	f000 fad8 	bl	8002308 <HAL_GetTick>
 8001d58:	9001      	str	r0, [sp, #4]
 8001d5a:	e791      	b.n	8001c80 <task_fuc+0x2c0>
				else if(alarm_time.off_time == 0 && alarm_time.alarm_off_f == 1) { power = off; alarm_time.alarm_off_f = 0; screen_update = 0; }
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d1bb      	bne.n	8001cd8 <task_fuc+0x318>
 8001d60:	78ea      	ldrb	r2, [r5, #3]
 8001d62:	2a01      	cmp	r2, #1
 8001d64:	d1b8      	bne.n	8001cd8 <task_fuc+0x318>
 8001d66:	4a06      	ldr	r2, [pc, #24]	; (8001d80 <task_fuc+0x3c0>)
 8001d68:	70eb      	strb	r3, [r5, #3]
 8001d6a:	7013      	strb	r3, [r2, #0]
 8001d6c:	4a05      	ldr	r2, [pc, #20]	; (8001d84 <task_fuc+0x3c4>)
 8001d6e:	7013      	strb	r3, [r2, #0]
 8001d70:	e7b2      	b.n	8001cd8 <task_fuc+0x318>
		else alarm_tick = HAL_GetTick();
 8001d72:	f000 fac9 	bl	8002308 <HAL_GetTick>
 8001d76:	9002      	str	r0, [sp, #8]
 8001d78:	e7ae      	b.n	8001cd8 <task_fuc+0x318>
 8001d7a:	46c0      	nop			; (mov r8, r8)
 8001d7c:	20000160 	.word	0x20000160
 8001d80:	200003ad 	.word	0x200003ad
 8001d84:	200003ae 	.word	0x200003ae

08001d88 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8001d88:	b510      	push	{r4, lr}
 8001d8a:	b09c      	sub	sp, #112	; 0x70
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001d8c:	2224      	movs	r2, #36	; 0x24
 8001d8e:	2100      	movs	r1, #0
 8001d90:	a80f      	add	r0, sp, #60	; 0x3c
 8001d92:	f002 face 	bl	8004332 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001d96:	2214      	movs	r2, #20
 8001d98:	2100      	movs	r1, #0
 8001d9a:	a801      	add	r0, sp, #4
 8001d9c:	f002 fac9 	bl	8004332 <memset>
	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001da0:	2220      	movs	r2, #32
 8001da2:	2100      	movs	r1, #0
 8001da4:	a806      	add	r0, sp, #24
 8001da6:	f002 fac4 	bl	8004332 <memset>

	/** Configure the main internal regulator output voltage
	 */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001daa:	491d      	ldr	r1, [pc, #116]	; (8001e20 <SystemClock_Config+0x98>)
 8001dac:	4a1d      	ldr	r2, [pc, #116]	; (8001e24 <SystemClock_Config+0x9c>)
 8001dae:	680b      	ldr	r3, [r1, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001db0:	2401      	movs	r4, #1
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001db2:	401a      	ands	r2, r3
 8001db4:	2380      	movs	r3, #128	; 0x80
 8001db6:	011b      	lsls	r3, r3, #4
 8001db8:	4313      	orrs	r3, r2
 8001dba:	600b      	str	r3, [r1, #0]
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001dbc:	2302      	movs	r3, #2
 8001dbe:	930e      	str	r3, [sp, #56]	; 0x38
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001dc0:	9318      	str	r3, [sp, #96]	; 0x60
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	9319      	str	r3, [sp, #100]	; 0x64
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 8001dc6:	2380      	movs	r3, #128	; 0x80
 8001dc8:	02db      	lsls	r3, r3, #11
 8001dca:	931a      	str	r3, [sp, #104]	; 0x68
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001dcc:	2380      	movs	r3, #128	; 0x80
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001dce:	2210      	movs	r2, #16
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001dd0:	03db      	lsls	r3, r3, #15
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001dd2:	a80e      	add	r0, sp, #56	; 0x38
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001dd4:	9411      	str	r4, [sp, #68]	; 0x44
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001dd6:	9212      	str	r2, [sp, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001dd8:	931b      	str	r3, [sp, #108]	; 0x6c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001dda:	f001 f905 	bl	8002fe8 <HAL_RCC_OscConfig>
 8001dde:	2800      	cmp	r0, #0
 8001de0:	d001      	beq.n	8001de6 <SystemClock_Config+0x5e>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001de2:	b672      	cpsid	i
void Error_Handler(void)
{
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001de4:	e7fe      	b.n	8001de4 <SystemClock_Config+0x5c>
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001de6:	230f      	movs	r3, #15
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001de8:	9003      	str	r0, [sp, #12]
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001dea:	9301      	str	r3, [sp, #4]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001dec:	9004      	str	r0, [sp, #16]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001dee:	3b0c      	subs	r3, #12
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001df0:	9005      	str	r0, [sp, #20]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001df2:	0021      	movs	r1, r4
 8001df4:	a801      	add	r0, sp, #4
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001df6:	9302      	str	r3, [sp, #8]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001df8:	f001 fb78 	bl	80034ec <HAL_RCC_ClockConfig>
 8001dfc:	2800      	cmp	r0, #0
 8001dfe:	d001      	beq.n	8001e04 <SystemClock_Config+0x7c>
 8001e00:	b672      	cpsid	i
	while (1)
 8001e02:	e7fe      	b.n	8001e02 <SystemClock_Config+0x7a>
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 8001e04:	2309      	movs	r3, #9
	PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8001e06:	9008      	str	r0, [sp, #32]
	PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001e08:	900b      	str	r0, [sp, #44]	; 0x2c
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001e0a:	a806      	add	r0, sp, #24
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 8001e0c:	9306      	str	r3, [sp, #24]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001e0e:	f001 fc5b 	bl	80036c8 <HAL_RCCEx_PeriphCLKConfig>
 8001e12:	2800      	cmp	r0, #0
 8001e14:	d001      	beq.n	8001e1a <SystemClock_Config+0x92>
 8001e16:	b672      	cpsid	i
	while (1)
 8001e18:	e7fe      	b.n	8001e18 <SystemClock_Config+0x90>
}
 8001e1a:	b01c      	add	sp, #112	; 0x70
 8001e1c:	bd10      	pop	{r4, pc}
 8001e1e:	46c0      	nop			; (mov r8, r8)
 8001e20:	40007000 	.word	0x40007000
 8001e24:	ffffe7ff 	.word	0xffffe7ff

08001e28 <main>:
{
 8001e28:	b5f0      	push	{r4, r5, r6, r7, lr}
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e2a:	2501      	movs	r5, #1
{
 8001e2c:	b08b      	sub	sp, #44	; 0x2c
	HAL_Init();
 8001e2e:	f000 fa4b 	bl	80022c8 <HAL_Init>
	SystemClock_Config();
 8001e32:	f7ff ffa9 	bl	8001d88 <SystemClock_Config>
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e36:	2214      	movs	r2, #20
 8001e38:	2100      	movs	r1, #0
 8001e3a:	a805      	add	r0, sp, #20
 8001e3c:	f002 fa79 	bl	8004332 <memset>
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e40:	2102      	movs	r1, #2
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e42:	27a0      	movs	r7, #160	; 0xa0
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e44:	4b63      	ldr	r3, [pc, #396]	; (8001fd4 <main+0x1ac>)
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e46:	05ff      	lsls	r7, r7, #23
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e48:	6ada      	ldr	r2, [r3, #44]	; 0x2c
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e4a:	0038      	movs	r0, r7
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e4c:	432a      	orrs	r2, r5
 8001e4e:	62da      	str	r2, [r3, #44]	; 0x2c
 8001e50:	6ada      	ldr	r2, [r3, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e52:	2400      	movs	r4, #0
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e54:	402a      	ands	r2, r5
 8001e56:	9201      	str	r2, [sp, #4]
 8001e58:	9a01      	ldr	r2, [sp, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e5a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
	huart1.Instance = USART1;
 8001e5c:	4e5e      	ldr	r6, [pc, #376]	; (8001fd8 <main+0x1b0>)
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e5e:	430a      	orrs	r2, r1
 8001e60:	62da      	str	r2, [r3, #44]	; 0x2c
 8001e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e64:	2200      	movs	r2, #0
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e66:	400b      	ands	r3, r1
 8001e68:	9302      	str	r3, [sp, #8]
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e6a:	3136      	adds	r1, #54	; 0x36
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e6c:	9b02      	ldr	r3, [sp, #8]
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e6e:	f000 fb67 	bl	8002540 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin;
 8001e72:	2307      	movs	r3, #7
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e74:	0038      	movs	r0, r7
 8001e76:	a905      	add	r1, sp, #20
	GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin;
 8001e78:	9305      	str	r3, [sp, #20]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001e7a:	9507      	str	r5, [sp, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e7c:	9406      	str	r4, [sp, #24]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e7e:	f000 fa9f 	bl	80023c0 <HAL_GPIO_Init>
	GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin;
 8001e82:	2338      	movs	r3, #56	; 0x38
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e84:	0038      	movs	r0, r7
 8001e86:	a905      	add	r1, sp, #20
	GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin;
 8001e88:	9305      	str	r3, [sp, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e8a:	9506      	str	r5, [sp, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e8c:	9407      	str	r4, [sp, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e8e:	9408      	str	r4, [sp, #32]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e90:	f000 fa96 	bl	80023c0 <HAL_GPIO_Init>
	GPIO_InitStruct.Pin = LEFT_Pin|RIGHT_Pin;
 8001e94:	230a      	movs	r3, #10
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e96:	4851      	ldr	r0, [pc, #324]	; (8001fdc <main+0x1b4>)
 8001e98:	a905      	add	r1, sp, #20
	GPIO_InitStruct.Pin = LEFT_Pin|RIGHT_Pin;
 8001e9a:	9305      	str	r3, [sp, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e9c:	9406      	str	r4, [sp, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e9e:	9407      	str	r4, [sp, #28]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ea0:	f000 fa8e 	bl	80023c0 <HAL_GPIO_Init>
	huart1.Init.BaudRate = 9600;
 8001ea4:	2396      	movs	r3, #150	; 0x96
	huart1.Instance = USART1;
 8001ea6:	484e      	ldr	r0, [pc, #312]	; (8001fe0 <main+0x1b8>)
	huart1.Init.BaudRate = 9600;
 8001ea8:	019b      	lsls	r3, r3, #6
 8001eaa:	6043      	str	r3, [r0, #4]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8001eac:	230c      	movs	r3, #12
	huart1.Instance = USART1;
 8001eae:	6006      	str	r6, [r0, #0]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001eb0:	6084      	str	r4, [r0, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 8001eb2:	60c4      	str	r4, [r0, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 8001eb4:	6104      	str	r4, [r0, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8001eb6:	6143      	str	r3, [r0, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001eb8:	6184      	str	r4, [r0, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001eba:	61c4      	str	r4, [r0, #28]
	huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001ebc:	6204      	str	r4, [r0, #32]
	huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001ebe:	6244      	str	r4, [r0, #36]	; 0x24
	if (HAL_UART_Init(&huart1) != HAL_OK)
 8001ec0:	f002 f9be 	bl	8004240 <HAL_UART_Init>
 8001ec4:	0005      	movs	r5, r0
 8001ec6:	42a0      	cmp	r0, r4
 8001ec8:	d001      	beq.n	8001ece <main+0xa6>
 8001eca:	b672      	cpsid	i
	while (1)
 8001ecc:	e7fe      	b.n	8001ecc <main+0xa4>
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ece:	0001      	movs	r1, r0
 8001ed0:	2208      	movs	r2, #8
 8001ed2:	a803      	add	r0, sp, #12
 8001ed4:	f002 fa2d 	bl	8004332 <memset>
	TIM_OC_InitTypeDef sConfigOC = {0};
 8001ed8:	2210      	movs	r2, #16
 8001eda:	0029      	movs	r1, r5
 8001edc:	a805      	add	r0, sp, #20
 8001ede:	f002 fa28 	bl	8004332 <memset>
	htim2.Instance = TIM2;
 8001ee2:	2380      	movs	r3, #128	; 0x80
 8001ee4:	4c3f      	ldr	r4, [pc, #252]	; (8001fe4 <main+0x1bc>)
 8001ee6:	05db      	lsls	r3, r3, #23
 8001ee8:	6023      	str	r3, [r4, #0]
	htim2.Init.Prescaler = 32-1;
 8001eea:	231f      	movs	r3, #31
	if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001eec:	0020      	movs	r0, r4
	htim2.Init.Prescaler = 32-1;
 8001eee:	6063      	str	r3, [r4, #4]
	htim2.Init.Period = 250-1;
 8001ef0:	33da      	adds	r3, #218	; 0xda
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ef2:	60a5      	str	r5, [r4, #8]
	htim2.Init.Period = 250-1;
 8001ef4:	60e3      	str	r3, [r4, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001ef6:	6125      	str	r5, [r4, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ef8:	6165      	str	r5, [r4, #20]
	if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001efa:	f001 fd89 	bl	8003a10 <HAL_TIM_PWM_Init>
 8001efe:	2800      	cmp	r0, #0
 8001f00:	d001      	beq.n	8001f06 <main+0xde>
 8001f02:	b672      	cpsid	i
	while (1)
 8001f04:	e7fe      	b.n	8001f04 <main+0xdc>
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001f06:	9003      	str	r0, [sp, #12]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f08:	9004      	str	r0, [sp, #16]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001f0a:	a903      	add	r1, sp, #12
 8001f0c:	0020      	movs	r0, r4
 8001f0e:	f001 fe39 	bl	8003b84 <HAL_TIMEx_MasterConfigSynchronization>
 8001f12:	1e02      	subs	r2, r0, #0
 8001f14:	d001      	beq.n	8001f1a <main+0xf2>
 8001f16:	b672      	cpsid	i
	while (1)
 8001f18:	e7fe      	b.n	8001f18 <main+0xf0>
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001f1a:	2360      	movs	r3, #96	; 0x60
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f1c:	9007      	str	r0, [sp, #28]
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001f1e:	9305      	str	r3, [sp, #20]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f20:	9008      	str	r0, [sp, #32]
	sConfigOC.Pulse = 125-1;
 8001f22:	331c      	adds	r3, #28
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f24:	0020      	movs	r0, r4
 8001f26:	a905      	add	r1, sp, #20
	sConfigOC.Pulse = 125-1;
 8001f28:	9306      	str	r3, [sp, #24]
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f2a:	f001 fd9d 	bl	8003a68 <HAL_TIM_PWM_ConfigChannel>
 8001f2e:	1e05      	subs	r5, r0, #0
 8001f30:	d001      	beq.n	8001f36 <main+0x10e>
 8001f32:	b672      	cpsid	i
	while (1)
 8001f34:	e7fe      	b.n	8001f34 <main+0x10c>
	HAL_TIM_MspPostInit(&htim2);
 8001f36:	0020      	movs	r0, r4
 8001f38:	f000 f8fa 	bl	8002130 <HAL_TIM_MspPostInit>
	hi2c1.Instance = I2C1;
 8001f3c:	4c2a      	ldr	r4, [pc, #168]	; (8001fe8 <main+0x1c0>)
 8001f3e:	4b2b      	ldr	r3, [pc, #172]	; (8001fec <main+0x1c4>)
	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001f40:	0020      	movs	r0, r4
	hi2c1.Instance = I2C1;
 8001f42:	6023      	str	r3, [r4, #0]
	hi2c1.Init.Timing = 0x00300F38;
 8001f44:	4b2a      	ldr	r3, [pc, #168]	; (8001ff0 <main+0x1c8>)
	hi2c1.Init.OwnAddress1 = 0;
 8001f46:	60a5      	str	r5, [r4, #8]
	hi2c1.Init.Timing = 0x00300F38;
 8001f48:	6063      	str	r3, [r4, #4]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f4a:	2301      	movs	r3, #1
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001f4c:	6125      	str	r5, [r4, #16]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f4e:	60e3      	str	r3, [r4, #12]
	hi2c1.Init.OwnAddress2 = 0;
 8001f50:	6165      	str	r5, [r4, #20]
	hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001f52:	61a5      	str	r5, [r4, #24]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001f54:	61e5      	str	r5, [r4, #28]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001f56:	6225      	str	r5, [r4, #32]
	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001f58:	f000 fc7a 	bl	8002850 <HAL_I2C_Init>
 8001f5c:	1e01      	subs	r1, r0, #0
 8001f5e:	d001      	beq.n	8001f64 <main+0x13c>
 8001f60:	b672      	cpsid	i
	while (1)
 8001f62:	e7fe      	b.n	8001f62 <main+0x13a>
	if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001f64:	0020      	movs	r0, r4
 8001f66:	f000 ffad 	bl	8002ec4 <HAL_I2CEx_ConfigAnalogFilter>
 8001f6a:	1e01      	subs	r1, r0, #0
 8001f6c:	d001      	beq.n	8001f72 <main+0x14a>
 8001f6e:	b672      	cpsid	i
	while (1)
 8001f70:	e7fe      	b.n	8001f70 <main+0x148>
	if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001f72:	0020      	movs	r0, r4
 8001f74:	f000 ffcc 	bl	8002f10 <HAL_I2CEx_ConfigDigitalFilter>
 8001f78:	1e04      	subs	r4, r0, #0
 8001f7a:	d001      	beq.n	8001f80 <main+0x158>
 8001f7c:	b672      	cpsid	i
	while (1)
 8001f7e:	e7fe      	b.n	8001f7e <main+0x156>
	initEns160();
 8001f80:	f7ff f836 	bl	8000ff0 <initEns160>
	initDrv8830();
 8001f84:	f7fe fffc 	bl	8000f80 <initDrv8830>
	LED(1,0);
 8001f88:	2308      	movs	r3, #8
	nextion_inst_set("baud=921600");
 8001f8a:	4d1a      	ldr	r5, [pc, #104]	; (8001ff4 <main+0x1cc>)
	LED(1,0);
 8001f8c:	61bb      	str	r3, [r7, #24]
	LED(2,0);
 8001f8e:	18db      	adds	r3, r3, r3
 8001f90:	61bb      	str	r3, [r7, #24]
	LED(3,0);
 8001f92:	3310      	adds	r3, #16
 8001f94:	61bb      	str	r3, [r7, #24]
	nextion_inst_set("baud=921600");
 8001f96:	0028      	movs	r0, r5
 8001f98:	f7ff f8a8 	bl	80010ec <nextion_inst_set>
	nextion_inst_set("baud=921600");
 8001f9c:	0028      	movs	r0, r5
 8001f9e:	f7ff f8a5 	bl	80010ec <nextion_inst_set>
	nextion_inst_set("baud=921600");
 8001fa2:	0028      	movs	r0, r5
 8001fa4:	f7ff f8a2 	bl	80010ec <nextion_inst_set>
	HAL_Delay(50);
 8001fa8:	2032      	movs	r0, #50	; 0x32
 8001faa:	f000 f9b3 	bl	8002314 <HAL_Delay>
	USART1->CR1 &= (~USART_CR1_UE);
 8001fae:	2201      	movs	r2, #1
 8001fb0:	6833      	ldr	r3, [r6, #0]
	HAL_Delay(1000);
 8001fb2:	20fa      	movs	r0, #250	; 0xfa
	USART1->CR1 &= (~USART_CR1_UE);
 8001fb4:	4393      	bics	r3, r2
 8001fb6:	6033      	str	r3, [r6, #0]
	USART1->BRR = 0x23;
 8001fb8:	2323      	movs	r3, #35	; 0x23
 8001fba:	60f3      	str	r3, [r6, #12]
	USART1->CR1 |= USART_CR1_UE;
 8001fbc:	6833      	ldr	r3, [r6, #0]
	HAL_Delay(1000);
 8001fbe:	0080      	lsls	r0, r0, #2
	USART1->CR1 |= USART_CR1_UE;
 8001fc0:	4313      	orrs	r3, r2
 8001fc2:	6033      	str	r3, [r6, #0]
	HAL_Delay(1000);
 8001fc4:	f000 f9a6 	bl	8002314 <HAL_Delay>
	setMotor(DRV8830_STOP);
 8001fc8:	0020      	movs	r0, r4
 8001fca:	f7fe ffed 	bl	8000fa8 <setMotor>
	task_fuc();
 8001fce:	f7ff fcf7 	bl	80019c0 <task_fuc>
 8001fd2:	46c0      	nop			; (mov r8, r8)
 8001fd4:	40021000 	.word	0x40021000
 8001fd8:	40013800 	.word	0x40013800
 8001fdc:	50000400 	.word	0x50000400
 8001fe0:	20000324 	.word	0x20000324
 8001fe4:	200002e4 	.word	0x200002e4
 8001fe8:	20000290 	.word	0x20000290
 8001fec:	40005400 	.word	0x40005400
 8001ff0:	00300f38 	.word	0x00300f38
 8001ff4:	0800523f 	.word	0x0800523f

08001ff8 <getTempSht41>:
 8001ff8:	b570      	push	{r4, r5, r6, lr}
 8001ffa:	250f      	movs	r5, #15
 8001ffc:	23fd      	movs	r3, #253	; 0xfd
 8001ffe:	4e21      	ldr	r6, [pc, #132]	; (8002084 <getTempSht41+0x8c>)
 8002000:	b086      	sub	sp, #24
 8002002:	0004      	movs	r4, r0
 8002004:	446d      	add	r5, sp
 8002006:	0030      	movs	r0, r6
 8002008:	702b      	strb	r3, [r5, #0]
 800200a:	f000 fc21 	bl	8002850 <HAL_I2C_Init>
 800200e:	2301      	movs	r3, #1
 8002010:	002a      	movs	r2, r5
 8002012:	9300      	str	r3, [sp, #0]
 8002014:	2189      	movs	r1, #137	; 0x89
 8002016:	0030      	movs	r0, r6
 8002018:	f000 fc70 	bl	80028fc <HAL_I2C_Master_Transmit>
 800201c:	2014      	movs	r0, #20
 800201e:	f000 f979 	bl	8002314 <HAL_Delay>
 8002022:	230a      	movs	r3, #10
 8002024:	ad04      	add	r5, sp, #16
 8002026:	002a      	movs	r2, r5
 8002028:	2189      	movs	r1, #137	; 0x89
 800202a:	9300      	str	r3, [sp, #0]
 800202c:	0030      	movs	r0, r6
 800202e:	3b04      	subs	r3, #4
 8002030:	f000 fcf6 	bl	8002a20 <HAL_I2C_Master_Receive>
 8002034:	2213      	movs	r2, #19
 8002036:	446a      	add	r2, sp
 8002038:	7850      	ldrb	r0, [r2, #1]
 800203a:	7813      	ldrb	r3, [r2, #0]
 800203c:	0200      	lsls	r0, r0, #8
 800203e:	4318      	orrs	r0, r3
 8002040:	ba40      	rev16	r0, r0
 8002042:	b280      	uxth	r0, r0
 8002044:	f7fe fe46 	bl	8000cd4 <__aeabi_ui2f>
 8002048:	490f      	ldr	r1, [pc, #60]	; (8002088 <getTempSht41+0x90>)
 800204a:	f7fe fa37 	bl	80004bc <__aeabi_fdiv>
 800204e:	490f      	ldr	r1, [pc, #60]	; (800208c <getTempSht41+0x94>)
 8002050:	f7fe fb4c 	bl	80006ec <__aeabi_fmul>
 8002054:	490e      	ldr	r1, [pc, #56]	; (8002090 <getTempSht41+0x98>)
 8002056:	f7fe fc6f 	bl	8000938 <__aeabi_fsub>
 800205a:	1c06      	adds	r6, r0, #0
 800205c:	8828      	ldrh	r0, [r5, #0]
 800205e:	ba40      	rev16	r0, r0
 8002060:	b280      	uxth	r0, r0
 8002062:	f7fe fe37 	bl	8000cd4 <__aeabi_ui2f>
 8002066:	4908      	ldr	r1, [pc, #32]	; (8002088 <getTempSht41+0x90>)
 8002068:	f7fe fa28 	bl	80004bc <__aeabi_fdiv>
 800206c:	4909      	ldr	r1, [pc, #36]	; (8002094 <getTempSht41+0x9c>)
 800206e:	f7fe fb3d 	bl	80006ec <__aeabi_fmul>
 8002072:	4909      	ldr	r1, [pc, #36]	; (8002098 <getTempSht41+0xa0>)
 8002074:	f7fe fc60 	bl	8000938 <__aeabi_fsub>
 8002078:	6020      	str	r0, [r4, #0]
 800207a:	0020      	movs	r0, r4
 800207c:	6066      	str	r6, [r4, #4]
 800207e:	b006      	add	sp, #24
 8002080:	bd70      	pop	{r4, r5, r6, pc}
 8002082:	46c0      	nop			; (mov r8, r8)
 8002084:	20000290 	.word	0x20000290
 8002088:	477fff00 	.word	0x477fff00
 800208c:	42fa0000 	.word	0x42fa0000
 8002090:	40c00000 	.word	0x40c00000
 8002094:	432f0000 	.word	0x432f0000
 8002098:	42340000 	.word	0x42340000

0800209c <HAL_MspInit>:
 800209c:	2201      	movs	r2, #1
 800209e:	4b05      	ldr	r3, [pc, #20]	; (80020b4 <HAL_MspInit+0x18>)
 80020a0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80020a2:	430a      	orrs	r2, r1
 80020a4:	635a      	str	r2, [r3, #52]	; 0x34
 80020a6:	2280      	movs	r2, #128	; 0x80
 80020a8:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80020aa:	0552      	lsls	r2, r2, #21
 80020ac:	430a      	orrs	r2, r1
 80020ae:	639a      	str	r2, [r3, #56]	; 0x38
 80020b0:	4770      	bx	lr
 80020b2:	46c0      	nop			; (mov r8, r8)
 80020b4:	40021000 	.word	0x40021000

080020b8 <HAL_I2C_MspInit>:
 80020b8:	b510      	push	{r4, lr}
 80020ba:	0004      	movs	r4, r0
 80020bc:	b086      	sub	sp, #24
 80020be:	2214      	movs	r2, #20
 80020c0:	2100      	movs	r1, #0
 80020c2:	a801      	add	r0, sp, #4
 80020c4:	f002 f935 	bl	8004332 <memset>
 80020c8:	4b0f      	ldr	r3, [pc, #60]	; (8002108 <HAL_I2C_MspInit+0x50>)
 80020ca:	6822      	ldr	r2, [r4, #0]
 80020cc:	429a      	cmp	r2, r3
 80020ce:	d119      	bne.n	8002104 <HAL_I2C_MspInit+0x4c>
 80020d0:	2102      	movs	r1, #2
 80020d2:	4c0e      	ldr	r4, [pc, #56]	; (800210c <HAL_I2C_MspInit+0x54>)
 80020d4:	480e      	ldr	r0, [pc, #56]	; (8002110 <HAL_I2C_MspInit+0x58>)
 80020d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80020d8:	430a      	orrs	r2, r1
 80020da:	62e2      	str	r2, [r4, #44]	; 0x2c
 80020dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80020de:	400b      	ands	r3, r1
 80020e0:	9300      	str	r3, [sp, #0]
 80020e2:	9b00      	ldr	r3, [sp, #0]
 80020e4:	23c0      	movs	r3, #192	; 0xc0
 80020e6:	9301      	str	r3, [sp, #4]
 80020e8:	3bae      	subs	r3, #174	; 0xae
 80020ea:	9302      	str	r3, [sp, #8]
 80020ec:	3b0f      	subs	r3, #15
 80020ee:	9304      	str	r3, [sp, #16]
 80020f0:	a901      	add	r1, sp, #4
 80020f2:	3b02      	subs	r3, #2
 80020f4:	9305      	str	r3, [sp, #20]
 80020f6:	f000 f963 	bl	80023c0 <HAL_GPIO_Init>
 80020fa:	2380      	movs	r3, #128	; 0x80
 80020fc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80020fe:	039b      	lsls	r3, r3, #14
 8002100:	4313      	orrs	r3, r2
 8002102:	63a3      	str	r3, [r4, #56]	; 0x38
 8002104:	b006      	add	sp, #24
 8002106:	bd10      	pop	{r4, pc}
 8002108:	40005400 	.word	0x40005400
 800210c:	40021000 	.word	0x40021000
 8002110:	50000400 	.word	0x50000400

08002114 <HAL_TIM_PWM_MspInit>:
 8002114:	2380      	movs	r3, #128	; 0x80
 8002116:	6802      	ldr	r2, [r0, #0]
 8002118:	05db      	lsls	r3, r3, #23
 800211a:	429a      	cmp	r2, r3
 800211c:	d104      	bne.n	8002128 <HAL_TIM_PWM_MspInit+0x14>
 800211e:	2301      	movs	r3, #1
 8002120:	4a02      	ldr	r2, [pc, #8]	; (800212c <HAL_TIM_PWM_MspInit+0x18>)
 8002122:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8002124:	430b      	orrs	r3, r1
 8002126:	6393      	str	r3, [r2, #56]	; 0x38
 8002128:	4770      	bx	lr
 800212a:	46c0      	nop			; (mov r8, r8)
 800212c:	40021000 	.word	0x40021000

08002130 <HAL_TIM_MspPostInit>:
 8002130:	b510      	push	{r4, lr}
 8002132:	0004      	movs	r4, r0
 8002134:	b086      	sub	sp, #24
 8002136:	2214      	movs	r2, #20
 8002138:	2100      	movs	r1, #0
 800213a:	a801      	add	r0, sp, #4
 800213c:	f002 f8f9 	bl	8004332 <memset>
 8002140:	2380      	movs	r3, #128	; 0x80
 8002142:	6822      	ldr	r2, [r4, #0]
 8002144:	05db      	lsls	r3, r3, #23
 8002146:	429a      	cmp	r2, r3
 8002148:	d114      	bne.n	8002174 <HAL_TIM_MspPostInit+0x44>
 800214a:	2001      	movs	r0, #1
 800214c:	4a0a      	ldr	r2, [pc, #40]	; (8002178 <HAL_TIM_MspPostInit+0x48>)
 800214e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8002150:	4301      	orrs	r1, r0
 8002152:	62d1      	str	r1, [r2, #44]	; 0x2c
 8002154:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8002156:	a901      	add	r1, sp, #4
 8002158:	4003      	ands	r3, r0
 800215a:	9300      	str	r3, [sp, #0]
 800215c:	9b00      	ldr	r3, [sp, #0]
 800215e:	2380      	movs	r3, #128	; 0x80
 8002160:	021b      	lsls	r3, r3, #8
 8002162:	20a0      	movs	r0, #160	; 0xa0
 8002164:	9301      	str	r3, [sp, #4]
 8002166:	2302      	movs	r3, #2
 8002168:	05c0      	lsls	r0, r0, #23
 800216a:	9302      	str	r3, [sp, #8]
 800216c:	3303      	adds	r3, #3
 800216e:	9305      	str	r3, [sp, #20]
 8002170:	f000 f926 	bl	80023c0 <HAL_GPIO_Init>
 8002174:	b006      	add	sp, #24
 8002176:	bd10      	pop	{r4, pc}
 8002178:	40021000 	.word	0x40021000

0800217c <HAL_UART_MspInit>:
 800217c:	b510      	push	{r4, lr}
 800217e:	0004      	movs	r4, r0
 8002180:	b086      	sub	sp, #24
 8002182:	2214      	movs	r2, #20
 8002184:	2100      	movs	r1, #0
 8002186:	a801      	add	r0, sp, #4
 8002188:	f002 f8d3 	bl	8004332 <memset>
 800218c:	4b10      	ldr	r3, [pc, #64]	; (80021d0 <HAL_UART_MspInit+0x54>)
 800218e:	6822      	ldr	r2, [r4, #0]
 8002190:	429a      	cmp	r2, r3
 8002192:	d11b      	bne.n	80021cc <HAL_UART_MspInit+0x50>
 8002194:	2280      	movs	r2, #128	; 0x80
 8002196:	4b0f      	ldr	r3, [pc, #60]	; (80021d4 <HAL_UART_MspInit+0x58>)
 8002198:	01d2      	lsls	r2, r2, #7
 800219a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800219c:	20a0      	movs	r0, #160	; 0xa0
 800219e:	430a      	orrs	r2, r1
 80021a0:	2101      	movs	r1, #1
 80021a2:	635a      	str	r2, [r3, #52]	; 0x34
 80021a4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80021a6:	05c0      	lsls	r0, r0, #23
 80021a8:	430a      	orrs	r2, r1
 80021aa:	62da      	str	r2, [r3, #44]	; 0x2c
 80021ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80021ae:	400b      	ands	r3, r1
 80021b0:	9300      	str	r3, [sp, #0]
 80021b2:	9b00      	ldr	r3, [sp, #0]
 80021b4:	23c0      	movs	r3, #192	; 0xc0
 80021b6:	00db      	lsls	r3, r3, #3
 80021b8:	9301      	str	r3, [sp, #4]
 80021ba:	2302      	movs	r3, #2
 80021bc:	9302      	str	r3, [sp, #8]
 80021be:	185b      	adds	r3, r3, r1
 80021c0:	9304      	str	r3, [sp, #16]
 80021c2:	185b      	adds	r3, r3, r1
 80021c4:	a901      	add	r1, sp, #4
 80021c6:	9305      	str	r3, [sp, #20]
 80021c8:	f000 f8fa 	bl	80023c0 <HAL_GPIO_Init>
 80021cc:	b006      	add	sp, #24
 80021ce:	bd10      	pop	{r4, pc}
 80021d0:	40013800 	.word	0x40013800
 80021d4:	40021000 	.word	0x40021000

080021d8 <NMI_Handler>:
 80021d8:	e7fe      	b.n	80021d8 <NMI_Handler>

080021da <HardFault_Handler>:
 80021da:	e7fe      	b.n	80021da <HardFault_Handler>

080021dc <SVC_Handler>:
 80021dc:	4770      	bx	lr

080021de <PendSV_Handler>:
 80021de:	4770      	bx	lr

080021e0 <SysTick_Handler>:
 80021e0:	b510      	push	{r4, lr}
 80021e2:	f000 f885 	bl	80022f0 <HAL_IncTick>
 80021e6:	bd10      	pop	{r4, pc}

080021e8 <_sbrk>:
 80021e8:	4a0b      	ldr	r2, [pc, #44]	; (8002218 <_sbrk+0x30>)
 80021ea:	490c      	ldr	r1, [pc, #48]	; (800221c <_sbrk+0x34>)
 80021ec:	0003      	movs	r3, r0
 80021ee:	1a89      	subs	r1, r1, r2
 80021f0:	4a0b      	ldr	r2, [pc, #44]	; (8002220 <_sbrk+0x38>)
 80021f2:	b510      	push	{r4, lr}
 80021f4:	6810      	ldr	r0, [r2, #0]
 80021f6:	2800      	cmp	r0, #0
 80021f8:	d101      	bne.n	80021fe <_sbrk+0x16>
 80021fa:	480a      	ldr	r0, [pc, #40]	; (8002224 <_sbrk+0x3c>)
 80021fc:	6010      	str	r0, [r2, #0]
 80021fe:	6810      	ldr	r0, [r2, #0]
 8002200:	18c3      	adds	r3, r0, r3
 8002202:	428b      	cmp	r3, r1
 8002204:	d906      	bls.n	8002214 <_sbrk+0x2c>
 8002206:	f002 f84d 	bl	80042a4 <__errno>
 800220a:	230c      	movs	r3, #12
 800220c:	6003      	str	r3, [r0, #0]
 800220e:	2001      	movs	r0, #1
 8002210:	4240      	negs	r0, r0
 8002212:	bd10      	pop	{r4, pc}
 8002214:	6013      	str	r3, [r2, #0]
 8002216:	e7fc      	b.n	8002212 <_sbrk+0x2a>
 8002218:	00000400 	.word	0x00000400
 800221c:	20002000 	.word	0x20002000
 8002220:	200003b8 	.word	0x200003b8
 8002224:	200003d0 	.word	0x200003d0

08002228 <SystemInit>:
 8002228:	4770      	bx	lr
	...

0800222c <Reset_Handler>:
 800222c:	480d      	ldr	r0, [pc, #52]	; (8002264 <LoopForever+0x2>)
 800222e:	4685      	mov	sp, r0
 8002230:	f7ff fffa 	bl	8002228 <SystemInit>
 8002234:	480c      	ldr	r0, [pc, #48]	; (8002268 <LoopForever+0x6>)
 8002236:	490d      	ldr	r1, [pc, #52]	; (800226c <LoopForever+0xa>)
 8002238:	4a0d      	ldr	r2, [pc, #52]	; (8002270 <LoopForever+0xe>)
 800223a:	2300      	movs	r3, #0
 800223c:	e002      	b.n	8002244 <LoopCopyDataInit>

0800223e <CopyDataInit>:
 800223e:	58d4      	ldr	r4, [r2, r3]
 8002240:	50c4      	str	r4, [r0, r3]
 8002242:	3304      	adds	r3, #4

08002244 <LoopCopyDataInit>:
 8002244:	18c4      	adds	r4, r0, r3
 8002246:	428c      	cmp	r4, r1
 8002248:	d3f9      	bcc.n	800223e <CopyDataInit>
 800224a:	4a0a      	ldr	r2, [pc, #40]	; (8002274 <LoopForever+0x12>)
 800224c:	4c0a      	ldr	r4, [pc, #40]	; (8002278 <LoopForever+0x16>)
 800224e:	2300      	movs	r3, #0
 8002250:	e001      	b.n	8002256 <LoopFillZerobss>

08002252 <FillZerobss>:
 8002252:	6013      	str	r3, [r2, #0]
 8002254:	3204      	adds	r2, #4

08002256 <LoopFillZerobss>:
 8002256:	42a2      	cmp	r2, r4
 8002258:	d3fb      	bcc.n	8002252 <FillZerobss>
 800225a:	f002 f829 	bl	80042b0 <__libc_init_array>
 800225e:	f7ff fde3 	bl	8001e28 <main>

08002262 <LoopForever>:
 8002262:	e7fe      	b.n	8002262 <LoopForever>
 8002264:	20002000 	.word	0x20002000
 8002268:	20000000 	.word	0x20000000
 800226c:	20000200 	.word	0x20000200
 8002270:	08005310 	.word	0x08005310
 8002274:	20000200 	.word	0x20000200
 8002278:	200003d0 	.word	0x200003d0

0800227c <ADC1_COMP_IRQHandler>:
 800227c:	e7fe      	b.n	800227c <ADC1_COMP_IRQHandler>
	...

08002280 <HAL_InitTick>:
 8002280:	b570      	push	{r4, r5, r6, lr}
 8002282:	0005      	movs	r5, r0
 8002284:	20fa      	movs	r0, #250	; 0xfa
 8002286:	4b0d      	ldr	r3, [pc, #52]	; (80022bc <HAL_InitTick+0x3c>)
 8002288:	0080      	lsls	r0, r0, #2
 800228a:	7819      	ldrb	r1, [r3, #0]
 800228c:	f7fd ff58 	bl	8000140 <__udivsi3>
 8002290:	4b0b      	ldr	r3, [pc, #44]	; (80022c0 <HAL_InitTick+0x40>)
 8002292:	0001      	movs	r1, r0
 8002294:	6818      	ldr	r0, [r3, #0]
 8002296:	f7fd ff53 	bl	8000140 <__udivsi3>
 800229a:	f000 f877 	bl	800238c <HAL_SYSTICK_Config>
 800229e:	0004      	movs	r4, r0
 80022a0:	2001      	movs	r0, #1
 80022a2:	2c00      	cmp	r4, #0
 80022a4:	d109      	bne.n	80022ba <HAL_InitTick+0x3a>
 80022a6:	2d03      	cmp	r5, #3
 80022a8:	d807      	bhi.n	80022ba <HAL_InitTick+0x3a>
 80022aa:	3802      	subs	r0, #2
 80022ac:	0022      	movs	r2, r4
 80022ae:	0029      	movs	r1, r5
 80022b0:	f000 f842 	bl	8002338 <HAL_NVIC_SetPriority>
 80022b4:	0020      	movs	r0, r4
 80022b6:	4b03      	ldr	r3, [pc, #12]	; (80022c4 <HAL_InitTick+0x44>)
 80022b8:	601d      	str	r5, [r3, #0]
 80022ba:	bd70      	pop	{r4, r5, r6, pc}
 80022bc:	20000194 	.word	0x20000194
 80022c0:	20000190 	.word	0x20000190
 80022c4:	20000198 	.word	0x20000198

080022c8 <HAL_Init>:
 80022c8:	2340      	movs	r3, #64	; 0x40
 80022ca:	4a08      	ldr	r2, [pc, #32]	; (80022ec <HAL_Init+0x24>)
 80022cc:	b510      	push	{r4, lr}
 80022ce:	6811      	ldr	r1, [r2, #0]
 80022d0:	2003      	movs	r0, #3
 80022d2:	430b      	orrs	r3, r1
 80022d4:	6013      	str	r3, [r2, #0]
 80022d6:	f7ff ffd3 	bl	8002280 <HAL_InitTick>
 80022da:	1e04      	subs	r4, r0, #0
 80022dc:	d103      	bne.n	80022e6 <HAL_Init+0x1e>
 80022de:	f7ff fedd 	bl	800209c <HAL_MspInit>
 80022e2:	0020      	movs	r0, r4
 80022e4:	bd10      	pop	{r4, pc}
 80022e6:	2401      	movs	r4, #1
 80022e8:	e7fb      	b.n	80022e2 <HAL_Init+0x1a>
 80022ea:	46c0      	nop			; (mov r8, r8)
 80022ec:	40022000 	.word	0x40022000

080022f0 <HAL_IncTick>:
 80022f0:	4a03      	ldr	r2, [pc, #12]	; (8002300 <HAL_IncTick+0x10>)
 80022f2:	4b04      	ldr	r3, [pc, #16]	; (8002304 <HAL_IncTick+0x14>)
 80022f4:	6811      	ldr	r1, [r2, #0]
 80022f6:	781b      	ldrb	r3, [r3, #0]
 80022f8:	185b      	adds	r3, r3, r1
 80022fa:	6013      	str	r3, [r2, #0]
 80022fc:	4770      	bx	lr
 80022fe:	46c0      	nop			; (mov r8, r8)
 8002300:	200003bc 	.word	0x200003bc
 8002304:	20000194 	.word	0x20000194

08002308 <HAL_GetTick>:
 8002308:	4b01      	ldr	r3, [pc, #4]	; (8002310 <HAL_GetTick+0x8>)
 800230a:	6818      	ldr	r0, [r3, #0]
 800230c:	4770      	bx	lr
 800230e:	46c0      	nop			; (mov r8, r8)
 8002310:	200003bc 	.word	0x200003bc

08002314 <HAL_Delay>:
 8002314:	b570      	push	{r4, r5, r6, lr}
 8002316:	0004      	movs	r4, r0
 8002318:	f7ff fff6 	bl	8002308 <HAL_GetTick>
 800231c:	0005      	movs	r5, r0
 800231e:	1c63      	adds	r3, r4, #1
 8002320:	d002      	beq.n	8002328 <HAL_Delay+0x14>
 8002322:	4b04      	ldr	r3, [pc, #16]	; (8002334 <HAL_Delay+0x20>)
 8002324:	781b      	ldrb	r3, [r3, #0]
 8002326:	18e4      	adds	r4, r4, r3
 8002328:	f7ff ffee 	bl	8002308 <HAL_GetTick>
 800232c:	1b40      	subs	r0, r0, r5
 800232e:	42a0      	cmp	r0, r4
 8002330:	d3fa      	bcc.n	8002328 <HAL_Delay+0x14>
 8002332:	bd70      	pop	{r4, r5, r6, pc}
 8002334:	20000194 	.word	0x20000194

08002338 <HAL_NVIC_SetPriority>:
 8002338:	b530      	push	{r4, r5, lr}
 800233a:	25ff      	movs	r5, #255	; 0xff
 800233c:	2403      	movs	r4, #3
 800233e:	002a      	movs	r2, r5
 8002340:	4004      	ands	r4, r0
 8002342:	00e4      	lsls	r4, r4, #3
 8002344:	40a2      	lsls	r2, r4
 8002346:	0189      	lsls	r1, r1, #6
 8002348:	4029      	ands	r1, r5
 800234a:	43d2      	mvns	r2, r2
 800234c:	40a1      	lsls	r1, r4
 800234e:	b2c3      	uxtb	r3, r0
 8002350:	2800      	cmp	r0, #0
 8002352:	db0a      	blt.n	800236a <HAL_NVIC_SetPriority+0x32>
 8002354:	24c0      	movs	r4, #192	; 0xc0
 8002356:	4b0b      	ldr	r3, [pc, #44]	; (8002384 <HAL_NVIC_SetPriority+0x4c>)
 8002358:	0880      	lsrs	r0, r0, #2
 800235a:	0080      	lsls	r0, r0, #2
 800235c:	18c0      	adds	r0, r0, r3
 800235e:	00a4      	lsls	r4, r4, #2
 8002360:	5903      	ldr	r3, [r0, r4]
 8002362:	401a      	ands	r2, r3
 8002364:	4311      	orrs	r1, r2
 8002366:	5101      	str	r1, [r0, r4]
 8002368:	bd30      	pop	{r4, r5, pc}
 800236a:	200f      	movs	r0, #15
 800236c:	4003      	ands	r3, r0
 800236e:	3b08      	subs	r3, #8
 8002370:	4805      	ldr	r0, [pc, #20]	; (8002388 <HAL_NVIC_SetPriority+0x50>)
 8002372:	089b      	lsrs	r3, r3, #2
 8002374:	009b      	lsls	r3, r3, #2
 8002376:	181b      	adds	r3, r3, r0
 8002378:	69d8      	ldr	r0, [r3, #28]
 800237a:	4002      	ands	r2, r0
 800237c:	4311      	orrs	r1, r2
 800237e:	61d9      	str	r1, [r3, #28]
 8002380:	e7f2      	b.n	8002368 <HAL_NVIC_SetPriority+0x30>
 8002382:	46c0      	nop			; (mov r8, r8)
 8002384:	e000e100 	.word	0xe000e100
 8002388:	e000ed00 	.word	0xe000ed00

0800238c <HAL_SYSTICK_Config>:
 800238c:	2280      	movs	r2, #128	; 0x80
 800238e:	1e43      	subs	r3, r0, #1
 8002390:	0452      	lsls	r2, r2, #17
 8002392:	2001      	movs	r0, #1
 8002394:	4293      	cmp	r3, r2
 8002396:	d20d      	bcs.n	80023b4 <HAL_SYSTICK_Config+0x28>
 8002398:	21c0      	movs	r1, #192	; 0xc0
 800239a:	4a07      	ldr	r2, [pc, #28]	; (80023b8 <HAL_SYSTICK_Config+0x2c>)
 800239c:	4807      	ldr	r0, [pc, #28]	; (80023bc <HAL_SYSTICK_Config+0x30>)
 800239e:	6053      	str	r3, [r2, #4]
 80023a0:	6a03      	ldr	r3, [r0, #32]
 80023a2:	0609      	lsls	r1, r1, #24
 80023a4:	021b      	lsls	r3, r3, #8
 80023a6:	0a1b      	lsrs	r3, r3, #8
 80023a8:	430b      	orrs	r3, r1
 80023aa:	6203      	str	r3, [r0, #32]
 80023ac:	2000      	movs	r0, #0
 80023ae:	2307      	movs	r3, #7
 80023b0:	6090      	str	r0, [r2, #8]
 80023b2:	6013      	str	r3, [r2, #0]
 80023b4:	4770      	bx	lr
 80023b6:	46c0      	nop			; (mov r8, r8)
 80023b8:	e000e010 	.word	0xe000e010
 80023bc:	e000ed00 	.word	0xe000ed00

080023c0 <HAL_GPIO_Init>:
 80023c0:	4a58      	ldr	r2, [pc, #352]	; (8002524 <HAL_GPIO_Init+0x164>)
 80023c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023c4:	1882      	adds	r2, r0, r2
 80023c6:	1e54      	subs	r4, r2, #1
 80023c8:	41a2      	sbcs	r2, r4
 80023ca:	2300      	movs	r3, #0
 80023cc:	b087      	sub	sp, #28
 80023ce:	3205      	adds	r2, #5
 80023d0:	9103      	str	r1, [sp, #12]
 80023d2:	9205      	str	r2, [sp, #20]
 80023d4:	9a03      	ldr	r2, [sp, #12]
 80023d6:	6812      	ldr	r2, [r2, #0]
 80023d8:	0014      	movs	r4, r2
 80023da:	40dc      	lsrs	r4, r3
 80023dc:	d101      	bne.n	80023e2 <HAL_GPIO_Init+0x22>
 80023de:	b007      	add	sp, #28
 80023e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023e2:	2101      	movs	r1, #1
 80023e4:	000d      	movs	r5, r1
 80023e6:	0014      	movs	r4, r2
 80023e8:	409d      	lsls	r5, r3
 80023ea:	402c      	ands	r4, r5
 80023ec:	468c      	mov	ip, r1
 80023ee:	9402      	str	r4, [sp, #8]
 80023f0:	422a      	tst	r2, r5
 80023f2:	d100      	bne.n	80023f6 <HAL_GPIO_Init+0x36>
 80023f4:	e094      	b.n	8002520 <HAL_GPIO_Init+0x160>
 80023f6:	2403      	movs	r4, #3
 80023f8:	9a03      	ldr	r2, [sp, #12]
 80023fa:	005e      	lsls	r6, r3, #1
 80023fc:	6852      	ldr	r2, [r2, #4]
 80023fe:	9201      	str	r2, [sp, #4]
 8002400:	4022      	ands	r2, r4
 8002402:	40b4      	lsls	r4, r6
 8002404:	43e1      	mvns	r1, r4
 8002406:	1e54      	subs	r4, r2, #1
 8002408:	9104      	str	r1, [sp, #16]
 800240a:	4564      	cmp	r4, ip
 800240c:	d82a      	bhi.n	8002464 <HAL_GPIO_Init+0xa4>
 800240e:	6887      	ldr	r7, [r0, #8]
 8002410:	400f      	ands	r7, r1
 8002412:	9903      	ldr	r1, [sp, #12]
 8002414:	68cc      	ldr	r4, [r1, #12]
 8002416:	9901      	ldr	r1, [sp, #4]
 8002418:	40b4      	lsls	r4, r6
 800241a:	433c      	orrs	r4, r7
 800241c:	6084      	str	r4, [r0, #8]
 800241e:	6844      	ldr	r4, [r0, #4]
 8002420:	43ac      	bics	r4, r5
 8002422:	0025      	movs	r5, r4
 8002424:	090c      	lsrs	r4, r1, #4
 8002426:	4661      	mov	r1, ip
 8002428:	400c      	ands	r4, r1
 800242a:	409c      	lsls	r4, r3
 800242c:	432c      	orrs	r4, r5
 800242e:	6044      	str	r4, [r0, #4]
 8002430:	68c5      	ldr	r5, [r0, #12]
 8002432:	9904      	ldr	r1, [sp, #16]
 8002434:	400d      	ands	r5, r1
 8002436:	9903      	ldr	r1, [sp, #12]
 8002438:	688c      	ldr	r4, [r1, #8]
 800243a:	40b4      	lsls	r4, r6
 800243c:	432c      	orrs	r4, r5
 800243e:	60c4      	str	r4, [r0, #12]
 8002440:	2a02      	cmp	r2, #2
 8002442:	d111      	bne.n	8002468 <HAL_GPIO_Init+0xa8>
 8002444:	2507      	movs	r5, #7
 8002446:	210f      	movs	r1, #15
 8002448:	401d      	ands	r5, r3
 800244a:	00ad      	lsls	r5, r5, #2
 800244c:	40a9      	lsls	r1, r5
 800244e:	08dc      	lsrs	r4, r3, #3
 8002450:	00a4      	lsls	r4, r4, #2
 8002452:	1904      	adds	r4, r0, r4
 8002454:	6a27      	ldr	r7, [r4, #32]
 8002456:	438f      	bics	r7, r1
 8002458:	9903      	ldr	r1, [sp, #12]
 800245a:	6909      	ldr	r1, [r1, #16]
 800245c:	40a9      	lsls	r1, r5
 800245e:	430f      	orrs	r7, r1
 8002460:	6227      	str	r7, [r4, #32]
 8002462:	e001      	b.n	8002468 <HAL_GPIO_Init+0xa8>
 8002464:	2a03      	cmp	r2, #3
 8002466:	d1e3      	bne.n	8002430 <HAL_GPIO_Init+0x70>
 8002468:	40b2      	lsls	r2, r6
 800246a:	6804      	ldr	r4, [r0, #0]
 800246c:	9904      	ldr	r1, [sp, #16]
 800246e:	4021      	ands	r1, r4
 8002470:	430a      	orrs	r2, r1
 8002472:	6002      	str	r2, [r0, #0]
 8002474:	22c0      	movs	r2, #192	; 0xc0
 8002476:	9901      	ldr	r1, [sp, #4]
 8002478:	0292      	lsls	r2, r2, #10
 800247a:	4211      	tst	r1, r2
 800247c:	d050      	beq.n	8002520 <HAL_GPIO_Init+0x160>
 800247e:	2701      	movs	r7, #1
 8002480:	4c29      	ldr	r4, [pc, #164]	; (8002528 <HAL_GPIO_Init+0x168>)
 8002482:	2603      	movs	r6, #3
 8002484:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8002486:	001d      	movs	r5, r3
 8002488:	433a      	orrs	r2, r7
 800248a:	6362      	str	r2, [r4, #52]	; 0x34
 800248c:	4a27      	ldr	r2, [pc, #156]	; (800252c <HAL_GPIO_Init+0x16c>)
 800248e:	089c      	lsrs	r4, r3, #2
 8002490:	00a4      	lsls	r4, r4, #2
 8002492:	18a4      	adds	r4, r4, r2
 8002494:	68a2      	ldr	r2, [r4, #8]
 8002496:	4035      	ands	r5, r6
 8002498:	4694      	mov	ip, r2
 800249a:	220f      	movs	r2, #15
 800249c:	00ad      	lsls	r5, r5, #2
 800249e:	40aa      	lsls	r2, r5
 80024a0:	4661      	mov	r1, ip
 80024a2:	4391      	bics	r1, r2
 80024a4:	22a0      	movs	r2, #160	; 0xa0
 80024a6:	05d2      	lsls	r2, r2, #23
 80024a8:	4694      	mov	ip, r2
 80024aa:	2200      	movs	r2, #0
 80024ac:	4560      	cmp	r0, ip
 80024ae:	d00d      	beq.n	80024cc <HAL_GPIO_Init+0x10c>
 80024b0:	4a1f      	ldr	r2, [pc, #124]	; (8002530 <HAL_GPIO_Init+0x170>)
 80024b2:	4694      	mov	ip, r2
 80024b4:	003a      	movs	r2, r7
 80024b6:	4560      	cmp	r0, ip
 80024b8:	d008      	beq.n	80024cc <HAL_GPIO_Init+0x10c>
 80024ba:	4f1e      	ldr	r7, [pc, #120]	; (8002534 <HAL_GPIO_Init+0x174>)
 80024bc:	1892      	adds	r2, r2, r2
 80024be:	42b8      	cmp	r0, r7
 80024c0:	d004      	beq.n	80024cc <HAL_GPIO_Init+0x10c>
 80024c2:	4f1d      	ldr	r7, [pc, #116]	; (8002538 <HAL_GPIO_Init+0x178>)
 80024c4:	0032      	movs	r2, r6
 80024c6:	42b8      	cmp	r0, r7
 80024c8:	d000      	beq.n	80024cc <HAL_GPIO_Init+0x10c>
 80024ca:	9a05      	ldr	r2, [sp, #20]
 80024cc:	40aa      	lsls	r2, r5
 80024ce:	430a      	orrs	r2, r1
 80024d0:	9902      	ldr	r1, [sp, #8]
 80024d2:	60a2      	str	r2, [r4, #8]
 80024d4:	000d      	movs	r5, r1
 80024d6:	4a19      	ldr	r2, [pc, #100]	; (800253c <HAL_GPIO_Init+0x17c>)
 80024d8:	43cc      	mvns	r4, r1
 80024da:	6896      	ldr	r6, [r2, #8]
 80024dc:	9901      	ldr	r1, [sp, #4]
 80024de:	4335      	orrs	r5, r6
 80024e0:	02c9      	lsls	r1, r1, #11
 80024e2:	d401      	bmi.n	80024e8 <HAL_GPIO_Init+0x128>
 80024e4:	0035      	movs	r5, r6
 80024e6:	4025      	ands	r5, r4
 80024e8:	6095      	str	r5, [r2, #8]
 80024ea:	68d6      	ldr	r6, [r2, #12]
 80024ec:	9d02      	ldr	r5, [sp, #8]
 80024ee:	9901      	ldr	r1, [sp, #4]
 80024f0:	4335      	orrs	r5, r6
 80024f2:	0289      	lsls	r1, r1, #10
 80024f4:	d401      	bmi.n	80024fa <HAL_GPIO_Init+0x13a>
 80024f6:	0035      	movs	r5, r6
 80024f8:	4025      	ands	r5, r4
 80024fa:	60d5      	str	r5, [r2, #12]
 80024fc:	6856      	ldr	r6, [r2, #4]
 80024fe:	9d02      	ldr	r5, [sp, #8]
 8002500:	9901      	ldr	r1, [sp, #4]
 8002502:	4335      	orrs	r5, r6
 8002504:	0389      	lsls	r1, r1, #14
 8002506:	d401      	bmi.n	800250c <HAL_GPIO_Init+0x14c>
 8002508:	0035      	movs	r5, r6
 800250a:	4025      	ands	r5, r4
 800250c:	6055      	str	r5, [r2, #4]
 800250e:	6815      	ldr	r5, [r2, #0]
 8002510:	9e02      	ldr	r6, [sp, #8]
 8002512:	9901      	ldr	r1, [sp, #4]
 8002514:	432e      	orrs	r6, r5
 8002516:	03c9      	lsls	r1, r1, #15
 8002518:	d401      	bmi.n	800251e <HAL_GPIO_Init+0x15e>
 800251a:	4025      	ands	r5, r4
 800251c:	002e      	movs	r6, r5
 800251e:	6016      	str	r6, [r2, #0]
 8002520:	3301      	adds	r3, #1
 8002522:	e757      	b.n	80023d4 <HAL_GPIO_Init+0x14>
 8002524:	afffe400 	.word	0xafffe400
 8002528:	40021000 	.word	0x40021000
 800252c:	40010000 	.word	0x40010000
 8002530:	50000400 	.word	0x50000400
 8002534:	50000800 	.word	0x50000800
 8002538:	50000c00 	.word	0x50000c00
 800253c:	40010400 	.word	0x40010400

08002540 <HAL_GPIO_WritePin>:
 8002540:	2a00      	cmp	r2, #0
 8002542:	d001      	beq.n	8002548 <HAL_GPIO_WritePin+0x8>
 8002544:	6181      	str	r1, [r0, #24]
 8002546:	4770      	bx	lr
 8002548:	6281      	str	r1, [r0, #40]	; 0x28
 800254a:	e7fc      	b.n	8002546 <HAL_GPIO_WritePin+0x6>

0800254c <I2C_Flush_TXDR>:
 800254c:	6803      	ldr	r3, [r0, #0]
 800254e:	699a      	ldr	r2, [r3, #24]
 8002550:	0792      	lsls	r2, r2, #30
 8002552:	d501      	bpl.n	8002558 <I2C_Flush_TXDR+0xc>
 8002554:	2200      	movs	r2, #0
 8002556:	629a      	str	r2, [r3, #40]	; 0x28
 8002558:	2201      	movs	r2, #1
 800255a:	6999      	ldr	r1, [r3, #24]
 800255c:	4211      	tst	r1, r2
 800255e:	d102      	bne.n	8002566 <I2C_Flush_TXDR+0x1a>
 8002560:	6999      	ldr	r1, [r3, #24]
 8002562:	430a      	orrs	r2, r1
 8002564:	619a      	str	r2, [r3, #24]
 8002566:	4770      	bx	lr

08002568 <I2C_TransferConfig>:
 8002568:	b530      	push	{r4, r5, lr}
 800256a:	9c03      	ldr	r4, [sp, #12]
 800256c:	6800      	ldr	r0, [r0, #0]
 800256e:	4323      	orrs	r3, r4
 8002570:	0412      	lsls	r2, r2, #16
 8002572:	0589      	lsls	r1, r1, #22
 8002574:	431a      	orrs	r2, r3
 8002576:	0d89      	lsrs	r1, r1, #22
 8002578:	4b05      	ldr	r3, [pc, #20]	; (8002590 <I2C_TransferConfig+0x28>)
 800257a:	6845      	ldr	r5, [r0, #4]
 800257c:	430a      	orrs	r2, r1
 800257e:	0d64      	lsrs	r4, r4, #21
 8002580:	431c      	orrs	r4, r3
 8002582:	0052      	lsls	r2, r2, #1
 8002584:	43a5      	bics	r5, r4
 8002586:	0852      	lsrs	r2, r2, #1
 8002588:	432a      	orrs	r2, r5
 800258a:	6042      	str	r2, [r0, #4]
 800258c:	bd30      	pop	{r4, r5, pc}
 800258e:	46c0      	nop			; (mov r8, r8)
 8002590:	03ff63ff 	.word	0x03ff63ff

08002594 <I2C_IsErrorOccurred>:
 8002594:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002596:	0015      	movs	r5, r2
 8002598:	6802      	ldr	r2, [r0, #0]
 800259a:	000e      	movs	r6, r1
 800259c:	6991      	ldr	r1, [r2, #24]
 800259e:	2310      	movs	r3, #16
 80025a0:	000f      	movs	r7, r1
 80025a2:	0004      	movs	r4, r0
 80025a4:	401f      	ands	r7, r3
 80025a6:	2000      	movs	r0, #0
 80025a8:	4219      	tst	r1, r3
 80025aa:	d00e      	beq.n	80025ca <I2C_IsErrorOccurred+0x36>
 80025ac:	2720      	movs	r7, #32
 80025ae:	61d3      	str	r3, [r2, #28]
 80025b0:	9000      	str	r0, [sp, #0]
 80025b2:	9001      	str	r0, [sp, #4]
 80025b4:	6823      	ldr	r3, [r4, #0]
 80025b6:	699a      	ldr	r2, [r3, #24]
 80025b8:	423a      	tst	r2, r7
 80025ba:	d164      	bne.n	8002686 <I2C_IsErrorOccurred+0xf2>
 80025bc:	9a01      	ldr	r2, [sp, #4]
 80025be:	2a00      	cmp	r2, #0
 80025c0:	d032      	beq.n	8002628 <I2C_IsErrorOccurred+0x94>
 80025c2:	2704      	movs	r7, #4
 80025c4:	2001      	movs	r0, #1
 80025c6:	9b00      	ldr	r3, [sp, #0]
 80025c8:	431f      	orrs	r7, r3
 80025ca:	2180      	movs	r1, #128	; 0x80
 80025cc:	6823      	ldr	r3, [r4, #0]
 80025ce:	0049      	lsls	r1, r1, #1
 80025d0:	699a      	ldr	r2, [r3, #24]
 80025d2:	420a      	tst	r2, r1
 80025d4:	d002      	beq.n	80025dc <I2C_IsErrorOccurred+0x48>
 80025d6:	2001      	movs	r0, #1
 80025d8:	61d9      	str	r1, [r3, #28]
 80025da:	4307      	orrs	r7, r0
 80025dc:	2180      	movs	r1, #128	; 0x80
 80025de:	00c9      	lsls	r1, r1, #3
 80025e0:	420a      	tst	r2, r1
 80025e2:	d003      	beq.n	80025ec <I2C_IsErrorOccurred+0x58>
 80025e4:	2008      	movs	r0, #8
 80025e6:	61d9      	str	r1, [r3, #28]
 80025e8:	4307      	orrs	r7, r0
 80025ea:	3807      	subs	r0, #7
 80025ec:	2180      	movs	r1, #128	; 0x80
 80025ee:	0089      	lsls	r1, r1, #2
 80025f0:	420a      	tst	r2, r1
 80025f2:	d04d      	beq.n	8002690 <I2C_IsErrorOccurred+0xfc>
 80025f4:	2202      	movs	r2, #2
 80025f6:	61d9      	str	r1, [r3, #28]
 80025f8:	4317      	orrs	r7, r2
 80025fa:	0020      	movs	r0, r4
 80025fc:	f7ff ffa6 	bl	800254c <I2C_Flush_TXDR>
 8002600:	6822      	ldr	r2, [r4, #0]
 8002602:	4925      	ldr	r1, [pc, #148]	; (8002698 <I2C_IsErrorOccurred+0x104>)
 8002604:	6853      	ldr	r3, [r2, #4]
 8002606:	400b      	ands	r3, r1
 8002608:	6053      	str	r3, [r2, #4]
 800260a:	0023      	movs	r3, r4
 800260c:	2220      	movs	r2, #32
 800260e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002610:	3341      	adds	r3, #65	; 0x41
 8002612:	4307      	orrs	r7, r0
 8002614:	6467      	str	r7, [r4, #68]	; 0x44
 8002616:	701a      	strb	r2, [r3, #0]
 8002618:	0022      	movs	r2, r4
 800261a:	2300      	movs	r3, #0
 800261c:	3242      	adds	r2, #66	; 0x42
 800261e:	3440      	adds	r4, #64	; 0x40
 8002620:	7013      	strb	r3, [r2, #0]
 8002622:	2001      	movs	r0, #1
 8002624:	7023      	strb	r3, [r4, #0]
 8002626:	e035      	b.n	8002694 <I2C_IsErrorOccurred+0x100>
 8002628:	1c72      	adds	r2, r6, #1
 800262a:	d0c4      	beq.n	80025b6 <I2C_IsErrorOccurred+0x22>
 800262c:	f7ff fe6c 	bl	8002308 <HAL_GetTick>
 8002630:	1b40      	subs	r0, r0, r5
 8002632:	42b0      	cmp	r0, r6
 8002634:	d801      	bhi.n	800263a <I2C_IsErrorOccurred+0xa6>
 8002636:	2e00      	cmp	r6, #0
 8002638:	d1bc      	bne.n	80025b4 <I2C_IsErrorOccurred+0x20>
 800263a:	0022      	movs	r2, r4
 800263c:	6823      	ldr	r3, [r4, #0]
 800263e:	3242      	adds	r2, #66	; 0x42
 8002640:	6858      	ldr	r0, [r3, #4]
 8002642:	7811      	ldrb	r1, [r2, #0]
 8002644:	b2ca      	uxtb	r2, r1
 8002646:	2180      	movs	r1, #128	; 0x80
 8002648:	4694      	mov	ip, r2
 800264a:	699a      	ldr	r2, [r3, #24]
 800264c:	0209      	lsls	r1, r1, #8
 800264e:	420a      	tst	r2, r1
 8002650:	d00c      	beq.n	800266c <I2C_IsErrorOccurred+0xd8>
 8002652:	2280      	movs	r2, #128	; 0x80
 8002654:	01d2      	lsls	r2, r2, #7
 8002656:	4210      	tst	r0, r2
 8002658:	d108      	bne.n	800266c <I2C_IsErrorOccurred+0xd8>
 800265a:	4661      	mov	r1, ip
 800265c:	2920      	cmp	r1, #32
 800265e:	d005      	beq.n	800266c <I2C_IsErrorOccurred+0xd8>
 8002660:	6859      	ldr	r1, [r3, #4]
 8002662:	430a      	orrs	r2, r1
 8002664:	605a      	str	r2, [r3, #4]
 8002666:	f7ff fe4f 	bl	8002308 <HAL_GetTick>
 800266a:	0005      	movs	r5, r0
 800266c:	6823      	ldr	r3, [r4, #0]
 800266e:	699b      	ldr	r3, [r3, #24]
 8002670:	423b      	tst	r3, r7
 8002672:	d19f      	bne.n	80025b4 <I2C_IsErrorOccurred+0x20>
 8002674:	f7ff fe48 	bl	8002308 <HAL_GetTick>
 8002678:	1b40      	subs	r0, r0, r5
 800267a:	2819      	cmp	r0, #25
 800267c:	d9f6      	bls.n	800266c <I2C_IsErrorOccurred+0xd8>
 800267e:	2301      	movs	r3, #1
 8002680:	9700      	str	r7, [sp, #0]
 8002682:	9301      	str	r3, [sp, #4]
 8002684:	e796      	b.n	80025b4 <I2C_IsErrorOccurred+0x20>
 8002686:	9a01      	ldr	r2, [sp, #4]
 8002688:	2a00      	cmp	r2, #0
 800268a:	d19a      	bne.n	80025c2 <I2C_IsErrorOccurred+0x2e>
 800268c:	61df      	str	r7, [r3, #28]
 800268e:	e798      	b.n	80025c2 <I2C_IsErrorOccurred+0x2e>
 8002690:	2800      	cmp	r0, #0
 8002692:	d1b2      	bne.n	80025fa <I2C_IsErrorOccurred+0x66>
 8002694:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8002696:	46c0      	nop			; (mov r8, r8)
 8002698:	fe00e800 	.word	0xfe00e800

0800269c <I2C_WaitOnTXISFlagUntilTimeout>:
 800269c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800269e:	0004      	movs	r4, r0
 80026a0:	000d      	movs	r5, r1
 80026a2:	0016      	movs	r6, r2
 80026a4:	2702      	movs	r7, #2
 80026a6:	6823      	ldr	r3, [r4, #0]
 80026a8:	699b      	ldr	r3, [r3, #24]
 80026aa:	423b      	tst	r3, r7
 80026ac:	d001      	beq.n	80026b2 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
 80026ae:	2000      	movs	r0, #0
 80026b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80026b2:	0032      	movs	r2, r6
 80026b4:	0029      	movs	r1, r5
 80026b6:	0020      	movs	r0, r4
 80026b8:	f7ff ff6c 	bl	8002594 <I2C_IsErrorOccurred>
 80026bc:	2800      	cmp	r0, #0
 80026be:	d118      	bne.n	80026f2 <I2C_WaitOnTXISFlagUntilTimeout+0x56>
 80026c0:	1c6b      	adds	r3, r5, #1
 80026c2:	d0f0      	beq.n	80026a6 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 80026c4:	f7ff fe20 	bl	8002308 <HAL_GetTick>
 80026c8:	1b80      	subs	r0, r0, r6
 80026ca:	42a8      	cmp	r0, r5
 80026cc:	d801      	bhi.n	80026d2 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 80026ce:	2d00      	cmp	r5, #0
 80026d0:	d1e9      	bne.n	80026a6 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 80026d2:	6823      	ldr	r3, [r4, #0]
 80026d4:	699b      	ldr	r3, [r3, #24]
 80026d6:	001a      	movs	r2, r3
 80026d8:	403a      	ands	r2, r7
 80026da:	423b      	tst	r3, r7
 80026dc:	d1e3      	bne.n	80026a6 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 80026de:	2120      	movs	r1, #32
 80026e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80026e2:	430b      	orrs	r3, r1
 80026e4:	6463      	str	r3, [r4, #68]	; 0x44
 80026e6:	0023      	movs	r3, r4
 80026e8:	3440      	adds	r4, #64	; 0x40
 80026ea:	3341      	adds	r3, #65	; 0x41
 80026ec:	7019      	strb	r1, [r3, #0]
 80026ee:	705a      	strb	r2, [r3, #1]
 80026f0:	7022      	strb	r2, [r4, #0]
 80026f2:	2001      	movs	r0, #1
 80026f4:	e7dc      	b.n	80026b0 <I2C_WaitOnTXISFlagUntilTimeout+0x14>

080026f6 <I2C_WaitOnFlagUntilTimeout>:
 80026f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026f8:	0004      	movs	r4, r0
 80026fa:	000d      	movs	r5, r1
 80026fc:	0017      	movs	r7, r2
 80026fe:	001e      	movs	r6, r3
 8002700:	6822      	ldr	r2, [r4, #0]
 8002702:	6993      	ldr	r3, [r2, #24]
 8002704:	402b      	ands	r3, r5
 8002706:	1b5b      	subs	r3, r3, r5
 8002708:	4259      	negs	r1, r3
 800270a:	414b      	adcs	r3, r1
 800270c:	42bb      	cmp	r3, r7
 800270e:	d001      	beq.n	8002714 <I2C_WaitOnFlagUntilTimeout+0x1e>
 8002710:	2000      	movs	r0, #0
 8002712:	e01f      	b.n	8002754 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8002714:	1c73      	adds	r3, r6, #1
 8002716:	d0f4      	beq.n	8002702 <I2C_WaitOnFlagUntilTimeout+0xc>
 8002718:	f7ff fdf6 	bl	8002308 <HAL_GetTick>
 800271c:	9b06      	ldr	r3, [sp, #24]
 800271e:	1ac0      	subs	r0, r0, r3
 8002720:	42b0      	cmp	r0, r6
 8002722:	d801      	bhi.n	8002728 <I2C_WaitOnFlagUntilTimeout+0x32>
 8002724:	2e00      	cmp	r6, #0
 8002726:	d1eb      	bne.n	8002700 <I2C_WaitOnFlagUntilTimeout+0xa>
 8002728:	6823      	ldr	r3, [r4, #0]
 800272a:	699b      	ldr	r3, [r3, #24]
 800272c:	402b      	ands	r3, r5
 800272e:	1b5b      	subs	r3, r3, r5
 8002730:	425a      	negs	r2, r3
 8002732:	4153      	adcs	r3, r2
 8002734:	42bb      	cmp	r3, r7
 8002736:	d1e3      	bne.n	8002700 <I2C_WaitOnFlagUntilTimeout+0xa>
 8002738:	2220      	movs	r2, #32
 800273a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800273c:	2001      	movs	r0, #1
 800273e:	4313      	orrs	r3, r2
 8002740:	6463      	str	r3, [r4, #68]	; 0x44
 8002742:	0023      	movs	r3, r4
 8002744:	3341      	adds	r3, #65	; 0x41
 8002746:	701a      	strb	r2, [r3, #0]
 8002748:	0022      	movs	r2, r4
 800274a:	2300      	movs	r3, #0
 800274c:	3242      	adds	r2, #66	; 0x42
 800274e:	3440      	adds	r4, #64	; 0x40
 8002750:	7013      	strb	r3, [r2, #0]
 8002752:	7023      	strb	r3, [r4, #0]
 8002754:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08002756 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8002756:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002758:	0004      	movs	r4, r0
 800275a:	000e      	movs	r6, r1
 800275c:	0017      	movs	r7, r2
 800275e:	2520      	movs	r5, #32
 8002760:	6823      	ldr	r3, [r4, #0]
 8002762:	699b      	ldr	r3, [r3, #24]
 8002764:	422b      	tst	r3, r5
 8002766:	d001      	beq.n	800276c <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
 8002768:	2000      	movs	r0, #0
 800276a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800276c:	003a      	movs	r2, r7
 800276e:	0031      	movs	r1, r6
 8002770:	0020      	movs	r0, r4
 8002772:	f7ff ff0f 	bl	8002594 <I2C_IsErrorOccurred>
 8002776:	2800      	cmp	r0, #0
 8002778:	d115      	bne.n	80027a6 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
 800277a:	f7ff fdc5 	bl	8002308 <HAL_GetTick>
 800277e:	1bc0      	subs	r0, r0, r7
 8002780:	42b0      	cmp	r0, r6
 8002782:	d801      	bhi.n	8002788 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 8002784:	2e00      	cmp	r6, #0
 8002786:	d1eb      	bne.n	8002760 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
 8002788:	6823      	ldr	r3, [r4, #0]
 800278a:	699b      	ldr	r3, [r3, #24]
 800278c:	001a      	movs	r2, r3
 800278e:	402a      	ands	r2, r5
 8002790:	422b      	tst	r3, r5
 8002792:	d1e5      	bne.n	8002760 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
 8002794:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8002796:	432b      	orrs	r3, r5
 8002798:	6463      	str	r3, [r4, #68]	; 0x44
 800279a:	0023      	movs	r3, r4
 800279c:	3440      	adds	r4, #64	; 0x40
 800279e:	3341      	adds	r3, #65	; 0x41
 80027a0:	701d      	strb	r5, [r3, #0]
 80027a2:	705a      	strb	r2, [r3, #1]
 80027a4:	7022      	strb	r2, [r4, #0]
 80027a6:	2001      	movs	r0, #1
 80027a8:	e7df      	b.n	800276a <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
	...

080027ac <I2C_WaitOnRXNEFlagUntilTimeout>:
 80027ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027ae:	0004      	movs	r4, r0
 80027b0:	000d      	movs	r5, r1
 80027b2:	0017      	movs	r7, r2
 80027b4:	2604      	movs	r6, #4
 80027b6:	6823      	ldr	r3, [r4, #0]
 80027b8:	699b      	ldr	r3, [r3, #24]
 80027ba:	4233      	tst	r3, r6
 80027bc:	d111      	bne.n	80027e2 <I2C_WaitOnRXNEFlagUntilTimeout+0x36>
 80027be:	003a      	movs	r2, r7
 80027c0:	0029      	movs	r1, r5
 80027c2:	0020      	movs	r0, r4
 80027c4:	f7ff fee6 	bl	8002594 <I2C_IsErrorOccurred>
 80027c8:	2800      	cmp	r0, #0
 80027ca:	d124      	bne.n	8002816 <I2C_WaitOnRXNEFlagUntilTimeout+0x6a>
 80027cc:	2120      	movs	r1, #32
 80027ce:	6823      	ldr	r3, [r4, #0]
 80027d0:	699a      	ldr	r2, [r3, #24]
 80027d2:	420a      	tst	r2, r1
 80027d4:	d023      	beq.n	800281e <I2C_WaitOnRXNEFlagUntilTimeout+0x72>
 80027d6:	699a      	ldr	r2, [r3, #24]
 80027d8:	4232      	tst	r2, r6
 80027da:	d004      	beq.n	80027e6 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
 80027dc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80027de:	2a00      	cmp	r2, #0
 80027e0:	d001      	beq.n	80027e6 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
 80027e2:	2000      	movs	r0, #0
 80027e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80027e6:	6999      	ldr	r1, [r3, #24]
 80027e8:	2210      	movs	r2, #16
 80027ea:	0008      	movs	r0, r1
 80027ec:	4010      	ands	r0, r2
 80027ee:	4211      	tst	r1, r2
 80027f0:	d013      	beq.n	800281a <I2C_WaitOnRXNEFlagUntilTimeout+0x6e>
 80027f2:	61da      	str	r2, [r3, #28]
 80027f4:	3a0c      	subs	r2, #12
 80027f6:	6462      	str	r2, [r4, #68]	; 0x44
 80027f8:	2120      	movs	r1, #32
 80027fa:	61d9      	str	r1, [r3, #28]
 80027fc:	685a      	ldr	r2, [r3, #4]
 80027fe:	4813      	ldr	r0, [pc, #76]	; (800284c <I2C_WaitOnRXNEFlagUntilTimeout+0xa0>)
 8002800:	4002      	ands	r2, r0
 8002802:	605a      	str	r2, [r3, #4]
 8002804:	0023      	movs	r3, r4
 8002806:	0022      	movs	r2, r4
 8002808:	3341      	adds	r3, #65	; 0x41
 800280a:	7019      	strb	r1, [r3, #0]
 800280c:	2300      	movs	r3, #0
 800280e:	3242      	adds	r2, #66	; 0x42
 8002810:	3440      	adds	r4, #64	; 0x40
 8002812:	7013      	strb	r3, [r2, #0]
 8002814:	7023      	strb	r3, [r4, #0]
 8002816:	2001      	movs	r0, #1
 8002818:	e7e4      	b.n	80027e4 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
 800281a:	6460      	str	r0, [r4, #68]	; 0x44
 800281c:	e7ec      	b.n	80027f8 <I2C_WaitOnRXNEFlagUntilTimeout+0x4c>
 800281e:	f7ff fd73 	bl	8002308 <HAL_GetTick>
 8002822:	1bc0      	subs	r0, r0, r7
 8002824:	42a8      	cmp	r0, r5
 8002826:	d801      	bhi.n	800282c <I2C_WaitOnRXNEFlagUntilTimeout+0x80>
 8002828:	2d00      	cmp	r5, #0
 800282a:	d1c4      	bne.n	80027b6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa>
 800282c:	6823      	ldr	r3, [r4, #0]
 800282e:	699b      	ldr	r3, [r3, #24]
 8002830:	0019      	movs	r1, r3
 8002832:	4031      	ands	r1, r6
 8002834:	4233      	tst	r3, r6
 8002836:	d1be      	bne.n	80027b6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa>
 8002838:	2220      	movs	r2, #32
 800283a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800283c:	4313      	orrs	r3, r2
 800283e:	6463      	str	r3, [r4, #68]	; 0x44
 8002840:	0023      	movs	r3, r4
 8002842:	3440      	adds	r4, #64	; 0x40
 8002844:	3341      	adds	r3, #65	; 0x41
 8002846:	701a      	strb	r2, [r3, #0]
 8002848:	7021      	strb	r1, [r4, #0]
 800284a:	e7e4      	b.n	8002816 <I2C_WaitOnRXNEFlagUntilTimeout+0x6a>
 800284c:	fe00e800 	.word	0xfe00e800

08002850 <HAL_I2C_Init>:
 8002850:	b570      	push	{r4, r5, r6, lr}
 8002852:	0004      	movs	r4, r0
 8002854:	2001      	movs	r0, #1
 8002856:	2c00      	cmp	r4, #0
 8002858:	d03f      	beq.n	80028da <HAL_I2C_Init+0x8a>
 800285a:	0025      	movs	r5, r4
 800285c:	3541      	adds	r5, #65	; 0x41
 800285e:	782b      	ldrb	r3, [r5, #0]
 8002860:	b2da      	uxtb	r2, r3
 8002862:	2b00      	cmp	r3, #0
 8002864:	d105      	bne.n	8002872 <HAL_I2C_Init+0x22>
 8002866:	0023      	movs	r3, r4
 8002868:	3340      	adds	r3, #64	; 0x40
 800286a:	0020      	movs	r0, r4
 800286c:	701a      	strb	r2, [r3, #0]
 800286e:	f7ff fc23 	bl	80020b8 <HAL_I2C_MspInit>
 8002872:	2324      	movs	r3, #36	; 0x24
 8002874:	2101      	movs	r1, #1
 8002876:	702b      	strb	r3, [r5, #0]
 8002878:	6823      	ldr	r3, [r4, #0]
 800287a:	481d      	ldr	r0, [pc, #116]	; (80028f0 <HAL_I2C_Init+0xa0>)
 800287c:	681a      	ldr	r2, [r3, #0]
 800287e:	68a6      	ldr	r6, [r4, #8]
 8002880:	438a      	bics	r2, r1
 8002882:	601a      	str	r2, [r3, #0]
 8002884:	6861      	ldr	r1, [r4, #4]
 8002886:	4a1b      	ldr	r2, [pc, #108]	; (80028f4 <HAL_I2C_Init+0xa4>)
 8002888:	400a      	ands	r2, r1
 800288a:	611a      	str	r2, [r3, #16]
 800288c:	689a      	ldr	r2, [r3, #8]
 800288e:	4002      	ands	r2, r0
 8002890:	609a      	str	r2, [r3, #8]
 8002892:	68e2      	ldr	r2, [r4, #12]
 8002894:	2a01      	cmp	r2, #1
 8002896:	d121      	bne.n	80028dc <HAL_I2C_Init+0x8c>
 8002898:	2180      	movs	r1, #128	; 0x80
 800289a:	0209      	lsls	r1, r1, #8
 800289c:	4331      	orrs	r1, r6
 800289e:	6099      	str	r1, [r3, #8]
 80028a0:	685a      	ldr	r2, [r3, #4]
 80028a2:	4915      	ldr	r1, [pc, #84]	; (80028f8 <HAL_I2C_Init+0xa8>)
 80028a4:	4311      	orrs	r1, r2
 80028a6:	6059      	str	r1, [r3, #4]
 80028a8:	68da      	ldr	r2, [r3, #12]
 80028aa:	6961      	ldr	r1, [r4, #20]
 80028ac:	4002      	ands	r2, r0
 80028ae:	60da      	str	r2, [r3, #12]
 80028b0:	6922      	ldr	r2, [r4, #16]
 80028b2:	2000      	movs	r0, #0
 80028b4:	430a      	orrs	r2, r1
 80028b6:	69a1      	ldr	r1, [r4, #24]
 80028b8:	0209      	lsls	r1, r1, #8
 80028ba:	430a      	orrs	r2, r1
 80028bc:	60da      	str	r2, [r3, #12]
 80028be:	6a21      	ldr	r1, [r4, #32]
 80028c0:	69e2      	ldr	r2, [r4, #28]
 80028c2:	430a      	orrs	r2, r1
 80028c4:	601a      	str	r2, [r3, #0]
 80028c6:	2201      	movs	r2, #1
 80028c8:	6819      	ldr	r1, [r3, #0]
 80028ca:	430a      	orrs	r2, r1
 80028cc:	601a      	str	r2, [r3, #0]
 80028ce:	2320      	movs	r3, #32
 80028d0:	6460      	str	r0, [r4, #68]	; 0x44
 80028d2:	702b      	strb	r3, [r5, #0]
 80028d4:	6320      	str	r0, [r4, #48]	; 0x30
 80028d6:	3442      	adds	r4, #66	; 0x42
 80028d8:	7020      	strb	r0, [r4, #0]
 80028da:	bd70      	pop	{r4, r5, r6, pc}
 80028dc:	2184      	movs	r1, #132	; 0x84
 80028de:	0209      	lsls	r1, r1, #8
 80028e0:	4331      	orrs	r1, r6
 80028e2:	6099      	str	r1, [r3, #8]
 80028e4:	2a02      	cmp	r2, #2
 80028e6:	d1db      	bne.n	80028a0 <HAL_I2C_Init+0x50>
 80028e8:	2280      	movs	r2, #128	; 0x80
 80028ea:	0112      	lsls	r2, r2, #4
 80028ec:	605a      	str	r2, [r3, #4]
 80028ee:	e7d7      	b.n	80028a0 <HAL_I2C_Init+0x50>
 80028f0:	ffff7fff 	.word	0xffff7fff
 80028f4:	f0ffffff 	.word	0xf0ffffff
 80028f8:	02008000 	.word	0x02008000

080028fc <HAL_I2C_Master_Transmit>:
 80028fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80028fe:	b087      	sub	sp, #28
 8002900:	9305      	str	r3, [sp, #20]
 8002902:	0003      	movs	r3, r0
 8002904:	3341      	adds	r3, #65	; 0x41
 8002906:	9204      	str	r2, [sp, #16]
 8002908:	9303      	str	r3, [sp, #12]
 800290a:	781b      	ldrb	r3, [r3, #0]
 800290c:	0004      	movs	r4, r0
 800290e:	000f      	movs	r7, r1
 8002910:	2002      	movs	r0, #2
 8002912:	2b20      	cmp	r3, #32
 8002914:	d114      	bne.n	8002940 <HAL_I2C_Master_Transmit+0x44>
 8002916:	0023      	movs	r3, r4
 8002918:	3340      	adds	r3, #64	; 0x40
 800291a:	781a      	ldrb	r2, [r3, #0]
 800291c:	2a01      	cmp	r2, #1
 800291e:	d00f      	beq.n	8002940 <HAL_I2C_Master_Transmit+0x44>
 8002920:	2601      	movs	r6, #1
 8002922:	701e      	strb	r6, [r3, #0]
 8002924:	f7ff fcf0 	bl	8002308 <HAL_GetTick>
 8002928:	2180      	movs	r1, #128	; 0x80
 800292a:	0005      	movs	r5, r0
 800292c:	9000      	str	r0, [sp, #0]
 800292e:	2319      	movs	r3, #25
 8002930:	0032      	movs	r2, r6
 8002932:	0020      	movs	r0, r4
 8002934:	0209      	lsls	r1, r1, #8
 8002936:	f7ff fede 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 800293a:	2800      	cmp	r0, #0
 800293c:	d002      	beq.n	8002944 <HAL_I2C_Master_Transmit+0x48>
 800293e:	2001      	movs	r0, #1
 8002940:	b007      	add	sp, #28
 8002942:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002944:	2321      	movs	r3, #33	; 0x21
 8002946:	0026      	movs	r6, r4
 8002948:	9a03      	ldr	r2, [sp, #12]
 800294a:	3642      	adds	r6, #66	; 0x42
 800294c:	7013      	strb	r3, [r2, #0]
 800294e:	3b11      	subs	r3, #17
 8002950:	7033      	strb	r3, [r6, #0]
 8002952:	9b04      	ldr	r3, [sp, #16]
 8002954:	6460      	str	r0, [r4, #68]	; 0x44
 8002956:	6263      	str	r3, [r4, #36]	; 0x24
 8002958:	9b05      	ldr	r3, [sp, #20]
 800295a:	6360      	str	r0, [r4, #52]	; 0x34
 800295c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800295e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002960:	4b2d      	ldr	r3, [pc, #180]	; (8002a18 <HAL_I2C_Master_Transmit+0x11c>)
 8002962:	2aff      	cmp	r2, #255	; 0xff
 8002964:	d920      	bls.n	80029a8 <HAL_I2C_Master_Transmit+0xac>
 8002966:	22ff      	movs	r2, #255	; 0xff
 8002968:	8522      	strh	r2, [r4, #40]	; 0x28
 800296a:	9300      	str	r3, [sp, #0]
 800296c:	2380      	movs	r3, #128	; 0x80
 800296e:	045b      	lsls	r3, r3, #17
 8002970:	0039      	movs	r1, r7
 8002972:	0020      	movs	r0, r4
 8002974:	f7ff fdf8 	bl	8002568 <I2C_TransferConfig>
 8002978:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800297a:	002a      	movs	r2, r5
 800297c:	0020      	movs	r0, r4
 800297e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002980:	2b00      	cmp	r3, #0
 8002982:	d119      	bne.n	80029b8 <HAL_I2C_Master_Transmit+0xbc>
 8002984:	f7ff fee7 	bl	8002756 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002988:	2800      	cmp	r0, #0
 800298a:	d1d8      	bne.n	800293e <HAL_I2C_Master_Transmit+0x42>
 800298c:	2120      	movs	r1, #32
 800298e:	6823      	ldr	r3, [r4, #0]
 8002990:	4d22      	ldr	r5, [pc, #136]	; (8002a1c <HAL_I2C_Master_Transmit+0x120>)
 8002992:	61d9      	str	r1, [r3, #28]
 8002994:	685a      	ldr	r2, [r3, #4]
 8002996:	402a      	ands	r2, r5
 8002998:	605a      	str	r2, [r3, #4]
 800299a:	0023      	movs	r3, r4
 800299c:	3440      	adds	r4, #64	; 0x40
 800299e:	3341      	adds	r3, #65	; 0x41
 80029a0:	7019      	strb	r1, [r3, #0]
 80029a2:	7030      	strb	r0, [r6, #0]
 80029a4:	7020      	strb	r0, [r4, #0]
 80029a6:	e7cb      	b.n	8002940 <HAL_I2C_Master_Transmit+0x44>
 80029a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80029aa:	b292      	uxth	r2, r2
 80029ac:	8522      	strh	r2, [r4, #40]	; 0x28
 80029ae:	b2d2      	uxtb	r2, r2
 80029b0:	9300      	str	r3, [sp, #0]
 80029b2:	2380      	movs	r3, #128	; 0x80
 80029b4:	049b      	lsls	r3, r3, #18
 80029b6:	e7db      	b.n	8002970 <HAL_I2C_Master_Transmit+0x74>
 80029b8:	f7ff fe70 	bl	800269c <I2C_WaitOnTXISFlagUntilTimeout>
 80029bc:	2800      	cmp	r0, #0
 80029be:	d1be      	bne.n	800293e <HAL_I2C_Master_Transmit+0x42>
 80029c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80029c2:	6822      	ldr	r2, [r4, #0]
 80029c4:	7819      	ldrb	r1, [r3, #0]
 80029c6:	3301      	adds	r3, #1
 80029c8:	6291      	str	r1, [r2, #40]	; 0x28
 80029ca:	6263      	str	r3, [r4, #36]	; 0x24
 80029cc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80029ce:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80029d0:	3b01      	subs	r3, #1
 80029d2:	b29b      	uxth	r3, r3
 80029d4:	8563      	strh	r3, [r4, #42]	; 0x2a
 80029d6:	3a01      	subs	r2, #1
 80029d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80029da:	b292      	uxth	r2, r2
 80029dc:	8522      	strh	r2, [r4, #40]	; 0x28
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d0ca      	beq.n	8002978 <HAL_I2C_Master_Transmit+0x7c>
 80029e2:	2a00      	cmp	r2, #0
 80029e4:	d1c8      	bne.n	8002978 <HAL_I2C_Master_Transmit+0x7c>
 80029e6:	2180      	movs	r1, #128	; 0x80
 80029e8:	0020      	movs	r0, r4
 80029ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80029ec:	9500      	str	r5, [sp, #0]
 80029ee:	f7ff fe82 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 80029f2:	2800      	cmp	r0, #0
 80029f4:	d1a3      	bne.n	800293e <HAL_I2C_Master_Transmit+0x42>
 80029f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80029f8:	2bff      	cmp	r3, #255	; 0xff
 80029fa:	d906      	bls.n	8002a0a <HAL_I2C_Master_Transmit+0x10e>
 80029fc:	23ff      	movs	r3, #255	; 0xff
 80029fe:	8523      	strh	r3, [r4, #40]	; 0x28
 8002a00:	2380      	movs	r3, #128	; 0x80
 8002a02:	22ff      	movs	r2, #255	; 0xff
 8002a04:	9000      	str	r0, [sp, #0]
 8002a06:	045b      	lsls	r3, r3, #17
 8002a08:	e7b2      	b.n	8002970 <HAL_I2C_Master_Transmit+0x74>
 8002a0a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002a0c:	b292      	uxth	r2, r2
 8002a0e:	8522      	strh	r2, [r4, #40]	; 0x28
 8002a10:	b2d2      	uxtb	r2, r2
 8002a12:	9000      	str	r0, [sp, #0]
 8002a14:	e7cd      	b.n	80029b2 <HAL_I2C_Master_Transmit+0xb6>
 8002a16:	46c0      	nop			; (mov r8, r8)
 8002a18:	80002000 	.word	0x80002000
 8002a1c:	fe00e800 	.word	0xfe00e800

08002a20 <HAL_I2C_Master_Receive>:
 8002a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a22:	b087      	sub	sp, #28
 8002a24:	9305      	str	r3, [sp, #20]
 8002a26:	0003      	movs	r3, r0
 8002a28:	3341      	adds	r3, #65	; 0x41
 8002a2a:	9204      	str	r2, [sp, #16]
 8002a2c:	9303      	str	r3, [sp, #12]
 8002a2e:	781b      	ldrb	r3, [r3, #0]
 8002a30:	0004      	movs	r4, r0
 8002a32:	000f      	movs	r7, r1
 8002a34:	2002      	movs	r0, #2
 8002a36:	2b20      	cmp	r3, #32
 8002a38:	d114      	bne.n	8002a64 <HAL_I2C_Master_Receive+0x44>
 8002a3a:	0023      	movs	r3, r4
 8002a3c:	3340      	adds	r3, #64	; 0x40
 8002a3e:	781a      	ldrb	r2, [r3, #0]
 8002a40:	2a01      	cmp	r2, #1
 8002a42:	d00f      	beq.n	8002a64 <HAL_I2C_Master_Receive+0x44>
 8002a44:	2601      	movs	r6, #1
 8002a46:	701e      	strb	r6, [r3, #0]
 8002a48:	f7ff fc5e 	bl	8002308 <HAL_GetTick>
 8002a4c:	2180      	movs	r1, #128	; 0x80
 8002a4e:	0005      	movs	r5, r0
 8002a50:	9000      	str	r0, [sp, #0]
 8002a52:	2319      	movs	r3, #25
 8002a54:	0032      	movs	r2, r6
 8002a56:	0020      	movs	r0, r4
 8002a58:	0209      	lsls	r1, r1, #8
 8002a5a:	f7ff fe4c 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002a5e:	2800      	cmp	r0, #0
 8002a60:	d002      	beq.n	8002a68 <HAL_I2C_Master_Receive+0x48>
 8002a62:	2001      	movs	r0, #1
 8002a64:	b007      	add	sp, #28
 8002a66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a68:	2322      	movs	r3, #34	; 0x22
 8002a6a:	0026      	movs	r6, r4
 8002a6c:	9a03      	ldr	r2, [sp, #12]
 8002a6e:	3642      	adds	r6, #66	; 0x42
 8002a70:	7013      	strb	r3, [r2, #0]
 8002a72:	3b12      	subs	r3, #18
 8002a74:	7033      	strb	r3, [r6, #0]
 8002a76:	9b04      	ldr	r3, [sp, #16]
 8002a78:	6460      	str	r0, [r4, #68]	; 0x44
 8002a7a:	6263      	str	r3, [r4, #36]	; 0x24
 8002a7c:	9b05      	ldr	r3, [sp, #20]
 8002a7e:	6360      	str	r0, [r4, #52]	; 0x34
 8002a80:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002a82:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002a84:	4b2d      	ldr	r3, [pc, #180]	; (8002b3c <HAL_I2C_Master_Receive+0x11c>)
 8002a86:	2aff      	cmp	r2, #255	; 0xff
 8002a88:	d920      	bls.n	8002acc <HAL_I2C_Master_Receive+0xac>
 8002a8a:	22ff      	movs	r2, #255	; 0xff
 8002a8c:	8522      	strh	r2, [r4, #40]	; 0x28
 8002a8e:	9300      	str	r3, [sp, #0]
 8002a90:	2380      	movs	r3, #128	; 0x80
 8002a92:	045b      	lsls	r3, r3, #17
 8002a94:	0039      	movs	r1, r7
 8002a96:	0020      	movs	r0, r4
 8002a98:	f7ff fd66 	bl	8002568 <I2C_TransferConfig>
 8002a9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002a9e:	002a      	movs	r2, r5
 8002aa0:	0020      	movs	r0, r4
 8002aa2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	d119      	bne.n	8002adc <HAL_I2C_Master_Receive+0xbc>
 8002aa8:	f7ff fe55 	bl	8002756 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002aac:	2800      	cmp	r0, #0
 8002aae:	d1d8      	bne.n	8002a62 <HAL_I2C_Master_Receive+0x42>
 8002ab0:	2120      	movs	r1, #32
 8002ab2:	6823      	ldr	r3, [r4, #0]
 8002ab4:	4d22      	ldr	r5, [pc, #136]	; (8002b40 <HAL_I2C_Master_Receive+0x120>)
 8002ab6:	61d9      	str	r1, [r3, #28]
 8002ab8:	685a      	ldr	r2, [r3, #4]
 8002aba:	402a      	ands	r2, r5
 8002abc:	605a      	str	r2, [r3, #4]
 8002abe:	0023      	movs	r3, r4
 8002ac0:	3440      	adds	r4, #64	; 0x40
 8002ac2:	3341      	adds	r3, #65	; 0x41
 8002ac4:	7019      	strb	r1, [r3, #0]
 8002ac6:	7030      	strb	r0, [r6, #0]
 8002ac8:	7020      	strb	r0, [r4, #0]
 8002aca:	e7cb      	b.n	8002a64 <HAL_I2C_Master_Receive+0x44>
 8002acc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002ace:	b292      	uxth	r2, r2
 8002ad0:	8522      	strh	r2, [r4, #40]	; 0x28
 8002ad2:	b2d2      	uxtb	r2, r2
 8002ad4:	9300      	str	r3, [sp, #0]
 8002ad6:	2380      	movs	r3, #128	; 0x80
 8002ad8:	049b      	lsls	r3, r3, #18
 8002ada:	e7db      	b.n	8002a94 <HAL_I2C_Master_Receive+0x74>
 8002adc:	f7ff fe66 	bl	80027ac <I2C_WaitOnRXNEFlagUntilTimeout>
 8002ae0:	2800      	cmp	r0, #0
 8002ae2:	d1be      	bne.n	8002a62 <HAL_I2C_Master_Receive+0x42>
 8002ae4:	6823      	ldr	r3, [r4, #0]
 8002ae6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002ae8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002aea:	7013      	strb	r3, [r2, #0]
 8002aec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002aee:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002af0:	3301      	adds	r3, #1
 8002af2:	6263      	str	r3, [r4, #36]	; 0x24
 8002af4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002af6:	3a01      	subs	r2, #1
 8002af8:	3b01      	subs	r3, #1
 8002afa:	b29b      	uxth	r3, r3
 8002afc:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002afe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002b00:	b292      	uxth	r2, r2
 8002b02:	8522      	strh	r2, [r4, #40]	; 0x28
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d0c9      	beq.n	8002a9c <HAL_I2C_Master_Receive+0x7c>
 8002b08:	2a00      	cmp	r2, #0
 8002b0a:	d1c7      	bne.n	8002a9c <HAL_I2C_Master_Receive+0x7c>
 8002b0c:	2180      	movs	r1, #128	; 0x80
 8002b0e:	0020      	movs	r0, r4
 8002b10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b12:	9500      	str	r5, [sp, #0]
 8002b14:	f7ff fdef 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002b18:	2800      	cmp	r0, #0
 8002b1a:	d1a2      	bne.n	8002a62 <HAL_I2C_Master_Receive+0x42>
 8002b1c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002b1e:	2bff      	cmp	r3, #255	; 0xff
 8002b20:	d906      	bls.n	8002b30 <HAL_I2C_Master_Receive+0x110>
 8002b22:	23ff      	movs	r3, #255	; 0xff
 8002b24:	8523      	strh	r3, [r4, #40]	; 0x28
 8002b26:	2380      	movs	r3, #128	; 0x80
 8002b28:	22ff      	movs	r2, #255	; 0xff
 8002b2a:	9000      	str	r0, [sp, #0]
 8002b2c:	045b      	lsls	r3, r3, #17
 8002b2e:	e7b1      	b.n	8002a94 <HAL_I2C_Master_Receive+0x74>
 8002b30:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002b32:	b292      	uxth	r2, r2
 8002b34:	8522      	strh	r2, [r4, #40]	; 0x28
 8002b36:	b2d2      	uxtb	r2, r2
 8002b38:	9000      	str	r0, [sp, #0]
 8002b3a:	e7cc      	b.n	8002ad6 <HAL_I2C_Master_Receive+0xb6>
 8002b3c:	80002400 	.word	0x80002400
 8002b40:	fe00e800 	.word	0xfe00e800

08002b44 <HAL_I2C_Mem_Write>:
 8002b44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b46:	b089      	sub	sp, #36	; 0x24
 8002b48:	9304      	str	r3, [sp, #16]
 8002b4a:	ab0e      	add	r3, sp, #56	; 0x38
 8002b4c:	9203      	str	r2, [sp, #12]
 8002b4e:	cb04      	ldmia	r3!, {r2}
 8002b50:	0004      	movs	r4, r0
 8002b52:	881b      	ldrh	r3, [r3, #0]
 8002b54:	9205      	str	r2, [sp, #20]
 8002b56:	9306      	str	r3, [sp, #24]
 8002b58:	0003      	movs	r3, r0
 8002b5a:	3341      	adds	r3, #65	; 0x41
 8002b5c:	9307      	str	r3, [sp, #28]
 8002b5e:	781b      	ldrb	r3, [r3, #0]
 8002b60:	000f      	movs	r7, r1
 8002b62:	2002      	movs	r0, #2
 8002b64:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8002b66:	2b20      	cmp	r3, #32
 8002b68:	d108      	bne.n	8002b7c <HAL_I2C_Mem_Write+0x38>
 8002b6a:	2a00      	cmp	r2, #0
 8002b6c:	d002      	beq.n	8002b74 <HAL_I2C_Mem_Write+0x30>
 8002b6e:	9b06      	ldr	r3, [sp, #24]
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d105      	bne.n	8002b80 <HAL_I2C_Mem_Write+0x3c>
 8002b74:	2380      	movs	r3, #128	; 0x80
 8002b76:	009b      	lsls	r3, r3, #2
 8002b78:	6463      	str	r3, [r4, #68]	; 0x44
 8002b7a:	2001      	movs	r0, #1
 8002b7c:	b009      	add	sp, #36	; 0x24
 8002b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b80:	0023      	movs	r3, r4
 8002b82:	3340      	adds	r3, #64	; 0x40
 8002b84:	781a      	ldrb	r2, [r3, #0]
 8002b86:	2002      	movs	r0, #2
 8002b88:	2a01      	cmp	r2, #1
 8002b8a:	d0f7      	beq.n	8002b7c <HAL_I2C_Mem_Write+0x38>
 8002b8c:	2201      	movs	r2, #1
 8002b8e:	701a      	strb	r2, [r3, #0]
 8002b90:	f7ff fbba 	bl	8002308 <HAL_GetTick>
 8002b94:	2180      	movs	r1, #128	; 0x80
 8002b96:	0005      	movs	r5, r0
 8002b98:	9000      	str	r0, [sp, #0]
 8002b9a:	2319      	movs	r3, #25
 8002b9c:	2201      	movs	r2, #1
 8002b9e:	0020      	movs	r0, r4
 8002ba0:	0209      	lsls	r1, r1, #8
 8002ba2:	f7ff fda8 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002ba6:	2800      	cmp	r0, #0
 8002ba8:	d1e7      	bne.n	8002b7a <HAL_I2C_Mem_Write+0x36>
 8002baa:	2321      	movs	r3, #33	; 0x21
 8002bac:	9a07      	ldr	r2, [sp, #28]
 8002bae:	0039      	movs	r1, r7
 8002bb0:	7013      	strb	r3, [r2, #0]
 8002bb2:	0023      	movs	r3, r4
 8002bb4:	3342      	adds	r3, #66	; 0x42
 8002bb6:	9307      	str	r3, [sp, #28]
 8002bb8:	2340      	movs	r3, #64	; 0x40
 8002bba:	9a07      	ldr	r2, [sp, #28]
 8002bbc:	7013      	strb	r3, [r2, #0]
 8002bbe:	9b05      	ldr	r3, [sp, #20]
 8002bc0:	6460      	str	r0, [r4, #68]	; 0x44
 8002bc2:	6263      	str	r3, [r4, #36]	; 0x24
 8002bc4:	9b06      	ldr	r3, [sp, #24]
 8002bc6:	6360      	str	r0, [r4, #52]	; 0x34
 8002bc8:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002bca:	466b      	mov	r3, sp
 8002bcc:	7c1a      	ldrb	r2, [r3, #16]
 8002bce:	4b4a      	ldr	r3, [pc, #296]	; (8002cf8 <HAL_I2C_Mem_Write+0x1b4>)
 8002bd0:	0020      	movs	r0, r4
 8002bd2:	9300      	str	r3, [sp, #0]
 8002bd4:	2380      	movs	r3, #128	; 0x80
 8002bd6:	045b      	lsls	r3, r3, #17
 8002bd8:	f7ff fcc6 	bl	8002568 <I2C_TransferConfig>
 8002bdc:	002a      	movs	r2, r5
 8002bde:	0031      	movs	r1, r6
 8002be0:	0020      	movs	r0, r4
 8002be2:	f7ff fd5b 	bl	800269c <I2C_WaitOnTXISFlagUntilTimeout>
 8002be6:	2800      	cmp	r0, #0
 8002be8:	d126      	bne.n	8002c38 <HAL_I2C_Mem_Write+0xf4>
 8002bea:	9a04      	ldr	r2, [sp, #16]
 8002bec:	6823      	ldr	r3, [r4, #0]
 8002bee:	2a01      	cmp	r2, #1
 8002bf0:	d116      	bne.n	8002c20 <HAL_I2C_Mem_Write+0xdc>
 8002bf2:	466a      	mov	r2, sp
 8002bf4:	7b12      	ldrb	r2, [r2, #12]
 8002bf6:	2180      	movs	r1, #128	; 0x80
 8002bf8:	629a      	str	r2, [r3, #40]	; 0x28
 8002bfa:	0020      	movs	r0, r4
 8002bfc:	0033      	movs	r3, r6
 8002bfe:	2200      	movs	r2, #0
 8002c00:	9500      	str	r5, [sp, #0]
 8002c02:	f7ff fd78 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002c06:	2800      	cmp	r0, #0
 8002c08:	d116      	bne.n	8002c38 <HAL_I2C_Mem_Write+0xf4>
 8002c0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c0c:	2bff      	cmp	r3, #255	; 0xff
 8002c0e:	d817      	bhi.n	8002c40 <HAL_I2C_Mem_Write+0xfc>
 8002c10:	2380      	movs	r3, #128	; 0x80
 8002c12:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002c14:	049b      	lsls	r3, r3, #18
 8002c16:	b292      	uxth	r2, r2
 8002c18:	8522      	strh	r2, [r4, #40]	; 0x28
 8002c1a:	b2d2      	uxtb	r2, r2
 8002c1c:	9000      	str	r0, [sp, #0]
 8002c1e:	e014      	b.n	8002c4a <HAL_I2C_Mem_Write+0x106>
 8002c20:	9a03      	ldr	r2, [sp, #12]
 8002c22:	0031      	movs	r1, r6
 8002c24:	0a12      	lsrs	r2, r2, #8
 8002c26:	629a      	str	r2, [r3, #40]	; 0x28
 8002c28:	0020      	movs	r0, r4
 8002c2a:	002a      	movs	r2, r5
 8002c2c:	f7ff fd36 	bl	800269c <I2C_WaitOnTXISFlagUntilTimeout>
 8002c30:	2800      	cmp	r0, #0
 8002c32:	d101      	bne.n	8002c38 <HAL_I2C_Mem_Write+0xf4>
 8002c34:	6823      	ldr	r3, [r4, #0]
 8002c36:	e7dc      	b.n	8002bf2 <HAL_I2C_Mem_Write+0xae>
 8002c38:	2300      	movs	r3, #0
 8002c3a:	3440      	adds	r4, #64	; 0x40
 8002c3c:	7023      	strb	r3, [r4, #0]
 8002c3e:	e79c      	b.n	8002b7a <HAL_I2C_Mem_Write+0x36>
 8002c40:	22ff      	movs	r2, #255	; 0xff
 8002c42:	2380      	movs	r3, #128	; 0x80
 8002c44:	8522      	strh	r2, [r4, #40]	; 0x28
 8002c46:	045b      	lsls	r3, r3, #17
 8002c48:	9000      	str	r0, [sp, #0]
 8002c4a:	0039      	movs	r1, r7
 8002c4c:	0020      	movs	r0, r4
 8002c4e:	f7ff fc8b 	bl	8002568 <I2C_TransferConfig>
 8002c52:	002a      	movs	r2, r5
 8002c54:	0031      	movs	r1, r6
 8002c56:	0020      	movs	r0, r4
 8002c58:	f7ff fd20 	bl	800269c <I2C_WaitOnTXISFlagUntilTimeout>
 8002c5c:	2800      	cmp	r0, #0
 8002c5e:	d000      	beq.n	8002c62 <HAL_I2C_Mem_Write+0x11e>
 8002c60:	e78b      	b.n	8002b7a <HAL_I2C_Mem_Write+0x36>
 8002c62:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002c64:	6822      	ldr	r2, [r4, #0]
 8002c66:	7819      	ldrb	r1, [r3, #0]
 8002c68:	3301      	adds	r3, #1
 8002c6a:	6291      	str	r1, [r2, #40]	; 0x28
 8002c6c:	6263      	str	r3, [r4, #36]	; 0x24
 8002c6e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c70:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002c72:	3b01      	subs	r3, #1
 8002c74:	b29b      	uxth	r3, r3
 8002c76:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002c78:	3a01      	subs	r2, #1
 8002c7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c7c:	b292      	uxth	r2, r2
 8002c7e:	8522      	strh	r2, [r4, #40]	; 0x28
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d017      	beq.n	8002cb4 <HAL_I2C_Mem_Write+0x170>
 8002c84:	2a00      	cmp	r2, #0
 8002c86:	d115      	bne.n	8002cb4 <HAL_I2C_Mem_Write+0x170>
 8002c88:	0033      	movs	r3, r6
 8002c8a:	2180      	movs	r1, #128	; 0x80
 8002c8c:	0020      	movs	r0, r4
 8002c8e:	9500      	str	r5, [sp, #0]
 8002c90:	f7ff fd31 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002c94:	2800      	cmp	r0, #0
 8002c96:	d000      	beq.n	8002c9a <HAL_I2C_Mem_Write+0x156>
 8002c98:	e76f      	b.n	8002b7a <HAL_I2C_Mem_Write+0x36>
 8002c9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c9c:	2bff      	cmp	r3, #255	; 0xff
 8002c9e:	d923      	bls.n	8002ce8 <HAL_I2C_Mem_Write+0x1a4>
 8002ca0:	23ff      	movs	r3, #255	; 0xff
 8002ca2:	8523      	strh	r3, [r4, #40]	; 0x28
 8002ca4:	2380      	movs	r3, #128	; 0x80
 8002ca6:	22ff      	movs	r2, #255	; 0xff
 8002ca8:	9000      	str	r0, [sp, #0]
 8002caa:	045b      	lsls	r3, r3, #17
 8002cac:	0039      	movs	r1, r7
 8002cae:	0020      	movs	r0, r4
 8002cb0:	f7ff fc5a 	bl	8002568 <I2C_TransferConfig>
 8002cb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d1cb      	bne.n	8002c52 <HAL_I2C_Mem_Write+0x10e>
 8002cba:	002a      	movs	r2, r5
 8002cbc:	0031      	movs	r1, r6
 8002cbe:	0020      	movs	r0, r4
 8002cc0:	f7ff fd49 	bl	8002756 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002cc4:	2800      	cmp	r0, #0
 8002cc6:	d000      	beq.n	8002cca <HAL_I2C_Mem_Write+0x186>
 8002cc8:	e757      	b.n	8002b7a <HAL_I2C_Mem_Write+0x36>
 8002cca:	2120      	movs	r1, #32
 8002ccc:	6823      	ldr	r3, [r4, #0]
 8002cce:	4d0b      	ldr	r5, [pc, #44]	; (8002cfc <HAL_I2C_Mem_Write+0x1b8>)
 8002cd0:	61d9      	str	r1, [r3, #28]
 8002cd2:	685a      	ldr	r2, [r3, #4]
 8002cd4:	402a      	ands	r2, r5
 8002cd6:	605a      	str	r2, [r3, #4]
 8002cd8:	0023      	movs	r3, r4
 8002cda:	3341      	adds	r3, #65	; 0x41
 8002cdc:	7019      	strb	r1, [r3, #0]
 8002cde:	9b07      	ldr	r3, [sp, #28]
 8002ce0:	3440      	adds	r4, #64	; 0x40
 8002ce2:	7018      	strb	r0, [r3, #0]
 8002ce4:	7020      	strb	r0, [r4, #0]
 8002ce6:	e749      	b.n	8002b7c <HAL_I2C_Mem_Write+0x38>
 8002ce8:	2380      	movs	r3, #128	; 0x80
 8002cea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002cec:	049b      	lsls	r3, r3, #18
 8002cee:	b292      	uxth	r2, r2
 8002cf0:	8522      	strh	r2, [r4, #40]	; 0x28
 8002cf2:	b2d2      	uxtb	r2, r2
 8002cf4:	9000      	str	r0, [sp, #0]
 8002cf6:	e7d9      	b.n	8002cac <HAL_I2C_Mem_Write+0x168>
 8002cf8:	80002000 	.word	0x80002000
 8002cfc:	fe00e800 	.word	0xfe00e800

08002d00 <HAL_I2C_Mem_Read>:
 8002d00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d02:	b089      	sub	sp, #36	; 0x24
 8002d04:	9304      	str	r3, [sp, #16]
 8002d06:	ab0e      	add	r3, sp, #56	; 0x38
 8002d08:	9203      	str	r2, [sp, #12]
 8002d0a:	cb04      	ldmia	r3!, {r2}
 8002d0c:	0004      	movs	r4, r0
 8002d0e:	881b      	ldrh	r3, [r3, #0]
 8002d10:	9205      	str	r2, [sp, #20]
 8002d12:	9306      	str	r3, [sp, #24]
 8002d14:	0003      	movs	r3, r0
 8002d16:	3341      	adds	r3, #65	; 0x41
 8002d18:	9307      	str	r3, [sp, #28]
 8002d1a:	781b      	ldrb	r3, [r3, #0]
 8002d1c:	000f      	movs	r7, r1
 8002d1e:	2002      	movs	r0, #2
 8002d20:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8002d22:	2b20      	cmp	r3, #32
 8002d24:	d108      	bne.n	8002d38 <HAL_I2C_Mem_Read+0x38>
 8002d26:	2a00      	cmp	r2, #0
 8002d28:	d002      	beq.n	8002d30 <HAL_I2C_Mem_Read+0x30>
 8002d2a:	9b06      	ldr	r3, [sp, #24]
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	d105      	bne.n	8002d3c <HAL_I2C_Mem_Read+0x3c>
 8002d30:	2380      	movs	r3, #128	; 0x80
 8002d32:	009b      	lsls	r3, r3, #2
 8002d34:	6463      	str	r3, [r4, #68]	; 0x44
 8002d36:	2001      	movs	r0, #1
 8002d38:	b009      	add	sp, #36	; 0x24
 8002d3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002d3c:	0023      	movs	r3, r4
 8002d3e:	3340      	adds	r3, #64	; 0x40
 8002d40:	781a      	ldrb	r2, [r3, #0]
 8002d42:	2002      	movs	r0, #2
 8002d44:	2a01      	cmp	r2, #1
 8002d46:	d0f7      	beq.n	8002d38 <HAL_I2C_Mem_Read+0x38>
 8002d48:	2201      	movs	r2, #1
 8002d4a:	701a      	strb	r2, [r3, #0]
 8002d4c:	f7ff fadc 	bl	8002308 <HAL_GetTick>
 8002d50:	2180      	movs	r1, #128	; 0x80
 8002d52:	2319      	movs	r3, #25
 8002d54:	9000      	str	r0, [sp, #0]
 8002d56:	0005      	movs	r5, r0
 8002d58:	2201      	movs	r2, #1
 8002d5a:	0020      	movs	r0, r4
 8002d5c:	0209      	lsls	r1, r1, #8
 8002d5e:	f7ff fcca 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002d62:	1e03      	subs	r3, r0, #0
 8002d64:	d1e7      	bne.n	8002d36 <HAL_I2C_Mem_Read+0x36>
 8002d66:	2222      	movs	r2, #34	; 0x22
 8002d68:	9907      	ldr	r1, [sp, #28]
 8002d6a:	700a      	strb	r2, [r1, #0]
 8002d6c:	0022      	movs	r2, r4
 8002d6e:	3242      	adds	r2, #66	; 0x42
 8002d70:	9207      	str	r2, [sp, #28]
 8002d72:	2240      	movs	r2, #64	; 0x40
 8002d74:	9907      	ldr	r1, [sp, #28]
 8002d76:	700a      	strb	r2, [r1, #0]
 8002d78:	9a05      	ldr	r2, [sp, #20]
 8002d7a:	6460      	str	r0, [r4, #68]	; 0x44
 8002d7c:	6262      	str	r2, [r4, #36]	; 0x24
 8002d7e:	9a06      	ldr	r2, [sp, #24]
 8002d80:	494d      	ldr	r1, [pc, #308]	; (8002eb8 <HAL_I2C_Mem_Read+0x1b8>)
 8002d82:	8562      	strh	r2, [r4, #42]	; 0x2a
 8002d84:	466a      	mov	r2, sp
 8002d86:	6360      	str	r0, [r4, #52]	; 0x34
 8002d88:	7c12      	ldrb	r2, [r2, #16]
 8002d8a:	0020      	movs	r0, r4
 8002d8c:	9100      	str	r1, [sp, #0]
 8002d8e:	0039      	movs	r1, r7
 8002d90:	f7ff fbea 	bl	8002568 <I2C_TransferConfig>
 8002d94:	002a      	movs	r2, r5
 8002d96:	0031      	movs	r1, r6
 8002d98:	0020      	movs	r0, r4
 8002d9a:	f7ff fc7f 	bl	800269c <I2C_WaitOnTXISFlagUntilTimeout>
 8002d9e:	2800      	cmp	r0, #0
 8002da0:	d127      	bne.n	8002df2 <HAL_I2C_Mem_Read+0xf2>
 8002da2:	9a04      	ldr	r2, [sp, #16]
 8002da4:	6823      	ldr	r3, [r4, #0]
 8002da6:	2a01      	cmp	r2, #1
 8002da8:	d117      	bne.n	8002dda <HAL_I2C_Mem_Read+0xda>
 8002daa:	466a      	mov	r2, sp
 8002dac:	7b12      	ldrb	r2, [r2, #12]
 8002dae:	2140      	movs	r1, #64	; 0x40
 8002db0:	629a      	str	r2, [r3, #40]	; 0x28
 8002db2:	0020      	movs	r0, r4
 8002db4:	0033      	movs	r3, r6
 8002db6:	2200      	movs	r2, #0
 8002db8:	9500      	str	r5, [sp, #0]
 8002dba:	f7ff fc9c 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002dbe:	2800      	cmp	r0, #0
 8002dc0:	d117      	bne.n	8002df2 <HAL_I2C_Mem_Read+0xf2>
 8002dc2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002dc4:	4b3d      	ldr	r3, [pc, #244]	; (8002ebc <HAL_I2C_Mem_Read+0x1bc>)
 8002dc6:	2aff      	cmp	r2, #255	; 0xff
 8002dc8:	d817      	bhi.n	8002dfa <HAL_I2C_Mem_Read+0xfa>
 8002dca:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002dcc:	b292      	uxth	r2, r2
 8002dce:	8522      	strh	r2, [r4, #40]	; 0x28
 8002dd0:	9300      	str	r3, [sp, #0]
 8002dd2:	2380      	movs	r3, #128	; 0x80
 8002dd4:	b2d2      	uxtb	r2, r2
 8002dd6:	049b      	lsls	r3, r3, #18
 8002dd8:	e014      	b.n	8002e04 <HAL_I2C_Mem_Read+0x104>
 8002dda:	9a03      	ldr	r2, [sp, #12]
 8002ddc:	0031      	movs	r1, r6
 8002dde:	0a12      	lsrs	r2, r2, #8
 8002de0:	629a      	str	r2, [r3, #40]	; 0x28
 8002de2:	0020      	movs	r0, r4
 8002de4:	002a      	movs	r2, r5
 8002de6:	f7ff fc59 	bl	800269c <I2C_WaitOnTXISFlagUntilTimeout>
 8002dea:	2800      	cmp	r0, #0
 8002dec:	d101      	bne.n	8002df2 <HAL_I2C_Mem_Read+0xf2>
 8002dee:	6823      	ldr	r3, [r4, #0]
 8002df0:	e7db      	b.n	8002daa <HAL_I2C_Mem_Read+0xaa>
 8002df2:	2300      	movs	r3, #0
 8002df4:	3440      	adds	r4, #64	; 0x40
 8002df6:	7023      	strb	r3, [r4, #0]
 8002df8:	e79d      	b.n	8002d36 <HAL_I2C_Mem_Read+0x36>
 8002dfa:	22ff      	movs	r2, #255	; 0xff
 8002dfc:	8522      	strh	r2, [r4, #40]	; 0x28
 8002dfe:	9300      	str	r3, [sp, #0]
 8002e00:	2380      	movs	r3, #128	; 0x80
 8002e02:	045b      	lsls	r3, r3, #17
 8002e04:	0039      	movs	r1, r7
 8002e06:	0020      	movs	r0, r4
 8002e08:	f7ff fbae 	bl	8002568 <I2C_TransferConfig>
 8002e0c:	0033      	movs	r3, r6
 8002e0e:	2200      	movs	r2, #0
 8002e10:	2104      	movs	r1, #4
 8002e12:	0020      	movs	r0, r4
 8002e14:	9500      	str	r5, [sp, #0]
 8002e16:	f7ff fc6e 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002e1a:	2800      	cmp	r0, #0
 8002e1c:	d000      	beq.n	8002e20 <HAL_I2C_Mem_Read+0x120>
 8002e1e:	e78a      	b.n	8002d36 <HAL_I2C_Mem_Read+0x36>
 8002e20:	6823      	ldr	r3, [r4, #0]
 8002e22:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002e24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e26:	7013      	strb	r3, [r2, #0]
 8002e28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002e2a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002e2c:	3301      	adds	r3, #1
 8002e2e:	6263      	str	r3, [r4, #36]	; 0x24
 8002e30:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e32:	3a01      	subs	r2, #1
 8002e34:	3b01      	subs	r3, #1
 8002e36:	b29b      	uxth	r3, r3
 8002e38:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002e3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e3c:	b292      	uxth	r2, r2
 8002e3e:	8522      	strh	r2, [r4, #40]	; 0x28
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d017      	beq.n	8002e74 <HAL_I2C_Mem_Read+0x174>
 8002e44:	2a00      	cmp	r2, #0
 8002e46:	d115      	bne.n	8002e74 <HAL_I2C_Mem_Read+0x174>
 8002e48:	0033      	movs	r3, r6
 8002e4a:	2180      	movs	r1, #128	; 0x80
 8002e4c:	0020      	movs	r0, r4
 8002e4e:	9500      	str	r5, [sp, #0]
 8002e50:	f7ff fc51 	bl	80026f6 <I2C_WaitOnFlagUntilTimeout>
 8002e54:	2800      	cmp	r0, #0
 8002e56:	d000      	beq.n	8002e5a <HAL_I2C_Mem_Read+0x15a>
 8002e58:	e76d      	b.n	8002d36 <HAL_I2C_Mem_Read+0x36>
 8002e5a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e5c:	2bff      	cmp	r3, #255	; 0xff
 8002e5e:	d923      	bls.n	8002ea8 <HAL_I2C_Mem_Read+0x1a8>
 8002e60:	23ff      	movs	r3, #255	; 0xff
 8002e62:	8523      	strh	r3, [r4, #40]	; 0x28
 8002e64:	2380      	movs	r3, #128	; 0x80
 8002e66:	22ff      	movs	r2, #255	; 0xff
 8002e68:	9000      	str	r0, [sp, #0]
 8002e6a:	045b      	lsls	r3, r3, #17
 8002e6c:	0039      	movs	r1, r7
 8002e6e:	0020      	movs	r0, r4
 8002e70:	f7ff fb7a 	bl	8002568 <I2C_TransferConfig>
 8002e74:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d1c8      	bne.n	8002e0c <HAL_I2C_Mem_Read+0x10c>
 8002e7a:	002a      	movs	r2, r5
 8002e7c:	0031      	movs	r1, r6
 8002e7e:	0020      	movs	r0, r4
 8002e80:	f7ff fc69 	bl	8002756 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002e84:	2800      	cmp	r0, #0
 8002e86:	d000      	beq.n	8002e8a <HAL_I2C_Mem_Read+0x18a>
 8002e88:	e755      	b.n	8002d36 <HAL_I2C_Mem_Read+0x36>
 8002e8a:	2120      	movs	r1, #32
 8002e8c:	6823      	ldr	r3, [r4, #0]
 8002e8e:	4d0c      	ldr	r5, [pc, #48]	; (8002ec0 <HAL_I2C_Mem_Read+0x1c0>)
 8002e90:	61d9      	str	r1, [r3, #28]
 8002e92:	685a      	ldr	r2, [r3, #4]
 8002e94:	402a      	ands	r2, r5
 8002e96:	605a      	str	r2, [r3, #4]
 8002e98:	0023      	movs	r3, r4
 8002e9a:	3341      	adds	r3, #65	; 0x41
 8002e9c:	7019      	strb	r1, [r3, #0]
 8002e9e:	9b07      	ldr	r3, [sp, #28]
 8002ea0:	3440      	adds	r4, #64	; 0x40
 8002ea2:	7018      	strb	r0, [r3, #0]
 8002ea4:	7020      	strb	r0, [r4, #0]
 8002ea6:	e747      	b.n	8002d38 <HAL_I2C_Mem_Read+0x38>
 8002ea8:	2380      	movs	r3, #128	; 0x80
 8002eaa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002eac:	049b      	lsls	r3, r3, #18
 8002eae:	b292      	uxth	r2, r2
 8002eb0:	8522      	strh	r2, [r4, #40]	; 0x28
 8002eb2:	b2d2      	uxtb	r2, r2
 8002eb4:	9000      	str	r0, [sp, #0]
 8002eb6:	e7d9      	b.n	8002e6c <HAL_I2C_Mem_Read+0x16c>
 8002eb8:	80002000 	.word	0x80002000
 8002ebc:	80002400 	.word	0x80002400
 8002ec0:	fe00e800 	.word	0xfe00e800

08002ec4 <HAL_I2CEx_ConfigAnalogFilter>:
 8002ec4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002ec6:	0004      	movs	r4, r0
 8002ec8:	3441      	adds	r4, #65	; 0x41
 8002eca:	7822      	ldrb	r2, [r4, #0]
 8002ecc:	0003      	movs	r3, r0
 8002ece:	000f      	movs	r7, r1
 8002ed0:	2002      	movs	r0, #2
 8002ed2:	b2d6      	uxtb	r6, r2
 8002ed4:	2a20      	cmp	r2, #32
 8002ed6:	d118      	bne.n	8002f0a <HAL_I2CEx_ConfigAnalogFilter+0x46>
 8002ed8:	001d      	movs	r5, r3
 8002eda:	3540      	adds	r5, #64	; 0x40
 8002edc:	782a      	ldrb	r2, [r5, #0]
 8002ede:	2a01      	cmp	r2, #1
 8002ee0:	d013      	beq.n	8002f0a <HAL_I2CEx_ConfigAnalogFilter+0x46>
 8002ee2:	2224      	movs	r2, #36	; 0x24
 8002ee4:	7022      	strb	r2, [r4, #0]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	3a23      	subs	r2, #35	; 0x23
 8002eea:	6819      	ldr	r1, [r3, #0]
 8002eec:	4807      	ldr	r0, [pc, #28]	; (8002f0c <HAL_I2CEx_ConfigAnalogFilter+0x48>)
 8002eee:	4391      	bics	r1, r2
 8002ef0:	6019      	str	r1, [r3, #0]
 8002ef2:	6819      	ldr	r1, [r3, #0]
 8002ef4:	4001      	ands	r1, r0
 8002ef6:	2000      	movs	r0, #0
 8002ef8:	6019      	str	r1, [r3, #0]
 8002efa:	6819      	ldr	r1, [r3, #0]
 8002efc:	4339      	orrs	r1, r7
 8002efe:	6019      	str	r1, [r3, #0]
 8002f00:	6819      	ldr	r1, [r3, #0]
 8002f02:	430a      	orrs	r2, r1
 8002f04:	601a      	str	r2, [r3, #0]
 8002f06:	7026      	strb	r6, [r4, #0]
 8002f08:	7028      	strb	r0, [r5, #0]
 8002f0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f0c:	ffffefff 	.word	0xffffefff

08002f10 <HAL_I2CEx_ConfigDigitalFilter>:
 8002f10:	0002      	movs	r2, r0
 8002f12:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f14:	3241      	adds	r2, #65	; 0x41
 8002f16:	7814      	ldrb	r4, [r2, #0]
 8002f18:	0003      	movs	r3, r0
 8002f1a:	b2e5      	uxtb	r5, r4
 8002f1c:	2002      	movs	r0, #2
 8002f1e:	2c20      	cmp	r4, #32
 8002f20:	d117      	bne.n	8002f52 <HAL_I2CEx_ConfigDigitalFilter+0x42>
 8002f22:	001c      	movs	r4, r3
 8002f24:	3440      	adds	r4, #64	; 0x40
 8002f26:	7826      	ldrb	r6, [r4, #0]
 8002f28:	2e01      	cmp	r6, #1
 8002f2a:	d012      	beq.n	8002f52 <HAL_I2CEx_ConfigDigitalFilter+0x42>
 8002f2c:	3022      	adds	r0, #34	; 0x22
 8002f2e:	7010      	strb	r0, [r2, #0]
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	3823      	subs	r0, #35	; 0x23
 8002f34:	681e      	ldr	r6, [r3, #0]
 8002f36:	4f07      	ldr	r7, [pc, #28]	; (8002f54 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
 8002f38:	4386      	bics	r6, r0
 8002f3a:	601e      	str	r6, [r3, #0]
 8002f3c:	681e      	ldr	r6, [r3, #0]
 8002f3e:	0209      	lsls	r1, r1, #8
 8002f40:	403e      	ands	r6, r7
 8002f42:	4331      	orrs	r1, r6
 8002f44:	6019      	str	r1, [r3, #0]
 8002f46:	6819      	ldr	r1, [r3, #0]
 8002f48:	4308      	orrs	r0, r1
 8002f4a:	6018      	str	r0, [r3, #0]
 8002f4c:	2000      	movs	r0, #0
 8002f4e:	7015      	strb	r5, [r2, #0]
 8002f50:	7020      	strb	r0, [r4, #0]
 8002f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f54:	fffff0ff 	.word	0xfffff0ff

08002f58 <HAL_RCC_GetSysClockFreq>:
 8002f58:	220c      	movs	r2, #12
 8002f5a:	4b1d      	ldr	r3, [pc, #116]	; (8002fd0 <HAL_RCC_GetSysClockFreq+0x78>)
 8002f5c:	b570      	push	{r4, r5, r6, lr}
 8002f5e:	68dc      	ldr	r4, [r3, #12]
 8002f60:	4022      	ands	r2, r4
 8002f62:	2a08      	cmp	r2, #8
 8002f64:	d031      	beq.n	8002fca <HAL_RCC_GetSysClockFreq+0x72>
 8002f66:	2a0c      	cmp	r2, #12
 8002f68:	d009      	beq.n	8002f7e <HAL_RCC_GetSysClockFreq+0x26>
 8002f6a:	2a04      	cmp	r2, #4
 8002f6c:	d125      	bne.n	8002fba <HAL_RCC_GetSysClockFreq+0x62>
 8002f6e:	6818      	ldr	r0, [r3, #0]
 8002f70:	4b18      	ldr	r3, [pc, #96]	; (8002fd4 <HAL_RCC_GetSysClockFreq+0x7c>)
 8002f72:	06c0      	lsls	r0, r0, #27
 8002f74:	17c0      	asrs	r0, r0, #31
 8002f76:	4018      	ands	r0, r3
 8002f78:	4b17      	ldr	r3, [pc, #92]	; (8002fd8 <HAL_RCC_GetSysClockFreq+0x80>)
 8002f7a:	18c0      	adds	r0, r0, r3
 8002f7c:	bd70      	pop	{r4, r5, r6, pc}
 8002f7e:	02a2      	lsls	r2, r4, #10
 8002f80:	4816      	ldr	r0, [pc, #88]	; (8002fdc <HAL_RCC_GetSysClockFreq+0x84>)
 8002f82:	0f12      	lsrs	r2, r2, #28
 8002f84:	5c80      	ldrb	r0, [r0, r2]
 8002f86:	2280      	movs	r2, #128	; 0x80
 8002f88:	0224      	lsls	r4, r4, #8
 8002f8a:	68d9      	ldr	r1, [r3, #12]
 8002f8c:	0fa4      	lsrs	r4, r4, #30
 8002f8e:	0252      	lsls	r2, r2, #9
 8002f90:	3401      	adds	r4, #1
 8002f92:	4211      	tst	r1, r2
 8002f94:	d009      	beq.n	8002faa <HAL_RCC_GetSysClockFreq+0x52>
 8002f96:	4a12      	ldr	r2, [pc, #72]	; (8002fe0 <HAL_RCC_GetSysClockFreq+0x88>)
 8002f98:	2300      	movs	r3, #0
 8002f9a:	2100      	movs	r1, #0
 8002f9c:	f7fd f97c 	bl	8000298 <__aeabi_lmul>
 8002fa0:	0022      	movs	r2, r4
 8002fa2:	2300      	movs	r3, #0
 8002fa4:	f7fd f958 	bl	8000258 <__aeabi_uldivmod>
 8002fa8:	e7e8      	b.n	8002f7c <HAL_RCC_GetSysClockFreq+0x24>
 8002faa:	681a      	ldr	r2, [r3, #0]
 8002fac:	2310      	movs	r3, #16
 8002fae:	421a      	tst	r2, r3
 8002fb0:	d001      	beq.n	8002fb6 <HAL_RCC_GetSysClockFreq+0x5e>
 8002fb2:	4a0c      	ldr	r2, [pc, #48]	; (8002fe4 <HAL_RCC_GetSysClockFreq+0x8c>)
 8002fb4:	e7f0      	b.n	8002f98 <HAL_RCC_GetSysClockFreq+0x40>
 8002fb6:	4a08      	ldr	r2, [pc, #32]	; (8002fd8 <HAL_RCC_GetSysClockFreq+0x80>)
 8002fb8:	e7ee      	b.n	8002f98 <HAL_RCC_GetSysClockFreq+0x40>
 8002fba:	2080      	movs	r0, #128	; 0x80
 8002fbc:	685b      	ldr	r3, [r3, #4]
 8002fbe:	0200      	lsls	r0, r0, #8
 8002fc0:	041b      	lsls	r3, r3, #16
 8002fc2:	0f5b      	lsrs	r3, r3, #29
 8002fc4:	3301      	adds	r3, #1
 8002fc6:	4098      	lsls	r0, r3
 8002fc8:	e7d8      	b.n	8002f7c <HAL_RCC_GetSysClockFreq+0x24>
 8002fca:	4805      	ldr	r0, [pc, #20]	; (8002fe0 <HAL_RCC_GetSysClockFreq+0x88>)
 8002fcc:	e7d6      	b.n	8002f7c <HAL_RCC_GetSysClockFreq+0x24>
 8002fce:	46c0      	nop			; (mov r8, r8)
 8002fd0:	40021000 	.word	0x40021000
 8002fd4:	ff48e500 	.word	0xff48e500
 8002fd8:	00f42400 	.word	0x00f42400
 8002fdc:	080052b2 	.word	0x080052b2
 8002fe0:	007a1200 	.word	0x007a1200
 8002fe4:	003d0900 	.word	0x003d0900

08002fe8 <HAL_RCC_OscConfig>:
 8002fe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002fea:	0005      	movs	r5, r0
 8002fec:	b085      	sub	sp, #20
 8002fee:	2800      	cmp	r0, #0
 8002ff0:	d05a      	beq.n	80030a8 <HAL_RCC_OscConfig+0xc0>
 8002ff2:	230c      	movs	r3, #12
 8002ff4:	4cbe      	ldr	r4, [pc, #760]	; (80032f0 <HAL_RCC_OscConfig+0x308>)
 8002ff6:	6802      	ldr	r2, [r0, #0]
 8002ff8:	68e6      	ldr	r6, [r4, #12]
 8002ffa:	68e7      	ldr	r7, [r4, #12]
 8002ffc:	401e      	ands	r6, r3
 8002ffe:	2380      	movs	r3, #128	; 0x80
 8003000:	025b      	lsls	r3, r3, #9
 8003002:	0019      	movs	r1, r3
 8003004:	401f      	ands	r7, r3
 8003006:	07d2      	lsls	r2, r2, #31
 8003008:	d442      	bmi.n	8003090 <HAL_RCC_OscConfig+0xa8>
 800300a:	682b      	ldr	r3, [r5, #0]
 800300c:	079b      	lsls	r3, r3, #30
 800300e:	d500      	bpl.n	8003012 <HAL_RCC_OscConfig+0x2a>
 8003010:	e08b      	b.n	800312a <HAL_RCC_OscConfig+0x142>
 8003012:	682b      	ldr	r3, [r5, #0]
 8003014:	06db      	lsls	r3, r3, #27
 8003016:	d529      	bpl.n	800306c <HAL_RCC_OscConfig+0x84>
 8003018:	2e00      	cmp	r6, #0
 800301a:	d000      	beq.n	800301e <HAL_RCC_OscConfig+0x36>
 800301c:	e0dc      	b.n	80031d8 <HAL_RCC_OscConfig+0x1f0>
 800301e:	6823      	ldr	r3, [r4, #0]
 8003020:	059b      	lsls	r3, r3, #22
 8003022:	d502      	bpl.n	800302a <HAL_RCC_OscConfig+0x42>
 8003024:	69eb      	ldr	r3, [r5, #28]
 8003026:	2b00      	cmp	r3, #0
 8003028:	d03e      	beq.n	80030a8 <HAL_RCC_OscConfig+0xc0>
 800302a:	6862      	ldr	r2, [r4, #4]
 800302c:	49b1      	ldr	r1, [pc, #708]	; (80032f4 <HAL_RCC_OscConfig+0x30c>)
 800302e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003030:	400a      	ands	r2, r1
 8003032:	431a      	orrs	r2, r3
 8003034:	6062      	str	r2, [r4, #4]
 8003036:	6861      	ldr	r1, [r4, #4]
 8003038:	6a2a      	ldr	r2, [r5, #32]
 800303a:	0209      	lsls	r1, r1, #8
 800303c:	0a09      	lsrs	r1, r1, #8
 800303e:	0612      	lsls	r2, r2, #24
 8003040:	430a      	orrs	r2, r1
 8003042:	6062      	str	r2, [r4, #4]
 8003044:	2280      	movs	r2, #128	; 0x80
 8003046:	0b5b      	lsrs	r3, r3, #13
 8003048:	3301      	adds	r3, #1
 800304a:	0212      	lsls	r2, r2, #8
 800304c:	409a      	lsls	r2, r3
 800304e:	0013      	movs	r3, r2
 8003050:	68e1      	ldr	r1, [r4, #12]
 8003052:	060a      	lsls	r2, r1, #24
 8003054:	49a8      	ldr	r1, [pc, #672]	; (80032f8 <HAL_RCC_OscConfig+0x310>)
 8003056:	0f12      	lsrs	r2, r2, #28
 8003058:	5c8a      	ldrb	r2, [r1, r2]
 800305a:	40d3      	lsrs	r3, r2
 800305c:	4aa7      	ldr	r2, [pc, #668]	; (80032fc <HAL_RCC_OscConfig+0x314>)
 800305e:	6013      	str	r3, [r2, #0]
 8003060:	4ba7      	ldr	r3, [pc, #668]	; (8003300 <HAL_RCC_OscConfig+0x318>)
 8003062:	6818      	ldr	r0, [r3, #0]
 8003064:	f7ff f90c 	bl	8002280 <HAL_InitTick>
 8003068:	2800      	cmp	r0, #0
 800306a:	d134      	bne.n	80030d6 <HAL_RCC_OscConfig+0xee>
 800306c:	682b      	ldr	r3, [r5, #0]
 800306e:	071b      	lsls	r3, r3, #28
 8003070:	d500      	bpl.n	8003074 <HAL_RCC_OscConfig+0x8c>
 8003072:	e0e8      	b.n	8003246 <HAL_RCC_OscConfig+0x25e>
 8003074:	682b      	ldr	r3, [r5, #0]
 8003076:	075b      	lsls	r3, r3, #29
 8003078:	d500      	bpl.n	800307c <HAL_RCC_OscConfig+0x94>
 800307a:	e10a      	b.n	8003292 <HAL_RCC_OscConfig+0x2aa>
 800307c:	682b      	ldr	r3, [r5, #0]
 800307e:	069b      	lsls	r3, r3, #26
 8003080:	d500      	bpl.n	8003084 <HAL_RCC_OscConfig+0x9c>
 8003082:	e18e      	b.n	80033a2 <HAL_RCC_OscConfig+0x3ba>
 8003084:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8003086:	2b00      	cmp	r3, #0
 8003088:	d000      	beq.n	800308c <HAL_RCC_OscConfig+0xa4>
 800308a:	e1bd      	b.n	8003408 <HAL_RCC_OscConfig+0x420>
 800308c:	2000      	movs	r0, #0
 800308e:	e022      	b.n	80030d6 <HAL_RCC_OscConfig+0xee>
 8003090:	2e08      	cmp	r6, #8
 8003092:	d003      	beq.n	800309c <HAL_RCC_OscConfig+0xb4>
 8003094:	2e0c      	cmp	r6, #12
 8003096:	d109      	bne.n	80030ac <HAL_RCC_OscConfig+0xc4>
 8003098:	2f00      	cmp	r7, #0
 800309a:	d007      	beq.n	80030ac <HAL_RCC_OscConfig+0xc4>
 800309c:	6823      	ldr	r3, [r4, #0]
 800309e:	039b      	lsls	r3, r3, #14
 80030a0:	d5b3      	bpl.n	800300a <HAL_RCC_OscConfig+0x22>
 80030a2:	686b      	ldr	r3, [r5, #4]
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d1b0      	bne.n	800300a <HAL_RCC_OscConfig+0x22>
 80030a8:	2001      	movs	r0, #1
 80030aa:	e014      	b.n	80030d6 <HAL_RCC_OscConfig+0xee>
 80030ac:	686a      	ldr	r2, [r5, #4]
 80030ae:	428a      	cmp	r2, r1
 80030b0:	d113      	bne.n	80030da <HAL_RCC_OscConfig+0xf2>
 80030b2:	6822      	ldr	r2, [r4, #0]
 80030b4:	4313      	orrs	r3, r2
 80030b6:	6023      	str	r3, [r4, #0]
 80030b8:	f7ff f926 	bl	8002308 <HAL_GetTick>
 80030bc:	9000      	str	r0, [sp, #0]
 80030be:	2280      	movs	r2, #128	; 0x80
 80030c0:	6823      	ldr	r3, [r4, #0]
 80030c2:	0292      	lsls	r2, r2, #10
 80030c4:	4213      	tst	r3, r2
 80030c6:	d1a0      	bne.n	800300a <HAL_RCC_OscConfig+0x22>
 80030c8:	f7ff f91e 	bl	8002308 <HAL_GetTick>
 80030cc:	9b00      	ldr	r3, [sp, #0]
 80030ce:	1ac0      	subs	r0, r0, r3
 80030d0:	2864      	cmp	r0, #100	; 0x64
 80030d2:	d9f4      	bls.n	80030be <HAL_RCC_OscConfig+0xd6>
 80030d4:	2003      	movs	r0, #3
 80030d6:	b005      	add	sp, #20
 80030d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030da:	21a0      	movs	r1, #160	; 0xa0
 80030dc:	02c9      	lsls	r1, r1, #11
 80030de:	428a      	cmp	r2, r1
 80030e0:	d105      	bne.n	80030ee <HAL_RCC_OscConfig+0x106>
 80030e2:	2280      	movs	r2, #128	; 0x80
 80030e4:	6821      	ldr	r1, [r4, #0]
 80030e6:	02d2      	lsls	r2, r2, #11
 80030e8:	430a      	orrs	r2, r1
 80030ea:	6022      	str	r2, [r4, #0]
 80030ec:	e7e1      	b.n	80030b2 <HAL_RCC_OscConfig+0xca>
 80030ee:	6821      	ldr	r1, [r4, #0]
 80030f0:	4884      	ldr	r0, [pc, #528]	; (8003304 <HAL_RCC_OscConfig+0x31c>)
 80030f2:	4001      	ands	r1, r0
 80030f4:	6021      	str	r1, [r4, #0]
 80030f6:	6821      	ldr	r1, [r4, #0]
 80030f8:	400b      	ands	r3, r1
 80030fa:	9303      	str	r3, [sp, #12]
 80030fc:	9b03      	ldr	r3, [sp, #12]
 80030fe:	4982      	ldr	r1, [pc, #520]	; (8003308 <HAL_RCC_OscConfig+0x320>)
 8003100:	6823      	ldr	r3, [r4, #0]
 8003102:	400b      	ands	r3, r1
 8003104:	6023      	str	r3, [r4, #0]
 8003106:	2a00      	cmp	r2, #0
 8003108:	d1d6      	bne.n	80030b8 <HAL_RCC_OscConfig+0xd0>
 800310a:	f7ff f8fd 	bl	8002308 <HAL_GetTick>
 800310e:	9000      	str	r0, [sp, #0]
 8003110:	2280      	movs	r2, #128	; 0x80
 8003112:	6823      	ldr	r3, [r4, #0]
 8003114:	0292      	lsls	r2, r2, #10
 8003116:	4213      	tst	r3, r2
 8003118:	d100      	bne.n	800311c <HAL_RCC_OscConfig+0x134>
 800311a:	e776      	b.n	800300a <HAL_RCC_OscConfig+0x22>
 800311c:	f7ff f8f4 	bl	8002308 <HAL_GetTick>
 8003120:	9b00      	ldr	r3, [sp, #0]
 8003122:	1ac0      	subs	r0, r0, r3
 8003124:	2864      	cmp	r0, #100	; 0x64
 8003126:	d9f3      	bls.n	8003110 <HAL_RCC_OscConfig+0x128>
 8003128:	e7d4      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 800312a:	68ea      	ldr	r2, [r5, #12]
 800312c:	2e04      	cmp	r6, #4
 800312e:	d003      	beq.n	8003138 <HAL_RCC_OscConfig+0x150>
 8003130:	2e0c      	cmp	r6, #12
 8003132:	d124      	bne.n	800317e <HAL_RCC_OscConfig+0x196>
 8003134:	2f00      	cmp	r7, #0
 8003136:	d122      	bne.n	800317e <HAL_RCC_OscConfig+0x196>
 8003138:	6823      	ldr	r3, [r4, #0]
 800313a:	075b      	lsls	r3, r3, #29
 800313c:	d501      	bpl.n	8003142 <HAL_RCC_OscConfig+0x15a>
 800313e:	2a00      	cmp	r2, #0
 8003140:	d0b2      	beq.n	80030a8 <HAL_RCC_OscConfig+0xc0>
 8003142:	6861      	ldr	r1, [r4, #4]
 8003144:	692b      	ldr	r3, [r5, #16]
 8003146:	4871      	ldr	r0, [pc, #452]	; (800330c <HAL_RCC_OscConfig+0x324>)
 8003148:	021b      	lsls	r3, r3, #8
 800314a:	4001      	ands	r1, r0
 800314c:	430b      	orrs	r3, r1
 800314e:	2109      	movs	r1, #9
 8003150:	6063      	str	r3, [r4, #4]
 8003152:	6823      	ldr	r3, [r4, #0]
 8003154:	438b      	bics	r3, r1
 8003156:	4313      	orrs	r3, r2
 8003158:	6023      	str	r3, [r4, #0]
 800315a:	f7ff fefd 	bl	8002f58 <HAL_RCC_GetSysClockFreq>
 800315e:	68e3      	ldr	r3, [r4, #12]
 8003160:	4a65      	ldr	r2, [pc, #404]	; (80032f8 <HAL_RCC_OscConfig+0x310>)
 8003162:	061b      	lsls	r3, r3, #24
 8003164:	0f1b      	lsrs	r3, r3, #28
 8003166:	5cd3      	ldrb	r3, [r2, r3]
 8003168:	40d8      	lsrs	r0, r3
 800316a:	4b64      	ldr	r3, [pc, #400]	; (80032fc <HAL_RCC_OscConfig+0x314>)
 800316c:	6018      	str	r0, [r3, #0]
 800316e:	4b64      	ldr	r3, [pc, #400]	; (8003300 <HAL_RCC_OscConfig+0x318>)
 8003170:	6818      	ldr	r0, [r3, #0]
 8003172:	f7ff f885 	bl	8002280 <HAL_InitTick>
 8003176:	2800      	cmp	r0, #0
 8003178:	d100      	bne.n	800317c <HAL_RCC_OscConfig+0x194>
 800317a:	e74a      	b.n	8003012 <HAL_RCC_OscConfig+0x2a>
 800317c:	e7ab      	b.n	80030d6 <HAL_RCC_OscConfig+0xee>
 800317e:	6823      	ldr	r3, [r4, #0]
 8003180:	2a00      	cmp	r2, #0
 8003182:	d018      	beq.n	80031b6 <HAL_RCC_OscConfig+0x1ce>
 8003184:	2109      	movs	r1, #9
 8003186:	438b      	bics	r3, r1
 8003188:	4313      	orrs	r3, r2
 800318a:	6023      	str	r3, [r4, #0]
 800318c:	f7ff f8bc 	bl	8002308 <HAL_GetTick>
 8003190:	0007      	movs	r7, r0
 8003192:	2204      	movs	r2, #4
 8003194:	6823      	ldr	r3, [r4, #0]
 8003196:	4213      	tst	r3, r2
 8003198:	d007      	beq.n	80031aa <HAL_RCC_OscConfig+0x1c2>
 800319a:	6862      	ldr	r2, [r4, #4]
 800319c:	692b      	ldr	r3, [r5, #16]
 800319e:	495b      	ldr	r1, [pc, #364]	; (800330c <HAL_RCC_OscConfig+0x324>)
 80031a0:	021b      	lsls	r3, r3, #8
 80031a2:	400a      	ands	r2, r1
 80031a4:	4313      	orrs	r3, r2
 80031a6:	6063      	str	r3, [r4, #4]
 80031a8:	e733      	b.n	8003012 <HAL_RCC_OscConfig+0x2a>
 80031aa:	f7ff f8ad 	bl	8002308 <HAL_GetTick>
 80031ae:	1bc0      	subs	r0, r0, r7
 80031b0:	2802      	cmp	r0, #2
 80031b2:	d9ee      	bls.n	8003192 <HAL_RCC_OscConfig+0x1aa>
 80031b4:	e78e      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 80031b6:	2201      	movs	r2, #1
 80031b8:	4393      	bics	r3, r2
 80031ba:	6023      	str	r3, [r4, #0]
 80031bc:	f7ff f8a4 	bl	8002308 <HAL_GetTick>
 80031c0:	0007      	movs	r7, r0
 80031c2:	2204      	movs	r2, #4
 80031c4:	6823      	ldr	r3, [r4, #0]
 80031c6:	4213      	tst	r3, r2
 80031c8:	d100      	bne.n	80031cc <HAL_RCC_OscConfig+0x1e4>
 80031ca:	e722      	b.n	8003012 <HAL_RCC_OscConfig+0x2a>
 80031cc:	f7ff f89c 	bl	8002308 <HAL_GetTick>
 80031d0:	1bc0      	subs	r0, r0, r7
 80031d2:	2802      	cmp	r0, #2
 80031d4:	d9f5      	bls.n	80031c2 <HAL_RCC_OscConfig+0x1da>
 80031d6:	e77d      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 80031d8:	69eb      	ldr	r3, [r5, #28]
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d020      	beq.n	8003220 <HAL_RCC_OscConfig+0x238>
 80031de:	2380      	movs	r3, #128	; 0x80
 80031e0:	6822      	ldr	r2, [r4, #0]
 80031e2:	005b      	lsls	r3, r3, #1
 80031e4:	4313      	orrs	r3, r2
 80031e6:	6023      	str	r3, [r4, #0]
 80031e8:	f7ff f88e 	bl	8002308 <HAL_GetTick>
 80031ec:	0007      	movs	r7, r0
 80031ee:	2280      	movs	r2, #128	; 0x80
 80031f0:	6823      	ldr	r3, [r4, #0]
 80031f2:	0092      	lsls	r2, r2, #2
 80031f4:	4213      	tst	r3, r2
 80031f6:	d00d      	beq.n	8003214 <HAL_RCC_OscConfig+0x22c>
 80031f8:	6863      	ldr	r3, [r4, #4]
 80031fa:	4a3e      	ldr	r2, [pc, #248]	; (80032f4 <HAL_RCC_OscConfig+0x30c>)
 80031fc:	4013      	ands	r3, r2
 80031fe:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8003200:	4313      	orrs	r3, r2
 8003202:	6063      	str	r3, [r4, #4]
 8003204:	6862      	ldr	r2, [r4, #4]
 8003206:	6a2b      	ldr	r3, [r5, #32]
 8003208:	0212      	lsls	r2, r2, #8
 800320a:	061b      	lsls	r3, r3, #24
 800320c:	0a12      	lsrs	r2, r2, #8
 800320e:	4313      	orrs	r3, r2
 8003210:	6063      	str	r3, [r4, #4]
 8003212:	e72b      	b.n	800306c <HAL_RCC_OscConfig+0x84>
 8003214:	f7ff f878 	bl	8002308 <HAL_GetTick>
 8003218:	1bc0      	subs	r0, r0, r7
 800321a:	2802      	cmp	r0, #2
 800321c:	d9e7      	bls.n	80031ee <HAL_RCC_OscConfig+0x206>
 800321e:	e759      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003220:	6823      	ldr	r3, [r4, #0]
 8003222:	4a3b      	ldr	r2, [pc, #236]	; (8003310 <HAL_RCC_OscConfig+0x328>)
 8003224:	4013      	ands	r3, r2
 8003226:	6023      	str	r3, [r4, #0]
 8003228:	f7ff f86e 	bl	8002308 <HAL_GetTick>
 800322c:	0007      	movs	r7, r0
 800322e:	2280      	movs	r2, #128	; 0x80
 8003230:	6823      	ldr	r3, [r4, #0]
 8003232:	0092      	lsls	r2, r2, #2
 8003234:	4213      	tst	r3, r2
 8003236:	d100      	bne.n	800323a <HAL_RCC_OscConfig+0x252>
 8003238:	e718      	b.n	800306c <HAL_RCC_OscConfig+0x84>
 800323a:	f7ff f865 	bl	8002308 <HAL_GetTick>
 800323e:	1bc0      	subs	r0, r0, r7
 8003240:	2802      	cmp	r0, #2
 8003242:	d9f4      	bls.n	800322e <HAL_RCC_OscConfig+0x246>
 8003244:	e746      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003246:	696a      	ldr	r2, [r5, #20]
 8003248:	2301      	movs	r3, #1
 800324a:	2a00      	cmp	r2, #0
 800324c:	d010      	beq.n	8003270 <HAL_RCC_OscConfig+0x288>
 800324e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8003250:	4313      	orrs	r3, r2
 8003252:	6523      	str	r3, [r4, #80]	; 0x50
 8003254:	f7ff f858 	bl	8002308 <HAL_GetTick>
 8003258:	0007      	movs	r7, r0
 800325a:	2202      	movs	r2, #2
 800325c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800325e:	4213      	tst	r3, r2
 8003260:	d000      	beq.n	8003264 <HAL_RCC_OscConfig+0x27c>
 8003262:	e707      	b.n	8003074 <HAL_RCC_OscConfig+0x8c>
 8003264:	f7ff f850 	bl	8002308 <HAL_GetTick>
 8003268:	1bc0      	subs	r0, r0, r7
 800326a:	2802      	cmp	r0, #2
 800326c:	d9f5      	bls.n	800325a <HAL_RCC_OscConfig+0x272>
 800326e:	e731      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003270:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8003272:	439a      	bics	r2, r3
 8003274:	6522      	str	r2, [r4, #80]	; 0x50
 8003276:	f7ff f847 	bl	8002308 <HAL_GetTick>
 800327a:	0007      	movs	r7, r0
 800327c:	2202      	movs	r2, #2
 800327e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003280:	4213      	tst	r3, r2
 8003282:	d100      	bne.n	8003286 <HAL_RCC_OscConfig+0x29e>
 8003284:	e6f6      	b.n	8003074 <HAL_RCC_OscConfig+0x8c>
 8003286:	f7ff f83f 	bl	8002308 <HAL_GetTick>
 800328a:	1bc0      	subs	r0, r0, r7
 800328c:	2802      	cmp	r0, #2
 800328e:	d9f5      	bls.n	800327c <HAL_RCC_OscConfig+0x294>
 8003290:	e720      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003292:	2380      	movs	r3, #128	; 0x80
 8003294:	2100      	movs	r1, #0
 8003296:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8003298:	055b      	lsls	r3, r3, #21
 800329a:	9100      	str	r1, [sp, #0]
 800329c:	421a      	tst	r2, r3
 800329e:	d104      	bne.n	80032aa <HAL_RCC_OscConfig+0x2c2>
 80032a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80032a2:	4313      	orrs	r3, r2
 80032a4:	63a3      	str	r3, [r4, #56]	; 0x38
 80032a6:	2301      	movs	r3, #1
 80032a8:	9300      	str	r3, [sp, #0]
 80032aa:	2280      	movs	r2, #128	; 0x80
 80032ac:	4f19      	ldr	r7, [pc, #100]	; (8003314 <HAL_RCC_OscConfig+0x32c>)
 80032ae:	0052      	lsls	r2, r2, #1
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	4213      	tst	r3, r2
 80032b4:	d008      	beq.n	80032c8 <HAL_RCC_OscConfig+0x2e0>
 80032b6:	2280      	movs	r2, #128	; 0x80
 80032b8:	68ab      	ldr	r3, [r5, #8]
 80032ba:	0052      	lsls	r2, r2, #1
 80032bc:	4293      	cmp	r3, r2
 80032be:	d12b      	bne.n	8003318 <HAL_RCC_OscConfig+0x330>
 80032c0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80032c2:	4313      	orrs	r3, r2
 80032c4:	6523      	str	r3, [r4, #80]	; 0x50
 80032c6:	e04c      	b.n	8003362 <HAL_RCC_OscConfig+0x37a>
 80032c8:	2280      	movs	r2, #128	; 0x80
 80032ca:	683b      	ldr	r3, [r7, #0]
 80032cc:	0052      	lsls	r2, r2, #1
 80032ce:	4313      	orrs	r3, r2
 80032d0:	603b      	str	r3, [r7, #0]
 80032d2:	f7ff f819 	bl	8002308 <HAL_GetTick>
 80032d6:	9001      	str	r0, [sp, #4]
 80032d8:	2280      	movs	r2, #128	; 0x80
 80032da:	683b      	ldr	r3, [r7, #0]
 80032dc:	0052      	lsls	r2, r2, #1
 80032de:	4213      	tst	r3, r2
 80032e0:	d1e9      	bne.n	80032b6 <HAL_RCC_OscConfig+0x2ce>
 80032e2:	f7ff f811 	bl	8002308 <HAL_GetTick>
 80032e6:	9b01      	ldr	r3, [sp, #4]
 80032e8:	1ac0      	subs	r0, r0, r3
 80032ea:	2864      	cmp	r0, #100	; 0x64
 80032ec:	d9f4      	bls.n	80032d8 <HAL_RCC_OscConfig+0x2f0>
 80032ee:	e6f1      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 80032f0:	40021000 	.word	0x40021000
 80032f4:	ffff1fff 	.word	0xffff1fff
 80032f8:	0800529a 	.word	0x0800529a
 80032fc:	20000190 	.word	0x20000190
 8003300:	20000198 	.word	0x20000198
 8003304:	fffeffff 	.word	0xfffeffff
 8003308:	fffbffff 	.word	0xfffbffff
 800330c:	ffffe0ff 	.word	0xffffe0ff
 8003310:	fffffeff 	.word	0xfffffeff
 8003314:	40007000 	.word	0x40007000
 8003318:	2b00      	cmp	r3, #0
 800331a:	d116      	bne.n	800334a <HAL_RCC_OscConfig+0x362>
 800331c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800331e:	4a6b      	ldr	r2, [pc, #428]	; (80034cc <HAL_RCC_OscConfig+0x4e4>)
 8003320:	4013      	ands	r3, r2
 8003322:	6523      	str	r3, [r4, #80]	; 0x50
 8003324:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003326:	4a6a      	ldr	r2, [pc, #424]	; (80034d0 <HAL_RCC_OscConfig+0x4e8>)
 8003328:	4013      	ands	r3, r2
 800332a:	6523      	str	r3, [r4, #80]	; 0x50
 800332c:	f7fe ffec 	bl	8002308 <HAL_GetTick>
 8003330:	0007      	movs	r7, r0
 8003332:	2280      	movs	r2, #128	; 0x80
 8003334:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003336:	0092      	lsls	r2, r2, #2
 8003338:	4213      	tst	r3, r2
 800333a:	d01a      	beq.n	8003372 <HAL_RCC_OscConfig+0x38a>
 800333c:	f7fe ffe4 	bl	8002308 <HAL_GetTick>
 8003340:	4b64      	ldr	r3, [pc, #400]	; (80034d4 <HAL_RCC_OscConfig+0x4ec>)
 8003342:	1bc0      	subs	r0, r0, r7
 8003344:	4298      	cmp	r0, r3
 8003346:	d9f4      	bls.n	8003332 <HAL_RCC_OscConfig+0x34a>
 8003348:	e6c4      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 800334a:	21a0      	movs	r1, #160	; 0xa0
 800334c:	00c9      	lsls	r1, r1, #3
 800334e:	428b      	cmp	r3, r1
 8003350:	d118      	bne.n	8003384 <HAL_RCC_OscConfig+0x39c>
 8003352:	2380      	movs	r3, #128	; 0x80
 8003354:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003356:	00db      	lsls	r3, r3, #3
 8003358:	430b      	orrs	r3, r1
 800335a:	6523      	str	r3, [r4, #80]	; 0x50
 800335c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800335e:	431a      	orrs	r2, r3
 8003360:	6522      	str	r2, [r4, #80]	; 0x50
 8003362:	f7fe ffd1 	bl	8002308 <HAL_GetTick>
 8003366:	0007      	movs	r7, r0
 8003368:	2280      	movs	r2, #128	; 0x80
 800336a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800336c:	0092      	lsls	r2, r2, #2
 800336e:	4213      	tst	r3, r2
 8003370:	d010      	beq.n	8003394 <HAL_RCC_OscConfig+0x3ac>
 8003372:	9b00      	ldr	r3, [sp, #0]
 8003374:	2b01      	cmp	r3, #1
 8003376:	d000      	beq.n	800337a <HAL_RCC_OscConfig+0x392>
 8003378:	e680      	b.n	800307c <HAL_RCC_OscConfig+0x94>
 800337a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800337c:	4a56      	ldr	r2, [pc, #344]	; (80034d8 <HAL_RCC_OscConfig+0x4f0>)
 800337e:	4013      	ands	r3, r2
 8003380:	63a3      	str	r3, [r4, #56]	; 0x38
 8003382:	e67b      	b.n	800307c <HAL_RCC_OscConfig+0x94>
 8003384:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003386:	4a51      	ldr	r2, [pc, #324]	; (80034cc <HAL_RCC_OscConfig+0x4e4>)
 8003388:	4013      	ands	r3, r2
 800338a:	6523      	str	r3, [r4, #80]	; 0x50
 800338c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800338e:	4a50      	ldr	r2, [pc, #320]	; (80034d0 <HAL_RCC_OscConfig+0x4e8>)
 8003390:	4013      	ands	r3, r2
 8003392:	e797      	b.n	80032c4 <HAL_RCC_OscConfig+0x2dc>
 8003394:	f7fe ffb8 	bl	8002308 <HAL_GetTick>
 8003398:	4b4e      	ldr	r3, [pc, #312]	; (80034d4 <HAL_RCC_OscConfig+0x4ec>)
 800339a:	1bc0      	subs	r0, r0, r7
 800339c:	4298      	cmp	r0, r3
 800339e:	d9e3      	bls.n	8003368 <HAL_RCC_OscConfig+0x380>
 80033a0:	e698      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 80033a2:	69a9      	ldr	r1, [r5, #24]
 80033a4:	2301      	movs	r3, #1
 80033a6:	4a4d      	ldr	r2, [pc, #308]	; (80034dc <HAL_RCC_OscConfig+0x4f4>)
 80033a8:	2900      	cmp	r1, #0
 80033aa:	d018      	beq.n	80033de <HAL_RCC_OscConfig+0x3f6>
 80033ac:	68a1      	ldr	r1, [r4, #8]
 80033ae:	4319      	orrs	r1, r3
 80033b0:	60a1      	str	r1, [r4, #8]
 80033b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80033b4:	430b      	orrs	r3, r1
 80033b6:	6363      	str	r3, [r4, #52]	; 0x34
 80033b8:	2380      	movs	r3, #128	; 0x80
 80033ba:	6a11      	ldr	r1, [r2, #32]
 80033bc:	019b      	lsls	r3, r3, #6
 80033be:	430b      	orrs	r3, r1
 80033c0:	6213      	str	r3, [r2, #32]
 80033c2:	f7fe ffa1 	bl	8002308 <HAL_GetTick>
 80033c6:	0007      	movs	r7, r0
 80033c8:	2202      	movs	r2, #2
 80033ca:	68a3      	ldr	r3, [r4, #8]
 80033cc:	4213      	tst	r3, r2
 80033ce:	d000      	beq.n	80033d2 <HAL_RCC_OscConfig+0x3ea>
 80033d0:	e658      	b.n	8003084 <HAL_RCC_OscConfig+0x9c>
 80033d2:	f7fe ff99 	bl	8002308 <HAL_GetTick>
 80033d6:	1bc0      	subs	r0, r0, r7
 80033d8:	2802      	cmp	r0, #2
 80033da:	d9f5      	bls.n	80033c8 <HAL_RCC_OscConfig+0x3e0>
 80033dc:	e67a      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 80033de:	68a1      	ldr	r1, [r4, #8]
 80033e0:	4399      	bics	r1, r3
 80033e2:	60a1      	str	r1, [r4, #8]
 80033e4:	6a13      	ldr	r3, [r2, #32]
 80033e6:	493e      	ldr	r1, [pc, #248]	; (80034e0 <HAL_RCC_OscConfig+0x4f8>)
 80033e8:	400b      	ands	r3, r1
 80033ea:	6213      	str	r3, [r2, #32]
 80033ec:	f7fe ff8c 	bl	8002308 <HAL_GetTick>
 80033f0:	0007      	movs	r7, r0
 80033f2:	2202      	movs	r2, #2
 80033f4:	68a3      	ldr	r3, [r4, #8]
 80033f6:	4213      	tst	r3, r2
 80033f8:	d100      	bne.n	80033fc <HAL_RCC_OscConfig+0x414>
 80033fa:	e643      	b.n	8003084 <HAL_RCC_OscConfig+0x9c>
 80033fc:	f7fe ff84 	bl	8002308 <HAL_GetTick>
 8003400:	1bc0      	subs	r0, r0, r7
 8003402:	2802      	cmp	r0, #2
 8003404:	d9f5      	bls.n	80033f2 <HAL_RCC_OscConfig+0x40a>
 8003406:	e665      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003408:	2e0c      	cmp	r6, #12
 800340a:	d043      	beq.n	8003494 <HAL_RCC_OscConfig+0x4ac>
 800340c:	4a35      	ldr	r2, [pc, #212]	; (80034e4 <HAL_RCC_OscConfig+0x4fc>)
 800340e:	2b02      	cmp	r3, #2
 8003410:	d12e      	bne.n	8003470 <HAL_RCC_OscConfig+0x488>
 8003412:	6823      	ldr	r3, [r4, #0]
 8003414:	2780      	movs	r7, #128	; 0x80
 8003416:	4013      	ands	r3, r2
 8003418:	6023      	str	r3, [r4, #0]
 800341a:	f7fe ff75 	bl	8002308 <HAL_GetTick>
 800341e:	0006      	movs	r6, r0
 8003420:	04bf      	lsls	r7, r7, #18
 8003422:	6823      	ldr	r3, [r4, #0]
 8003424:	423b      	tst	r3, r7
 8003426:	d11d      	bne.n	8003464 <HAL_RCC_OscConfig+0x47c>
 8003428:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800342a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800342c:	68e2      	ldr	r2, [r4, #12]
 800342e:	430b      	orrs	r3, r1
 8003430:	492d      	ldr	r1, [pc, #180]	; (80034e8 <HAL_RCC_OscConfig+0x500>)
 8003432:	2680      	movs	r6, #128	; 0x80
 8003434:	400a      	ands	r2, r1
 8003436:	4313      	orrs	r3, r2
 8003438:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 800343a:	04b6      	lsls	r6, r6, #18
 800343c:	4313      	orrs	r3, r2
 800343e:	60e3      	str	r3, [r4, #12]
 8003440:	2380      	movs	r3, #128	; 0x80
 8003442:	6822      	ldr	r2, [r4, #0]
 8003444:	045b      	lsls	r3, r3, #17
 8003446:	4313      	orrs	r3, r2
 8003448:	6023      	str	r3, [r4, #0]
 800344a:	f7fe ff5d 	bl	8002308 <HAL_GetTick>
 800344e:	0005      	movs	r5, r0
 8003450:	6823      	ldr	r3, [r4, #0]
 8003452:	4233      	tst	r3, r6
 8003454:	d000      	beq.n	8003458 <HAL_RCC_OscConfig+0x470>
 8003456:	e619      	b.n	800308c <HAL_RCC_OscConfig+0xa4>
 8003458:	f7fe ff56 	bl	8002308 <HAL_GetTick>
 800345c:	1b40      	subs	r0, r0, r5
 800345e:	2802      	cmp	r0, #2
 8003460:	d9f6      	bls.n	8003450 <HAL_RCC_OscConfig+0x468>
 8003462:	e637      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003464:	f7fe ff50 	bl	8002308 <HAL_GetTick>
 8003468:	1b80      	subs	r0, r0, r6
 800346a:	2802      	cmp	r0, #2
 800346c:	d9d9      	bls.n	8003422 <HAL_RCC_OscConfig+0x43a>
 800346e:	e631      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003470:	6823      	ldr	r3, [r4, #0]
 8003472:	2680      	movs	r6, #128	; 0x80
 8003474:	4013      	ands	r3, r2
 8003476:	6023      	str	r3, [r4, #0]
 8003478:	f7fe ff46 	bl	8002308 <HAL_GetTick>
 800347c:	0005      	movs	r5, r0
 800347e:	04b6      	lsls	r6, r6, #18
 8003480:	6823      	ldr	r3, [r4, #0]
 8003482:	4233      	tst	r3, r6
 8003484:	d100      	bne.n	8003488 <HAL_RCC_OscConfig+0x4a0>
 8003486:	e601      	b.n	800308c <HAL_RCC_OscConfig+0xa4>
 8003488:	f7fe ff3e 	bl	8002308 <HAL_GetTick>
 800348c:	1b40      	subs	r0, r0, r5
 800348e:	2802      	cmp	r0, #2
 8003490:	d9f6      	bls.n	8003480 <HAL_RCC_OscConfig+0x498>
 8003492:	e61f      	b.n	80030d4 <HAL_RCC_OscConfig+0xec>
 8003494:	0018      	movs	r0, r3
 8003496:	2b01      	cmp	r3, #1
 8003498:	d100      	bne.n	800349c <HAL_RCC_OscConfig+0x4b4>
 800349a:	e61c      	b.n	80030d6 <HAL_RCC_OscConfig+0xee>
 800349c:	2280      	movs	r2, #128	; 0x80
 800349e:	68e3      	ldr	r3, [r4, #12]
 80034a0:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80034a2:	0252      	lsls	r2, r2, #9
 80034a4:	401a      	ands	r2, r3
 80034a6:	428a      	cmp	r2, r1
 80034a8:	d000      	beq.n	80034ac <HAL_RCC_OscConfig+0x4c4>
 80034aa:	e5fd      	b.n	80030a8 <HAL_RCC_OscConfig+0xc0>
 80034ac:	22f0      	movs	r2, #240	; 0xf0
 80034ae:	6b29      	ldr	r1, [r5, #48]	; 0x30
 80034b0:	0392      	lsls	r2, r2, #14
 80034b2:	401a      	ands	r2, r3
 80034b4:	428a      	cmp	r2, r1
 80034b6:	d000      	beq.n	80034ba <HAL_RCC_OscConfig+0x4d2>
 80034b8:	e5f6      	b.n	80030a8 <HAL_RCC_OscConfig+0xc0>
 80034ba:	22c0      	movs	r2, #192	; 0xc0
 80034bc:	0412      	lsls	r2, r2, #16
 80034be:	4013      	ands	r3, r2
 80034c0:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 80034c2:	4293      	cmp	r3, r2
 80034c4:	d100      	bne.n	80034c8 <HAL_RCC_OscConfig+0x4e0>
 80034c6:	e5e1      	b.n	800308c <HAL_RCC_OscConfig+0xa4>
 80034c8:	e5ee      	b.n	80030a8 <HAL_RCC_OscConfig+0xc0>
 80034ca:	46c0      	nop			; (mov r8, r8)
 80034cc:	fffffeff 	.word	0xfffffeff
 80034d0:	fffffbff 	.word	0xfffffbff
 80034d4:	00001388 	.word	0x00001388
 80034d8:	efffffff 	.word	0xefffffff
 80034dc:	40010000 	.word	0x40010000
 80034e0:	ffffdfff 	.word	0xffffdfff
 80034e4:	feffffff 	.word	0xfeffffff
 80034e8:	ff02ffff 	.word	0xff02ffff

080034ec <HAL_RCC_ClockConfig>:
 80034ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80034ee:	1e04      	subs	r4, r0, #0
 80034f0:	9101      	str	r1, [sp, #4]
 80034f2:	d101      	bne.n	80034f8 <HAL_RCC_ClockConfig+0xc>
 80034f4:	2001      	movs	r0, #1
 80034f6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80034f8:	2501      	movs	r5, #1
 80034fa:	4e5b      	ldr	r6, [pc, #364]	; (8003668 <HAL_RCC_ClockConfig+0x17c>)
 80034fc:	9a01      	ldr	r2, [sp, #4]
 80034fe:	6833      	ldr	r3, [r6, #0]
 8003500:	402b      	ands	r3, r5
 8003502:	4293      	cmp	r3, r2
 8003504:	d331      	bcc.n	800356a <HAL_RCC_ClockConfig+0x7e>
 8003506:	6822      	ldr	r2, [r4, #0]
 8003508:	0793      	lsls	r3, r2, #30
 800350a:	d443      	bmi.n	8003594 <HAL_RCC_ClockConfig+0xa8>
 800350c:	07d3      	lsls	r3, r2, #31
 800350e:	d449      	bmi.n	80035a4 <HAL_RCC_ClockConfig+0xb8>
 8003510:	2501      	movs	r5, #1
 8003512:	6833      	ldr	r3, [r6, #0]
 8003514:	9a01      	ldr	r2, [sp, #4]
 8003516:	402b      	ands	r3, r5
 8003518:	4293      	cmp	r3, r2
 800351a:	d909      	bls.n	8003530 <HAL_RCC_ClockConfig+0x44>
 800351c:	6833      	ldr	r3, [r6, #0]
 800351e:	43ab      	bics	r3, r5
 8003520:	6033      	str	r3, [r6, #0]
 8003522:	f7fe fef1 	bl	8002308 <HAL_GetTick>
 8003526:	0007      	movs	r7, r0
 8003528:	6833      	ldr	r3, [r6, #0]
 800352a:	422b      	tst	r3, r5
 800352c:	d000      	beq.n	8003530 <HAL_RCC_ClockConfig+0x44>
 800352e:	e08c      	b.n	800364a <HAL_RCC_ClockConfig+0x15e>
 8003530:	6822      	ldr	r2, [r4, #0]
 8003532:	4d4e      	ldr	r5, [pc, #312]	; (800366c <HAL_RCC_ClockConfig+0x180>)
 8003534:	0753      	lsls	r3, r2, #29
 8003536:	d500      	bpl.n	800353a <HAL_RCC_ClockConfig+0x4e>
 8003538:	e08f      	b.n	800365a <HAL_RCC_ClockConfig+0x16e>
 800353a:	0713      	lsls	r3, r2, #28
 800353c:	d506      	bpl.n	800354c <HAL_RCC_ClockConfig+0x60>
 800353e:	68e9      	ldr	r1, [r5, #12]
 8003540:	6923      	ldr	r3, [r4, #16]
 8003542:	4a4b      	ldr	r2, [pc, #300]	; (8003670 <HAL_RCC_ClockConfig+0x184>)
 8003544:	00db      	lsls	r3, r3, #3
 8003546:	400a      	ands	r2, r1
 8003548:	4313      	orrs	r3, r2
 800354a:	60eb      	str	r3, [r5, #12]
 800354c:	f7ff fd04 	bl	8002f58 <HAL_RCC_GetSysClockFreq>
 8003550:	68eb      	ldr	r3, [r5, #12]
 8003552:	4a48      	ldr	r2, [pc, #288]	; (8003674 <HAL_RCC_ClockConfig+0x188>)
 8003554:	061b      	lsls	r3, r3, #24
 8003556:	0f1b      	lsrs	r3, r3, #28
 8003558:	5cd3      	ldrb	r3, [r2, r3]
 800355a:	40d8      	lsrs	r0, r3
 800355c:	4b46      	ldr	r3, [pc, #280]	; (8003678 <HAL_RCC_ClockConfig+0x18c>)
 800355e:	6018      	str	r0, [r3, #0]
 8003560:	4b46      	ldr	r3, [pc, #280]	; (800367c <HAL_RCC_ClockConfig+0x190>)
 8003562:	6818      	ldr	r0, [r3, #0]
 8003564:	f7fe fe8c 	bl	8002280 <HAL_InitTick>
 8003568:	e7c5      	b.n	80034f6 <HAL_RCC_ClockConfig+0xa>
 800356a:	6833      	ldr	r3, [r6, #0]
 800356c:	9a01      	ldr	r2, [sp, #4]
 800356e:	43ab      	bics	r3, r5
 8003570:	4313      	orrs	r3, r2
 8003572:	6033      	str	r3, [r6, #0]
 8003574:	f7fe fec8 	bl	8002308 <HAL_GetTick>
 8003578:	0007      	movs	r7, r0
 800357a:	6833      	ldr	r3, [r6, #0]
 800357c:	9a01      	ldr	r2, [sp, #4]
 800357e:	402b      	ands	r3, r5
 8003580:	4293      	cmp	r3, r2
 8003582:	d0c0      	beq.n	8003506 <HAL_RCC_ClockConfig+0x1a>
 8003584:	f7fe fec0 	bl	8002308 <HAL_GetTick>
 8003588:	4b3d      	ldr	r3, [pc, #244]	; (8003680 <HAL_RCC_ClockConfig+0x194>)
 800358a:	1bc0      	subs	r0, r0, r7
 800358c:	4298      	cmp	r0, r3
 800358e:	d9f4      	bls.n	800357a <HAL_RCC_ClockConfig+0x8e>
 8003590:	2003      	movs	r0, #3
 8003592:	e7b0      	b.n	80034f6 <HAL_RCC_ClockConfig+0xa>
 8003594:	20f0      	movs	r0, #240	; 0xf0
 8003596:	4935      	ldr	r1, [pc, #212]	; (800366c <HAL_RCC_ClockConfig+0x180>)
 8003598:	68cb      	ldr	r3, [r1, #12]
 800359a:	4383      	bics	r3, r0
 800359c:	68a0      	ldr	r0, [r4, #8]
 800359e:	4303      	orrs	r3, r0
 80035a0:	60cb      	str	r3, [r1, #12]
 80035a2:	e7b3      	b.n	800350c <HAL_RCC_ClockConfig+0x20>
 80035a4:	4d31      	ldr	r5, [pc, #196]	; (800366c <HAL_RCC_ClockConfig+0x180>)
 80035a6:	6862      	ldr	r2, [r4, #4]
 80035a8:	682b      	ldr	r3, [r5, #0]
 80035aa:	2a02      	cmp	r2, #2
 80035ac:	d118      	bne.n	80035e0 <HAL_RCC_ClockConfig+0xf4>
 80035ae:	039b      	lsls	r3, r3, #14
 80035b0:	d5a0      	bpl.n	80034f4 <HAL_RCC_ClockConfig+0x8>
 80035b2:	2103      	movs	r1, #3
 80035b4:	68eb      	ldr	r3, [r5, #12]
 80035b6:	438b      	bics	r3, r1
 80035b8:	4313      	orrs	r3, r2
 80035ba:	60eb      	str	r3, [r5, #12]
 80035bc:	f7fe fea4 	bl	8002308 <HAL_GetTick>
 80035c0:	6863      	ldr	r3, [r4, #4]
 80035c2:	0007      	movs	r7, r0
 80035c4:	2b02      	cmp	r3, #2
 80035c6:	d118      	bne.n	80035fa <HAL_RCC_ClockConfig+0x10e>
 80035c8:	220c      	movs	r2, #12
 80035ca:	68eb      	ldr	r3, [r5, #12]
 80035cc:	4013      	ands	r3, r2
 80035ce:	2b08      	cmp	r3, #8
 80035d0:	d09e      	beq.n	8003510 <HAL_RCC_ClockConfig+0x24>
 80035d2:	f7fe fe99 	bl	8002308 <HAL_GetTick>
 80035d6:	4b2a      	ldr	r3, [pc, #168]	; (8003680 <HAL_RCC_ClockConfig+0x194>)
 80035d8:	1bc0      	subs	r0, r0, r7
 80035da:	4298      	cmp	r0, r3
 80035dc:	d9f4      	bls.n	80035c8 <HAL_RCC_ClockConfig+0xdc>
 80035de:	e7d7      	b.n	8003590 <HAL_RCC_ClockConfig+0xa4>
 80035e0:	2a03      	cmp	r2, #3
 80035e2:	d102      	bne.n	80035ea <HAL_RCC_ClockConfig+0xfe>
 80035e4:	019b      	lsls	r3, r3, #6
 80035e6:	d4e4      	bmi.n	80035b2 <HAL_RCC_ClockConfig+0xc6>
 80035e8:	e784      	b.n	80034f4 <HAL_RCC_ClockConfig+0x8>
 80035ea:	2a01      	cmp	r2, #1
 80035ec:	d102      	bne.n	80035f4 <HAL_RCC_ClockConfig+0x108>
 80035ee:	075b      	lsls	r3, r3, #29
 80035f0:	d4df      	bmi.n	80035b2 <HAL_RCC_ClockConfig+0xc6>
 80035f2:	e77f      	b.n	80034f4 <HAL_RCC_ClockConfig+0x8>
 80035f4:	059b      	lsls	r3, r3, #22
 80035f6:	d4dc      	bmi.n	80035b2 <HAL_RCC_ClockConfig+0xc6>
 80035f8:	e77c      	b.n	80034f4 <HAL_RCC_ClockConfig+0x8>
 80035fa:	2b03      	cmp	r3, #3
 80035fc:	d10b      	bne.n	8003616 <HAL_RCC_ClockConfig+0x12a>
 80035fe:	220c      	movs	r2, #12
 8003600:	68eb      	ldr	r3, [r5, #12]
 8003602:	4013      	ands	r3, r2
 8003604:	4293      	cmp	r3, r2
 8003606:	d083      	beq.n	8003510 <HAL_RCC_ClockConfig+0x24>
 8003608:	f7fe fe7e 	bl	8002308 <HAL_GetTick>
 800360c:	4b1c      	ldr	r3, [pc, #112]	; (8003680 <HAL_RCC_ClockConfig+0x194>)
 800360e:	1bc0      	subs	r0, r0, r7
 8003610:	4298      	cmp	r0, r3
 8003612:	d9f4      	bls.n	80035fe <HAL_RCC_ClockConfig+0x112>
 8003614:	e7bc      	b.n	8003590 <HAL_RCC_ClockConfig+0xa4>
 8003616:	2b01      	cmp	r3, #1
 8003618:	d011      	beq.n	800363e <HAL_RCC_ClockConfig+0x152>
 800361a:	220c      	movs	r2, #12
 800361c:	68eb      	ldr	r3, [r5, #12]
 800361e:	4213      	tst	r3, r2
 8003620:	d100      	bne.n	8003624 <HAL_RCC_ClockConfig+0x138>
 8003622:	e775      	b.n	8003510 <HAL_RCC_ClockConfig+0x24>
 8003624:	f7fe fe70 	bl	8002308 <HAL_GetTick>
 8003628:	4b15      	ldr	r3, [pc, #84]	; (8003680 <HAL_RCC_ClockConfig+0x194>)
 800362a:	1bc0      	subs	r0, r0, r7
 800362c:	4298      	cmp	r0, r3
 800362e:	d9f4      	bls.n	800361a <HAL_RCC_ClockConfig+0x12e>
 8003630:	e7ae      	b.n	8003590 <HAL_RCC_ClockConfig+0xa4>
 8003632:	f7fe fe69 	bl	8002308 <HAL_GetTick>
 8003636:	4b12      	ldr	r3, [pc, #72]	; (8003680 <HAL_RCC_ClockConfig+0x194>)
 8003638:	1bc0      	subs	r0, r0, r7
 800363a:	4298      	cmp	r0, r3
 800363c:	d8a8      	bhi.n	8003590 <HAL_RCC_ClockConfig+0xa4>
 800363e:	220c      	movs	r2, #12
 8003640:	68eb      	ldr	r3, [r5, #12]
 8003642:	4013      	ands	r3, r2
 8003644:	2b04      	cmp	r3, #4
 8003646:	d1f4      	bne.n	8003632 <HAL_RCC_ClockConfig+0x146>
 8003648:	e762      	b.n	8003510 <HAL_RCC_ClockConfig+0x24>
 800364a:	f7fe fe5d 	bl	8002308 <HAL_GetTick>
 800364e:	4b0c      	ldr	r3, [pc, #48]	; (8003680 <HAL_RCC_ClockConfig+0x194>)
 8003650:	1bc0      	subs	r0, r0, r7
 8003652:	4298      	cmp	r0, r3
 8003654:	d800      	bhi.n	8003658 <HAL_RCC_ClockConfig+0x16c>
 8003656:	e767      	b.n	8003528 <HAL_RCC_ClockConfig+0x3c>
 8003658:	e79a      	b.n	8003590 <HAL_RCC_ClockConfig+0xa4>
 800365a:	68eb      	ldr	r3, [r5, #12]
 800365c:	4909      	ldr	r1, [pc, #36]	; (8003684 <HAL_RCC_ClockConfig+0x198>)
 800365e:	400b      	ands	r3, r1
 8003660:	68e1      	ldr	r1, [r4, #12]
 8003662:	430b      	orrs	r3, r1
 8003664:	60eb      	str	r3, [r5, #12]
 8003666:	e768      	b.n	800353a <HAL_RCC_ClockConfig+0x4e>
 8003668:	40022000 	.word	0x40022000
 800366c:	40021000 	.word	0x40021000
 8003670:	ffffc7ff 	.word	0xffffc7ff
 8003674:	0800529a 	.word	0x0800529a
 8003678:	20000190 	.word	0x20000190
 800367c:	20000198 	.word	0x20000198
 8003680:	00001388 	.word	0x00001388
 8003684:	fffff8ff 	.word	0xfffff8ff

08003688 <HAL_RCC_GetPCLK1Freq>:
 8003688:	4b04      	ldr	r3, [pc, #16]	; (800369c <HAL_RCC_GetPCLK1Freq+0x14>)
 800368a:	4a05      	ldr	r2, [pc, #20]	; (80036a0 <HAL_RCC_GetPCLK1Freq+0x18>)
 800368c:	68db      	ldr	r3, [r3, #12]
 800368e:	055b      	lsls	r3, r3, #21
 8003690:	0f5b      	lsrs	r3, r3, #29
 8003692:	5cd3      	ldrb	r3, [r2, r3]
 8003694:	4a03      	ldr	r2, [pc, #12]	; (80036a4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8003696:	6810      	ldr	r0, [r2, #0]
 8003698:	40d8      	lsrs	r0, r3
 800369a:	4770      	bx	lr
 800369c:	40021000 	.word	0x40021000
 80036a0:	080052aa 	.word	0x080052aa
 80036a4:	20000190 	.word	0x20000190

080036a8 <HAL_RCC_GetPCLK2Freq>:
 80036a8:	4b04      	ldr	r3, [pc, #16]	; (80036bc <HAL_RCC_GetPCLK2Freq+0x14>)
 80036aa:	4a05      	ldr	r2, [pc, #20]	; (80036c0 <HAL_RCC_GetPCLK2Freq+0x18>)
 80036ac:	68db      	ldr	r3, [r3, #12]
 80036ae:	049b      	lsls	r3, r3, #18
 80036b0:	0f5b      	lsrs	r3, r3, #29
 80036b2:	5cd3      	ldrb	r3, [r2, r3]
 80036b4:	4a03      	ldr	r2, [pc, #12]	; (80036c4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80036b6:	6810      	ldr	r0, [r2, #0]
 80036b8:	40d8      	lsrs	r0, r3
 80036ba:	4770      	bx	lr
 80036bc:	40021000 	.word	0x40021000
 80036c0:	080052aa 	.word	0x080052aa
 80036c4:	20000190 	.word	0x20000190

080036c8 <HAL_RCCEx_PeriphCLKConfig>:
 80036c8:	6803      	ldr	r3, [r0, #0]
 80036ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036cc:	0005      	movs	r5, r0
 80036ce:	069b      	lsls	r3, r3, #26
 80036d0:	d52d      	bpl.n	800372e <HAL_RCCEx_PeriphCLKConfig+0x66>
 80036d2:	2380      	movs	r3, #128	; 0x80
 80036d4:	2100      	movs	r1, #0
 80036d6:	4c5c      	ldr	r4, [pc, #368]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 80036d8:	055b      	lsls	r3, r3, #21
 80036da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80036dc:	9100      	str	r1, [sp, #0]
 80036de:	421a      	tst	r2, r3
 80036e0:	d104      	bne.n	80036ec <HAL_RCCEx_PeriphCLKConfig+0x24>
 80036e2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80036e4:	4313      	orrs	r3, r2
 80036e6:	63a3      	str	r3, [r4, #56]	; 0x38
 80036e8:	2301      	movs	r3, #1
 80036ea:	9300      	str	r3, [sp, #0]
 80036ec:	2780      	movs	r7, #128	; 0x80
 80036ee:	4e57      	ldr	r6, [pc, #348]	; (800384c <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80036f0:	007f      	lsls	r7, r7, #1
 80036f2:	6833      	ldr	r3, [r6, #0]
 80036f4:	423b      	tst	r3, r7
 80036f6:	d053      	beq.n	80037a0 <HAL_RCCEx_PeriphCLKConfig+0xd8>
 80036f8:	686b      	ldr	r3, [r5, #4]
 80036fa:	21c0      	movs	r1, #192	; 0xc0
 80036fc:	0018      	movs	r0, r3
 80036fe:	6822      	ldr	r2, [r4, #0]
 8003700:	0389      	lsls	r1, r1, #14
 8003702:	4008      	ands	r0, r1
 8003704:	400a      	ands	r2, r1
 8003706:	4290      	cmp	r0, r2
 8003708:	d15b      	bne.n	80037c2 <HAL_RCCEx_PeriphCLKConfig+0xfa>
 800370a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800370c:	22c0      	movs	r2, #192	; 0xc0
 800370e:	0008      	movs	r0, r1
 8003710:	0292      	lsls	r2, r2, #10
 8003712:	4010      	ands	r0, r2
 8003714:	4211      	tst	r1, r2
 8003716:	d15f      	bne.n	80037d8 <HAL_RCCEx_PeriphCLKConfig+0x110>
 8003718:	682b      	ldr	r3, [r5, #0]
 800371a:	069b      	lsls	r3, r3, #26
 800371c:	d500      	bpl.n	8003720 <HAL_RCCEx_PeriphCLKConfig+0x58>
 800371e:	e070      	b.n	8003802 <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8003720:	9b00      	ldr	r3, [sp, #0]
 8003722:	2b01      	cmp	r3, #1
 8003724:	d103      	bne.n	800372e <HAL_RCCEx_PeriphCLKConfig+0x66>
 8003726:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003728:	4a49      	ldr	r2, [pc, #292]	; (8003850 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 800372a:	4013      	ands	r3, r2
 800372c:	63a3      	str	r3, [r4, #56]	; 0x38
 800372e:	682b      	ldr	r3, [r5, #0]
 8003730:	07da      	lsls	r2, r3, #31
 8003732:	d506      	bpl.n	8003742 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003734:	2003      	movs	r0, #3
 8003736:	4944      	ldr	r1, [pc, #272]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 8003738:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800373a:	4382      	bics	r2, r0
 800373c:	68a8      	ldr	r0, [r5, #8]
 800373e:	4302      	orrs	r2, r0
 8003740:	64ca      	str	r2, [r1, #76]	; 0x4c
 8003742:	079a      	lsls	r2, r3, #30
 8003744:	d506      	bpl.n	8003754 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8003746:	200c      	movs	r0, #12
 8003748:	493f      	ldr	r1, [pc, #252]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800374a:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800374c:	4382      	bics	r2, r0
 800374e:	68e8      	ldr	r0, [r5, #12]
 8003750:	4302      	orrs	r2, r0
 8003752:	64ca      	str	r2, [r1, #76]	; 0x4c
 8003754:	075a      	lsls	r2, r3, #29
 8003756:	d506      	bpl.n	8003766 <HAL_RCCEx_PeriphCLKConfig+0x9e>
 8003758:	493b      	ldr	r1, [pc, #236]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800375a:	483e      	ldr	r0, [pc, #248]	; (8003854 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 800375c:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800375e:	4002      	ands	r2, r0
 8003760:	6928      	ldr	r0, [r5, #16]
 8003762:	4302      	orrs	r2, r0
 8003764:	64ca      	str	r2, [r1, #76]	; 0x4c
 8003766:	071a      	lsls	r2, r3, #28
 8003768:	d506      	bpl.n	8003778 <HAL_RCCEx_PeriphCLKConfig+0xb0>
 800376a:	4937      	ldr	r1, [pc, #220]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800376c:	483a      	ldr	r0, [pc, #232]	; (8003858 <HAL_RCCEx_PeriphCLKConfig+0x190>)
 800376e:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003770:	4002      	ands	r2, r0
 8003772:	6968      	ldr	r0, [r5, #20]
 8003774:	4302      	orrs	r2, r0
 8003776:	64ca      	str	r2, [r1, #76]	; 0x4c
 8003778:	065a      	lsls	r2, r3, #25
 800377a:	d506      	bpl.n	800378a <HAL_RCCEx_PeriphCLKConfig+0xc2>
 800377c:	4932      	ldr	r1, [pc, #200]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800377e:	4837      	ldr	r0, [pc, #220]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x194>)
 8003780:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003782:	4002      	ands	r2, r0
 8003784:	69e8      	ldr	r0, [r5, #28]
 8003786:	4302      	orrs	r2, r0
 8003788:	64ca      	str	r2, [r1, #76]	; 0x4c
 800378a:	2000      	movs	r0, #0
 800378c:	061b      	lsls	r3, r3, #24
 800378e:	d517      	bpl.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8003790:	4a2d      	ldr	r2, [pc, #180]	; (8003848 <HAL_RCCEx_PeriphCLKConfig+0x180>)
 8003792:	4933      	ldr	r1, [pc, #204]	; (8003860 <HAL_RCCEx_PeriphCLKConfig+0x198>)
 8003794:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8003796:	400b      	ands	r3, r1
 8003798:	69a9      	ldr	r1, [r5, #24]
 800379a:	430b      	orrs	r3, r1
 800379c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800379e:	e00f      	b.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80037a0:	6833      	ldr	r3, [r6, #0]
 80037a2:	433b      	orrs	r3, r7
 80037a4:	6033      	str	r3, [r6, #0]
 80037a6:	f7fe fdaf 	bl	8002308 <HAL_GetTick>
 80037aa:	9001      	str	r0, [sp, #4]
 80037ac:	6833      	ldr	r3, [r6, #0]
 80037ae:	423b      	tst	r3, r7
 80037b0:	d1a2      	bne.n	80036f8 <HAL_RCCEx_PeriphCLKConfig+0x30>
 80037b2:	f7fe fda9 	bl	8002308 <HAL_GetTick>
 80037b6:	9b01      	ldr	r3, [sp, #4]
 80037b8:	1ac0      	subs	r0, r0, r3
 80037ba:	2864      	cmp	r0, #100	; 0x64
 80037bc:	d9f6      	bls.n	80037ac <HAL_RCCEx_PeriphCLKConfig+0xe4>
 80037be:	2003      	movs	r0, #3
 80037c0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80037c2:	22c0      	movs	r2, #192	; 0xc0
 80037c4:	0019      	movs	r1, r3
 80037c6:	0292      	lsls	r2, r2, #10
 80037c8:	4011      	ands	r1, r2
 80037ca:	4291      	cmp	r1, r2
 80037cc:	d19d      	bne.n	800370a <HAL_RCCEx_PeriphCLKConfig+0x42>
 80037ce:	6822      	ldr	r2, [r4, #0]
 80037d0:	2001      	movs	r0, #1
 80037d2:	0392      	lsls	r2, r2, #14
 80037d4:	d599      	bpl.n	800370a <HAL_RCCEx_PeriphCLKConfig+0x42>
 80037d6:	e7f3      	b.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80037d8:	4013      	ands	r3, r2
 80037da:	4283      	cmp	r3, r0
 80037dc:	d09c      	beq.n	8003718 <HAL_RCCEx_PeriphCLKConfig+0x50>
 80037de:	682b      	ldr	r3, [r5, #0]
 80037e0:	069b      	lsls	r3, r3, #26
 80037e2:	d59d      	bpl.n	8003720 <HAL_RCCEx_PeriphCLKConfig+0x58>
 80037e4:	2280      	movs	r2, #128	; 0x80
 80037e6:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80037e8:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80037ea:	0312      	lsls	r2, r2, #12
 80037ec:	4302      	orrs	r2, r0
 80037ee:	6522      	str	r2, [r4, #80]	; 0x50
 80037f0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80037f2:	4b1c      	ldr	r3, [pc, #112]	; (8003864 <HAL_RCCEx_PeriphCLKConfig+0x19c>)
 80037f4:	481c      	ldr	r0, [pc, #112]	; (8003868 <HAL_RCCEx_PeriphCLKConfig+0x1a0>)
 80037f6:	400b      	ands	r3, r1
 80037f8:	4002      	ands	r2, r0
 80037fa:	6522      	str	r2, [r4, #80]	; 0x50
 80037fc:	6523      	str	r3, [r4, #80]	; 0x50
 80037fe:	05cb      	lsls	r3, r1, #23
 8003800:	d412      	bmi.n	8003828 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8003802:	6869      	ldr	r1, [r5, #4]
 8003804:	23c0      	movs	r3, #192	; 0xc0
 8003806:	000a      	movs	r2, r1
 8003808:	029b      	lsls	r3, r3, #10
 800380a:	401a      	ands	r2, r3
 800380c:	429a      	cmp	r2, r3
 800380e:	d107      	bne.n	8003820 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8003810:	6823      	ldr	r3, [r4, #0]
 8003812:	4816      	ldr	r0, [pc, #88]	; (800386c <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003814:	4003      	ands	r3, r0
 8003816:	20c0      	movs	r0, #192	; 0xc0
 8003818:	0380      	lsls	r0, r0, #14
 800381a:	4001      	ands	r1, r0
 800381c:	430b      	orrs	r3, r1
 800381e:	6023      	str	r3, [r4, #0]
 8003820:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003822:	431a      	orrs	r2, r3
 8003824:	6522      	str	r2, [r4, #80]	; 0x50
 8003826:	e77b      	b.n	8003720 <HAL_RCCEx_PeriphCLKConfig+0x58>
 8003828:	f7fe fd6e 	bl	8002308 <HAL_GetTick>
 800382c:	2780      	movs	r7, #128	; 0x80
 800382e:	0006      	movs	r6, r0
 8003830:	00bf      	lsls	r7, r7, #2
 8003832:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003834:	423b      	tst	r3, r7
 8003836:	d000      	beq.n	800383a <HAL_RCCEx_PeriphCLKConfig+0x172>
 8003838:	e76e      	b.n	8003718 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800383a:	f7fe fd65 	bl	8002308 <HAL_GetTick>
 800383e:	4b0c      	ldr	r3, [pc, #48]	; (8003870 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003840:	1b80      	subs	r0, r0, r6
 8003842:	4298      	cmp	r0, r3
 8003844:	d9f5      	bls.n	8003832 <HAL_RCCEx_PeriphCLKConfig+0x16a>
 8003846:	e7ba      	b.n	80037be <HAL_RCCEx_PeriphCLKConfig+0xf6>
 8003848:	40021000 	.word	0x40021000
 800384c:	40007000 	.word	0x40007000
 8003850:	efffffff 	.word	0xefffffff
 8003854:	fffff3ff 	.word	0xfffff3ff
 8003858:	ffffcfff 	.word	0xffffcfff
 800385c:	fbffffff 	.word	0xfbffffff
 8003860:	fff3ffff 	.word	0xfff3ffff
 8003864:	fffcffff 	.word	0xfffcffff
 8003868:	fff7ffff 	.word	0xfff7ffff
 800386c:	ffcfffff 	.word	0xffcfffff
 8003870:	00001388 	.word	0x00001388

08003874 <TIM_Base_SetConfig>:
 8003874:	2280      	movs	r2, #128	; 0x80
 8003876:	b510      	push	{r4, lr}
 8003878:	6803      	ldr	r3, [r0, #0]
 800387a:	05d2      	lsls	r2, r2, #23
 800387c:	4290      	cmp	r0, r2
 800387e:	d005      	beq.n	800388c <TIM_Base_SetConfig+0x18>
 8003880:	4c10      	ldr	r4, [pc, #64]	; (80038c4 <TIM_Base_SetConfig+0x50>)
 8003882:	42a0      	cmp	r0, r4
 8003884:	d002      	beq.n	800388c <TIM_Base_SetConfig+0x18>
 8003886:	4c10      	ldr	r4, [pc, #64]	; (80038c8 <TIM_Base_SetConfig+0x54>)
 8003888:	42a0      	cmp	r0, r4
 800388a:	d10f      	bne.n	80038ac <TIM_Base_SetConfig+0x38>
 800388c:	2470      	movs	r4, #112	; 0x70
 800388e:	43a3      	bics	r3, r4
 8003890:	684c      	ldr	r4, [r1, #4]
 8003892:	4323      	orrs	r3, r4
 8003894:	4290      	cmp	r0, r2
 8003896:	d005      	beq.n	80038a4 <TIM_Base_SetConfig+0x30>
 8003898:	4a0a      	ldr	r2, [pc, #40]	; (80038c4 <TIM_Base_SetConfig+0x50>)
 800389a:	4290      	cmp	r0, r2
 800389c:	d002      	beq.n	80038a4 <TIM_Base_SetConfig+0x30>
 800389e:	4a0a      	ldr	r2, [pc, #40]	; (80038c8 <TIM_Base_SetConfig+0x54>)
 80038a0:	4290      	cmp	r0, r2
 80038a2:	d103      	bne.n	80038ac <TIM_Base_SetConfig+0x38>
 80038a4:	4a09      	ldr	r2, [pc, #36]	; (80038cc <TIM_Base_SetConfig+0x58>)
 80038a6:	4013      	ands	r3, r2
 80038a8:	68ca      	ldr	r2, [r1, #12]
 80038aa:	4313      	orrs	r3, r2
 80038ac:	2280      	movs	r2, #128	; 0x80
 80038ae:	4393      	bics	r3, r2
 80038b0:	690a      	ldr	r2, [r1, #16]
 80038b2:	4313      	orrs	r3, r2
 80038b4:	6003      	str	r3, [r0, #0]
 80038b6:	688b      	ldr	r3, [r1, #8]
 80038b8:	62c3      	str	r3, [r0, #44]	; 0x2c
 80038ba:	680b      	ldr	r3, [r1, #0]
 80038bc:	6283      	str	r3, [r0, #40]	; 0x28
 80038be:	2301      	movs	r3, #1
 80038c0:	6143      	str	r3, [r0, #20]
 80038c2:	bd10      	pop	{r4, pc}
 80038c4:	40010800 	.word	0x40010800
 80038c8:	40011400 	.word	0x40011400
 80038cc:	fffffcff 	.word	0xfffffcff

080038d0 <TIM_OC1_SetConfig>:
 80038d0:	2201      	movs	r2, #1
 80038d2:	b530      	push	{r4, r5, lr}
 80038d4:	2573      	movs	r5, #115	; 0x73
 80038d6:	6a03      	ldr	r3, [r0, #32]
 80038d8:	4393      	bics	r3, r2
 80038da:	6203      	str	r3, [r0, #32]
 80038dc:	6a03      	ldr	r3, [r0, #32]
 80038de:	6844      	ldr	r4, [r0, #4]
 80038e0:	6982      	ldr	r2, [r0, #24]
 80038e2:	43aa      	bics	r2, r5
 80038e4:	680d      	ldr	r5, [r1, #0]
 80038e6:	432a      	orrs	r2, r5
 80038e8:	2502      	movs	r5, #2
 80038ea:	43ab      	bics	r3, r5
 80038ec:	688d      	ldr	r5, [r1, #8]
 80038ee:	6044      	str	r4, [r0, #4]
 80038f0:	6182      	str	r2, [r0, #24]
 80038f2:	684a      	ldr	r2, [r1, #4]
 80038f4:	432b      	orrs	r3, r5
 80038f6:	6342      	str	r2, [r0, #52]	; 0x34
 80038f8:	6203      	str	r3, [r0, #32]
 80038fa:	bd30      	pop	{r4, r5, pc}

080038fc <TIM_OC2_SetConfig>:
 80038fc:	2210      	movs	r2, #16
 80038fe:	6a03      	ldr	r3, [r0, #32]
 8003900:	b530      	push	{r4, r5, lr}
 8003902:	4393      	bics	r3, r2
 8003904:	6203      	str	r3, [r0, #32]
 8003906:	6a03      	ldr	r3, [r0, #32]
 8003908:	4c09      	ldr	r4, [pc, #36]	; (8003930 <TIM_OC2_SetConfig+0x34>)
 800390a:	6845      	ldr	r5, [r0, #4]
 800390c:	6982      	ldr	r2, [r0, #24]
 800390e:	4014      	ands	r4, r2
 8003910:	680a      	ldr	r2, [r1, #0]
 8003912:	0212      	lsls	r2, r2, #8
 8003914:	4322      	orrs	r2, r4
 8003916:	2420      	movs	r4, #32
 8003918:	43a3      	bics	r3, r4
 800391a:	001c      	movs	r4, r3
 800391c:	688b      	ldr	r3, [r1, #8]
 800391e:	6045      	str	r5, [r0, #4]
 8003920:	011b      	lsls	r3, r3, #4
 8003922:	6182      	str	r2, [r0, #24]
 8003924:	684a      	ldr	r2, [r1, #4]
 8003926:	4323      	orrs	r3, r4
 8003928:	6382      	str	r2, [r0, #56]	; 0x38
 800392a:	6203      	str	r3, [r0, #32]
 800392c:	bd30      	pop	{r4, r5, pc}
 800392e:	46c0      	nop			; (mov r8, r8)
 8003930:	ffff8cff 	.word	0xffff8cff

08003934 <TIM_CCxChannelCmd>:
 8003934:	231f      	movs	r3, #31
 8003936:	b510      	push	{r4, lr}
 8003938:	2401      	movs	r4, #1
 800393a:	4019      	ands	r1, r3
 800393c:	408c      	lsls	r4, r1
 800393e:	408a      	lsls	r2, r1
 8003940:	6a03      	ldr	r3, [r0, #32]
 8003942:	43a3      	bics	r3, r4
 8003944:	6203      	str	r3, [r0, #32]
 8003946:	6a03      	ldr	r3, [r0, #32]
 8003948:	431a      	orrs	r2, r3
 800394a:	6202      	str	r2, [r0, #32]
 800394c:	bd10      	pop	{r4, pc}
	...

08003950 <HAL_TIM_OC_Start>:
 8003950:	b510      	push	{r4, lr}
 8003952:	0003      	movs	r3, r0
 8003954:	0004      	movs	r4, r0
 8003956:	2900      	cmp	r1, #0
 8003958:	d105      	bne.n	8003966 <HAL_TIM_OC_Start+0x16>
 800395a:	333a      	adds	r3, #58	; 0x3a
 800395c:	2001      	movs	r0, #1
 800395e:	781a      	ldrb	r2, [r3, #0]
 8003960:	4282      	cmp	r2, r0
 8003962:	d00a      	beq.n	800397a <HAL_TIM_OC_Start+0x2a>
 8003964:	bd10      	pop	{r4, pc}
 8003966:	2904      	cmp	r1, #4
 8003968:	d101      	bne.n	800396e <HAL_TIM_OC_Start+0x1e>
 800396a:	333b      	adds	r3, #59	; 0x3b
 800396c:	e7f6      	b.n	800395c <HAL_TIM_OC_Start+0xc>
 800396e:	2908      	cmp	r1, #8
 8003970:	d101      	bne.n	8003976 <HAL_TIM_OC_Start+0x26>
 8003972:	333c      	adds	r3, #60	; 0x3c
 8003974:	e7f2      	b.n	800395c <HAL_TIM_OC_Start+0xc>
 8003976:	333d      	adds	r3, #61	; 0x3d
 8003978:	e7f0      	b.n	800395c <HAL_TIM_OC_Start+0xc>
 800397a:	2202      	movs	r2, #2
 800397c:	701a      	strb	r2, [r3, #0]
 800397e:	6820      	ldr	r0, [r4, #0]
 8003980:	2201      	movs	r2, #1
 8003982:	f7ff ffd7 	bl	8003934 <TIM_CCxChannelCmd>
 8003986:	2280      	movs	r2, #128	; 0x80
 8003988:	6823      	ldr	r3, [r4, #0]
 800398a:	05d2      	lsls	r2, r2, #23
 800398c:	4293      	cmp	r3, r2
 800398e:	d005      	beq.n	800399c <HAL_TIM_OC_Start+0x4c>
 8003990:	4a0b      	ldr	r2, [pc, #44]	; (80039c0 <HAL_TIM_OC_Start+0x70>)
 8003992:	4293      	cmp	r3, r2
 8003994:	d002      	beq.n	800399c <HAL_TIM_OC_Start+0x4c>
 8003996:	4a0b      	ldr	r2, [pc, #44]	; (80039c4 <HAL_TIM_OC_Start+0x74>)
 8003998:	4293      	cmp	r3, r2
 800399a:	d10a      	bne.n	80039b2 <HAL_TIM_OC_Start+0x62>
 800399c:	2107      	movs	r1, #7
 800399e:	689a      	ldr	r2, [r3, #8]
 80039a0:	2000      	movs	r0, #0
 80039a2:	400a      	ands	r2, r1
 80039a4:	2a06      	cmp	r2, #6
 80039a6:	d0dd      	beq.n	8003964 <HAL_TIM_OC_Start+0x14>
 80039a8:	2201      	movs	r2, #1
 80039aa:	6819      	ldr	r1, [r3, #0]
 80039ac:	430a      	orrs	r2, r1
 80039ae:	601a      	str	r2, [r3, #0]
 80039b0:	e7d8      	b.n	8003964 <HAL_TIM_OC_Start+0x14>
 80039b2:	2201      	movs	r2, #1
 80039b4:	6819      	ldr	r1, [r3, #0]
 80039b6:	2000      	movs	r0, #0
 80039b8:	430a      	orrs	r2, r1
 80039ba:	601a      	str	r2, [r3, #0]
 80039bc:	e7d2      	b.n	8003964 <HAL_TIM_OC_Start+0x14>
 80039be:	46c0      	nop			; (mov r8, r8)
 80039c0:	40010800 	.word	0x40010800
 80039c4:	40011400 	.word	0x40011400

080039c8 <HAL_TIM_OC_Stop>:
 80039c8:	b570      	push	{r4, r5, r6, lr}
 80039ca:	0004      	movs	r4, r0
 80039cc:	2200      	movs	r2, #0
 80039ce:	6800      	ldr	r0, [r0, #0]
 80039d0:	000d      	movs	r5, r1
 80039d2:	f7ff ffaf 	bl	8003934 <TIM_CCxChannelCmd>
 80039d6:	6823      	ldr	r3, [r4, #0]
 80039d8:	4a0c      	ldr	r2, [pc, #48]	; (8003a0c <HAL_TIM_OC_Stop+0x44>)
 80039da:	6a19      	ldr	r1, [r3, #32]
 80039dc:	4211      	tst	r1, r2
 80039de:	d103      	bne.n	80039e8 <HAL_TIM_OC_Stop+0x20>
 80039e0:	2101      	movs	r1, #1
 80039e2:	681a      	ldr	r2, [r3, #0]
 80039e4:	438a      	bics	r2, r1
 80039e6:	601a      	str	r2, [r3, #0]
 80039e8:	2301      	movs	r3, #1
 80039ea:	2d00      	cmp	r5, #0
 80039ec:	d103      	bne.n	80039f6 <HAL_TIM_OC_Stop+0x2e>
 80039ee:	343a      	adds	r4, #58	; 0x3a
 80039f0:	2000      	movs	r0, #0
 80039f2:	7023      	strb	r3, [r4, #0]
 80039f4:	bd70      	pop	{r4, r5, r6, pc}
 80039f6:	2d04      	cmp	r5, #4
 80039f8:	d101      	bne.n	80039fe <HAL_TIM_OC_Stop+0x36>
 80039fa:	343b      	adds	r4, #59	; 0x3b
 80039fc:	e7f8      	b.n	80039f0 <HAL_TIM_OC_Stop+0x28>
 80039fe:	2d08      	cmp	r5, #8
 8003a00:	d101      	bne.n	8003a06 <HAL_TIM_OC_Stop+0x3e>
 8003a02:	343c      	adds	r4, #60	; 0x3c
 8003a04:	e7f4      	b.n	80039f0 <HAL_TIM_OC_Stop+0x28>
 8003a06:	343d      	adds	r4, #61	; 0x3d
 8003a08:	e7f2      	b.n	80039f0 <HAL_TIM_OC_Stop+0x28>
 8003a0a:	46c0      	nop			; (mov r8, r8)
 8003a0c:	00001111 	.word	0x00001111

08003a10 <HAL_TIM_PWM_Init>:
 8003a10:	b570      	push	{r4, r5, r6, lr}
 8003a12:	0004      	movs	r4, r0
 8003a14:	2001      	movs	r0, #1
 8003a16:	2c00      	cmp	r4, #0
 8003a18:	d01d      	beq.n	8003a56 <HAL_TIM_PWM_Init+0x46>
 8003a1a:	0025      	movs	r5, r4
 8003a1c:	3539      	adds	r5, #57	; 0x39
 8003a1e:	782b      	ldrb	r3, [r5, #0]
 8003a20:	b2da      	uxtb	r2, r3
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d105      	bne.n	8003a32 <HAL_TIM_PWM_Init+0x22>
 8003a26:	0023      	movs	r3, r4
 8003a28:	3338      	adds	r3, #56	; 0x38
 8003a2a:	0020      	movs	r0, r4
 8003a2c:	701a      	strb	r2, [r3, #0]
 8003a2e:	f7fe fb71 	bl	8002114 <HAL_TIM_PWM_MspInit>
 8003a32:	2302      	movs	r3, #2
 8003a34:	702b      	strb	r3, [r5, #0]
 8003a36:	6820      	ldr	r0, [r4, #0]
 8003a38:	1d21      	adds	r1, r4, #4
 8003a3a:	f7ff ff1b 	bl	8003874 <TIM_Base_SetConfig>
 8003a3e:	0022      	movs	r2, r4
 8003a40:	2301      	movs	r3, #1
 8003a42:	2000      	movs	r0, #0
 8003a44:	323e      	adds	r2, #62	; 0x3e
 8003a46:	7013      	strb	r3, [r2, #0]
 8003a48:	343d      	adds	r4, #61	; 0x3d
 8003a4a:	3a04      	subs	r2, #4
 8003a4c:	7013      	strb	r3, [r2, #0]
 8003a4e:	7053      	strb	r3, [r2, #1]
 8003a50:	7093      	strb	r3, [r2, #2]
 8003a52:	7023      	strb	r3, [r4, #0]
 8003a54:	702b      	strb	r3, [r5, #0]
 8003a56:	bd70      	pop	{r4, r5, r6, pc}

08003a58 <HAL_TIM_PWM_Start>:
 8003a58:	b510      	push	{r4, lr}
 8003a5a:	f7ff ff79 	bl	8003950 <HAL_TIM_OC_Start>
 8003a5e:	bd10      	pop	{r4, pc}

08003a60 <HAL_TIM_PWM_Stop>:
 8003a60:	b510      	push	{r4, lr}
 8003a62:	f7ff ffb1 	bl	80039c8 <HAL_TIM_OC_Stop>
 8003a66:	bd10      	pop	{r4, pc}

08003a68 <HAL_TIM_PWM_ConfigChannel>:
 8003a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a6a:	0005      	movs	r5, r0
 8003a6c:	3538      	adds	r5, #56	; 0x38
 8003a6e:	782b      	ldrb	r3, [r5, #0]
 8003a70:	0007      	movs	r7, r0
 8003a72:	000c      	movs	r4, r1
 8003a74:	0016      	movs	r6, r2
 8003a76:	2002      	movs	r0, #2
 8003a78:	2b01      	cmp	r3, #1
 8003a7a:	d00a      	beq.n	8003a92 <HAL_TIM_PWM_ConfigChannel+0x2a>
 8003a7c:	3801      	subs	r0, #1
 8003a7e:	7028      	strb	r0, [r5, #0]
 8003a80:	2a08      	cmp	r2, #8
 8003a82:	d050      	beq.n	8003b26 <HAL_TIM_PWM_ConfigChannel+0xbe>
 8003a84:	d806      	bhi.n	8003a94 <HAL_TIM_PWM_ConfigChannel+0x2c>
 8003a86:	2a00      	cmp	r2, #0
 8003a88:	d02a      	beq.n	8003ae0 <HAL_TIM_PWM_ConfigChannel+0x78>
 8003a8a:	2a04      	cmp	r2, #4
 8003a8c:	d03a      	beq.n	8003b04 <HAL_TIM_PWM_ConfigChannel+0x9c>
 8003a8e:	2300      	movs	r3, #0
 8003a90:	702b      	strb	r3, [r5, #0]
 8003a92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a94:	2a0c      	cmp	r2, #12
 8003a96:	d1fa      	bne.n	8003a8e <HAL_TIM_PWM_ConfigChannel+0x26>
 8003a98:	683b      	ldr	r3, [r7, #0]
 8003a9a:	4934      	ldr	r1, [pc, #208]	; (8003b6c <HAL_TIM_PWM_ConfigChannel+0x104>)
 8003a9c:	6a1a      	ldr	r2, [r3, #32]
 8003a9e:	4834      	ldr	r0, [pc, #208]	; (8003b70 <HAL_TIM_PWM_ConfigChannel+0x108>)
 8003aa0:	400a      	ands	r2, r1
 8003aa2:	621a      	str	r2, [r3, #32]
 8003aa4:	6a1a      	ldr	r2, [r3, #32]
 8003aa6:	685e      	ldr	r6, [r3, #4]
 8003aa8:	69d9      	ldr	r1, [r3, #28]
 8003aaa:	4001      	ands	r1, r0
 8003aac:	6820      	ldr	r0, [r4, #0]
 8003aae:	0207      	lsls	r7, r0, #8
 8003ab0:	4830      	ldr	r0, [pc, #192]	; (8003b74 <HAL_TIM_PWM_ConfigChannel+0x10c>)
 8003ab2:	4339      	orrs	r1, r7
 8003ab4:	4010      	ands	r0, r2
 8003ab6:	68a2      	ldr	r2, [r4, #8]
 8003ab8:	605e      	str	r6, [r3, #4]
 8003aba:	0312      	lsls	r2, r2, #12
 8003abc:	61d9      	str	r1, [r3, #28]
 8003abe:	6861      	ldr	r1, [r4, #4]
 8003ac0:	4302      	orrs	r2, r0
 8003ac2:	6419      	str	r1, [r3, #64]	; 0x40
 8003ac4:	621a      	str	r2, [r3, #32]
 8003ac6:	2280      	movs	r2, #128	; 0x80
 8003ac8:	69d9      	ldr	r1, [r3, #28]
 8003aca:	0112      	lsls	r2, r2, #4
 8003acc:	430a      	orrs	r2, r1
 8003ace:	61da      	str	r2, [r3, #28]
 8003ad0:	69da      	ldr	r2, [r3, #28]
 8003ad2:	4929      	ldr	r1, [pc, #164]	; (8003b78 <HAL_TIM_PWM_ConfigChannel+0x110>)
 8003ad4:	400a      	ands	r2, r1
 8003ad6:	61da      	str	r2, [r3, #28]
 8003ad8:	68e2      	ldr	r2, [r4, #12]
 8003ada:	69d9      	ldr	r1, [r3, #28]
 8003adc:	0212      	lsls	r2, r2, #8
 8003ade:	e041      	b.n	8003b64 <HAL_TIM_PWM_ConfigChannel+0xfc>
 8003ae0:	6838      	ldr	r0, [r7, #0]
 8003ae2:	f7ff fef5 	bl	80038d0 <TIM_OC1_SetConfig>
 8003ae6:	2208      	movs	r2, #8
 8003ae8:	683b      	ldr	r3, [r7, #0]
 8003aea:	6999      	ldr	r1, [r3, #24]
 8003aec:	430a      	orrs	r2, r1
 8003aee:	2104      	movs	r1, #4
 8003af0:	619a      	str	r2, [r3, #24]
 8003af2:	699a      	ldr	r2, [r3, #24]
 8003af4:	438a      	bics	r2, r1
 8003af6:	619a      	str	r2, [r3, #24]
 8003af8:	699a      	ldr	r2, [r3, #24]
 8003afa:	68e1      	ldr	r1, [r4, #12]
 8003afc:	430a      	orrs	r2, r1
 8003afe:	619a      	str	r2, [r3, #24]
 8003b00:	2000      	movs	r0, #0
 8003b02:	e7c4      	b.n	8003a8e <HAL_TIM_PWM_ConfigChannel+0x26>
 8003b04:	6838      	ldr	r0, [r7, #0]
 8003b06:	f7ff fef9 	bl	80038fc <TIM_OC2_SetConfig>
 8003b0a:	2280      	movs	r2, #128	; 0x80
 8003b0c:	683b      	ldr	r3, [r7, #0]
 8003b0e:	0112      	lsls	r2, r2, #4
 8003b10:	6999      	ldr	r1, [r3, #24]
 8003b12:	430a      	orrs	r2, r1
 8003b14:	619a      	str	r2, [r3, #24]
 8003b16:	699a      	ldr	r2, [r3, #24]
 8003b18:	4917      	ldr	r1, [pc, #92]	; (8003b78 <HAL_TIM_PWM_ConfigChannel+0x110>)
 8003b1a:	400a      	ands	r2, r1
 8003b1c:	619a      	str	r2, [r3, #24]
 8003b1e:	68e2      	ldr	r2, [r4, #12]
 8003b20:	6999      	ldr	r1, [r3, #24]
 8003b22:	0212      	lsls	r2, r2, #8
 8003b24:	e7ea      	b.n	8003afc <HAL_TIM_PWM_ConfigChannel+0x94>
 8003b26:	2073      	movs	r0, #115	; 0x73
 8003b28:	683b      	ldr	r3, [r7, #0]
 8003b2a:	4914      	ldr	r1, [pc, #80]	; (8003b7c <HAL_TIM_PWM_ConfigChannel+0x114>)
 8003b2c:	6a1a      	ldr	r2, [r3, #32]
 8003b2e:	400a      	ands	r2, r1
 8003b30:	621a      	str	r2, [r3, #32]
 8003b32:	6a1a      	ldr	r2, [r3, #32]
 8003b34:	685f      	ldr	r7, [r3, #4]
 8003b36:	69d9      	ldr	r1, [r3, #28]
 8003b38:	4381      	bics	r1, r0
 8003b3a:	6820      	ldr	r0, [r4, #0]
 8003b3c:	4301      	orrs	r1, r0
 8003b3e:	4810      	ldr	r0, [pc, #64]	; (8003b80 <HAL_TIM_PWM_ConfigChannel+0x118>)
 8003b40:	4010      	ands	r0, r2
 8003b42:	68a2      	ldr	r2, [r4, #8]
 8003b44:	605f      	str	r7, [r3, #4]
 8003b46:	61d9      	str	r1, [r3, #28]
 8003b48:	6861      	ldr	r1, [r4, #4]
 8003b4a:	0212      	lsls	r2, r2, #8
 8003b4c:	63d9      	str	r1, [r3, #60]	; 0x3c
 8003b4e:	2104      	movs	r1, #4
 8003b50:	4302      	orrs	r2, r0
 8003b52:	621a      	str	r2, [r3, #32]
 8003b54:	69da      	ldr	r2, [r3, #28]
 8003b56:	4316      	orrs	r6, r2
 8003b58:	61de      	str	r6, [r3, #28]
 8003b5a:	69da      	ldr	r2, [r3, #28]
 8003b5c:	438a      	bics	r2, r1
 8003b5e:	61da      	str	r2, [r3, #28]
 8003b60:	69da      	ldr	r2, [r3, #28]
 8003b62:	68e1      	ldr	r1, [r4, #12]
 8003b64:	430a      	orrs	r2, r1
 8003b66:	61da      	str	r2, [r3, #28]
 8003b68:	e7ca      	b.n	8003b00 <HAL_TIM_PWM_ConfigChannel+0x98>
 8003b6a:	46c0      	nop			; (mov r8, r8)
 8003b6c:	ffffefff 	.word	0xffffefff
 8003b70:	ffff8cff 	.word	0xffff8cff
 8003b74:	ffffdfff 	.word	0xffffdfff
 8003b78:	fffffbff 	.word	0xfffffbff
 8003b7c:	fffffeff 	.word	0xfffffeff
 8003b80:	fffffdff 	.word	0xfffffdff

08003b84 <HAL_TIMEx_MasterConfigSynchronization>:
 8003b84:	b570      	push	{r4, r5, r6, lr}
 8003b86:	0004      	movs	r4, r0
 8003b88:	2202      	movs	r2, #2
 8003b8a:	3438      	adds	r4, #56	; 0x38
 8003b8c:	7825      	ldrb	r5, [r4, #0]
 8003b8e:	0003      	movs	r3, r0
 8003b90:	0010      	movs	r0, r2
 8003b92:	2d01      	cmp	r5, #1
 8003b94:	d01d      	beq.n	8003bd2 <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 8003b96:	001d      	movs	r5, r3
 8003b98:	2670      	movs	r6, #112	; 0x70
 8003b9a:	3539      	adds	r5, #57	; 0x39
 8003b9c:	702a      	strb	r2, [r5, #0]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	6858      	ldr	r0, [r3, #4]
 8003ba2:	689a      	ldr	r2, [r3, #8]
 8003ba4:	43b0      	bics	r0, r6
 8003ba6:	680e      	ldr	r6, [r1, #0]
 8003ba8:	4330      	orrs	r0, r6
 8003baa:	6058      	str	r0, [r3, #4]
 8003bac:	2080      	movs	r0, #128	; 0x80
 8003bae:	05c0      	lsls	r0, r0, #23
 8003bb0:	4283      	cmp	r3, r0
 8003bb2:	d005      	beq.n	8003bc0 <HAL_TIMEx_MasterConfigSynchronization+0x3c>
 8003bb4:	4807      	ldr	r0, [pc, #28]	; (8003bd4 <HAL_TIMEx_MasterConfigSynchronization+0x50>)
 8003bb6:	4283      	cmp	r3, r0
 8003bb8:	d002      	beq.n	8003bc0 <HAL_TIMEx_MasterConfigSynchronization+0x3c>
 8003bba:	4807      	ldr	r0, [pc, #28]	; (8003bd8 <HAL_TIMEx_MasterConfigSynchronization+0x54>)
 8003bbc:	4283      	cmp	r3, r0
 8003bbe:	d104      	bne.n	8003bca <HAL_TIMEx_MasterConfigSynchronization+0x46>
 8003bc0:	2080      	movs	r0, #128	; 0x80
 8003bc2:	6849      	ldr	r1, [r1, #4]
 8003bc4:	4382      	bics	r2, r0
 8003bc6:	430a      	orrs	r2, r1
 8003bc8:	609a      	str	r2, [r3, #8]
 8003bca:	2301      	movs	r3, #1
 8003bcc:	2000      	movs	r0, #0
 8003bce:	702b      	strb	r3, [r5, #0]
 8003bd0:	7020      	strb	r0, [r4, #0]
 8003bd2:	bd70      	pop	{r4, r5, r6, pc}
 8003bd4:	40010800 	.word	0x40010800
 8003bd8:	40011400 	.word	0x40011400

08003bdc <UART_EndRxTransfer>:
 8003bdc:	b530      	push	{r4, r5, lr}
 8003bde:	f3ef 8410 	mrs	r4, PRIMASK
 8003be2:	2201      	movs	r2, #1
 8003be4:	f382 8810 	msr	PRIMASK, r2
 8003be8:	6801      	ldr	r1, [r0, #0]
 8003bea:	4d12      	ldr	r5, [pc, #72]	; (8003c34 <UART_EndRxTransfer+0x58>)
 8003bec:	680b      	ldr	r3, [r1, #0]
 8003bee:	402b      	ands	r3, r5
 8003bf0:	600b      	str	r3, [r1, #0]
 8003bf2:	f384 8810 	msr	PRIMASK, r4
 8003bf6:	f3ef 8410 	mrs	r4, PRIMASK
 8003bfa:	f382 8810 	msr	PRIMASK, r2
 8003bfe:	6801      	ldr	r1, [r0, #0]
 8003c00:	688b      	ldr	r3, [r1, #8]
 8003c02:	4393      	bics	r3, r2
 8003c04:	608b      	str	r3, [r1, #8]
 8003c06:	f384 8810 	msr	PRIMASK, r4
 8003c0a:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8003c0c:	4293      	cmp	r3, r2
 8003c0e:	d10a      	bne.n	8003c26 <UART_EndRxTransfer+0x4a>
 8003c10:	f3ef 8110 	mrs	r1, PRIMASK
 8003c14:	f383 8810 	msr	PRIMASK, r3
 8003c18:	2410      	movs	r4, #16
 8003c1a:	6802      	ldr	r2, [r0, #0]
 8003c1c:	6813      	ldr	r3, [r2, #0]
 8003c1e:	43a3      	bics	r3, r4
 8003c20:	6013      	str	r3, [r2, #0]
 8003c22:	f381 8810 	msr	PRIMASK, r1
 8003c26:	2220      	movs	r2, #32
 8003c28:	1d03      	adds	r3, r0, #4
 8003c2a:	67da      	str	r2, [r3, #124]	; 0x7c
 8003c2c:	2300      	movs	r3, #0
 8003c2e:	6603      	str	r3, [r0, #96]	; 0x60
 8003c30:	6683      	str	r3, [r0, #104]	; 0x68
 8003c32:	bd30      	pop	{r4, r5, pc}
 8003c34:	fffffedf 	.word	0xfffffedf

08003c38 <UART_SetConfig>:
 8003c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c3a:	0004      	movs	r4, r0
 8003c3c:	6925      	ldr	r5, [r4, #16]
 8003c3e:	68a1      	ldr	r1, [r4, #8]
 8003c40:	6802      	ldr	r2, [r0, #0]
 8003c42:	4329      	orrs	r1, r5
 8003c44:	6965      	ldr	r5, [r4, #20]
 8003c46:	69c3      	ldr	r3, [r0, #28]
 8003c48:	4329      	orrs	r1, r5
 8003c4a:	6810      	ldr	r0, [r2, #0]
 8003c4c:	4d72      	ldr	r5, [pc, #456]	; (8003e18 <UART_SetConfig+0x1e0>)
 8003c4e:	4319      	orrs	r1, r3
 8003c50:	4028      	ands	r0, r5
 8003c52:	4301      	orrs	r1, r0
 8003c54:	6011      	str	r1, [r2, #0]
 8003c56:	6851      	ldr	r1, [r2, #4]
 8003c58:	4870      	ldr	r0, [pc, #448]	; (8003e1c <UART_SetConfig+0x1e4>)
 8003c5a:	4d71      	ldr	r5, [pc, #452]	; (8003e20 <UART_SetConfig+0x1e8>)
 8003c5c:	4001      	ands	r1, r0
 8003c5e:	68e0      	ldr	r0, [r4, #12]
 8003c60:	4301      	orrs	r1, r0
 8003c62:	6051      	str	r1, [r2, #4]
 8003c64:	69a0      	ldr	r0, [r4, #24]
 8003c66:	42aa      	cmp	r2, r5
 8003c68:	d001      	beq.n	8003c6e <UART_SetConfig+0x36>
 8003c6a:	6a21      	ldr	r1, [r4, #32]
 8003c6c:	4308      	orrs	r0, r1
 8003c6e:	6891      	ldr	r1, [r2, #8]
 8003c70:	4e6c      	ldr	r6, [pc, #432]	; (8003e24 <UART_SetConfig+0x1ec>)
 8003c72:	4031      	ands	r1, r6
 8003c74:	4301      	orrs	r1, r0
 8003c76:	6091      	str	r1, [r2, #8]
 8003c78:	496b      	ldr	r1, [pc, #428]	; (8003e28 <UART_SetConfig+0x1f0>)
 8003c7a:	428a      	cmp	r2, r1
 8003c7c:	d10f      	bne.n	8003c9e <UART_SetConfig+0x66>
 8003c7e:	2103      	movs	r1, #3
 8003c80:	4a6a      	ldr	r2, [pc, #424]	; (8003e2c <UART_SetConfig+0x1f4>)
 8003c82:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8003c84:	400a      	ands	r2, r1
 8003c86:	3a01      	subs	r2, #1
 8003c88:	4969      	ldr	r1, [pc, #420]	; (8003e30 <UART_SetConfig+0x1f8>)
 8003c8a:	2a02      	cmp	r2, #2
 8003c8c:	d90f      	bls.n	8003cae <UART_SetConfig+0x76>
 8003c8e:	2280      	movs	r2, #128	; 0x80
 8003c90:	0212      	lsls	r2, r2, #8
 8003c92:	4293      	cmp	r3, r2
 8003c94:	d100      	bne.n	8003c98 <UART_SetConfig+0x60>
 8003c96:	e069      	b.n	8003d6c <UART_SetConfig+0x134>
 8003c98:	f7ff fd06 	bl	80036a8 <HAL_RCC_GetPCLK2Freq>
 8003c9c:	e09c      	b.n	8003dd8 <UART_SetConfig+0x1a0>
 8003c9e:	4965      	ldr	r1, [pc, #404]	; (8003e34 <UART_SetConfig+0x1fc>)
 8003ca0:	428a      	cmp	r2, r1
 8003ca2:	d113      	bne.n	8003ccc <UART_SetConfig+0x94>
 8003ca4:	210c      	movs	r1, #12
 8003ca6:	4a61      	ldr	r2, [pc, #388]	; (8003e2c <UART_SetConfig+0x1f4>)
 8003ca8:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8003caa:	400a      	ands	r2, r1
 8003cac:	4962      	ldr	r1, [pc, #392]	; (8003e38 <UART_SetConfig+0x200>)
 8003cae:	5c88      	ldrb	r0, [r1, r2]
 8003cb0:	2280      	movs	r2, #128	; 0x80
 8003cb2:	0212      	lsls	r2, r2, #8
 8003cb4:	4293      	cmp	r3, r2
 8003cb6:	d000      	beq.n	8003cba <UART_SetConfig+0x82>
 8003cb8:	e07f      	b.n	8003dba <UART_SetConfig+0x182>
 8003cba:	2808      	cmp	r0, #8
 8003cbc:	d818      	bhi.n	8003cf0 <UART_SetConfig+0xb8>
 8003cbe:	f7fc fa2b 	bl	8000118 <__gnu_thumb1_case_uqi>
 8003cc2:	5550      	.short	0x5550
 8003cc4:	17791758 	.word	0x17791758
 8003cc8:	1717      	.short	0x1717
 8003cca:	63          	.byte	0x63
 8003ccb:	00          	.byte	0x00
 8003ccc:	42aa      	cmp	r2, r5
 8003cce:	d10f      	bne.n	8003cf0 <UART_SetConfig+0xb8>
 8003cd0:	21c0      	movs	r1, #192	; 0xc0
 8003cd2:	2080      	movs	r0, #128	; 0x80
 8003cd4:	4a55      	ldr	r2, [pc, #340]	; (8003e2c <UART_SetConfig+0x1f4>)
 8003cd6:	0109      	lsls	r1, r1, #4
 8003cd8:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8003cda:	0100      	lsls	r0, r0, #4
 8003cdc:	400b      	ands	r3, r1
 8003cde:	4283      	cmp	r3, r0
 8003ce0:	d016      	beq.n	8003d10 <UART_SetConfig+0xd8>
 8003ce2:	d807      	bhi.n	8003cf4 <UART_SetConfig+0xbc>
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d00a      	beq.n	8003cfe <UART_SetConfig+0xc6>
 8003ce8:	2280      	movs	r2, #128	; 0x80
 8003cea:	00d2      	lsls	r2, r2, #3
 8003cec:	4293      	cmp	r3, r2
 8003cee:	d035      	beq.n	8003d5c <UART_SetConfig+0x124>
 8003cf0:	2001      	movs	r0, #1
 8003cf2:	e009      	b.n	8003d08 <UART_SetConfig+0xd0>
 8003cf4:	428b      	cmp	r3, r1
 8003cf6:	d1fb      	bne.n	8003cf0 <UART_SetConfig+0xb8>
 8003cf8:	2080      	movs	r0, #128	; 0x80
 8003cfa:	0200      	lsls	r0, r0, #8
 8003cfc:	e012      	b.n	8003d24 <UART_SetConfig+0xec>
 8003cfe:	f7ff fcc3 	bl	8003688 <HAL_RCC_GetPCLK1Freq>
 8003d02:	2800      	cmp	r0, #0
 8003d04:	d10e      	bne.n	8003d24 <UART_SetConfig+0xec>
 8003d06:	2000      	movs	r0, #0
 8003d08:	2300      	movs	r3, #0
 8003d0a:	66a3      	str	r3, [r4, #104]	; 0x68
 8003d0c:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d10:	2310      	movs	r3, #16
 8003d12:	6810      	ldr	r0, [r2, #0]
 8003d14:	4018      	ands	r0, r3
 8003d16:	4243      	negs	r3, r0
 8003d18:	4158      	adcs	r0, r3
 8003d1a:	4b48      	ldr	r3, [pc, #288]	; (8003e3c <UART_SetConfig+0x204>)
 8003d1c:	4240      	negs	r0, r0
 8003d1e:	4018      	ands	r0, r3
 8003d20:	4b47      	ldr	r3, [pc, #284]	; (8003e40 <UART_SetConfig+0x208>)
 8003d22:	18c0      	adds	r0, r0, r3
 8003d24:	2203      	movs	r2, #3
 8003d26:	6863      	ldr	r3, [r4, #4]
 8003d28:	435a      	muls	r2, r3
 8003d2a:	4282      	cmp	r2, r0
 8003d2c:	d8e0      	bhi.n	8003cf0 <UART_SetConfig+0xb8>
 8003d2e:	031a      	lsls	r2, r3, #12
 8003d30:	4282      	cmp	r2, r0
 8003d32:	d3dd      	bcc.n	8003cf0 <UART_SetConfig+0xb8>
 8003d34:	2700      	movs	r7, #0
 8003d36:	0e02      	lsrs	r2, r0, #24
 8003d38:	0201      	lsls	r1, r0, #8
 8003d3a:	085e      	lsrs	r6, r3, #1
 8003d3c:	1989      	adds	r1, r1, r6
 8003d3e:	417a      	adcs	r2, r7
 8003d40:	0008      	movs	r0, r1
 8003d42:	0011      	movs	r1, r2
 8003d44:	001a      	movs	r2, r3
 8003d46:	003b      	movs	r3, r7
 8003d48:	f7fc fa86 	bl	8000258 <__aeabi_uldivmod>
 8003d4c:	4b3d      	ldr	r3, [pc, #244]	; (8003e44 <UART_SetConfig+0x20c>)
 8003d4e:	18c2      	adds	r2, r0, r3
 8003d50:	4b3d      	ldr	r3, [pc, #244]	; (8003e48 <UART_SetConfig+0x210>)
 8003d52:	429a      	cmp	r2, r3
 8003d54:	d8cc      	bhi.n	8003cf0 <UART_SetConfig+0xb8>
 8003d56:	6823      	ldr	r3, [r4, #0]
 8003d58:	60d8      	str	r0, [r3, #12]
 8003d5a:	e7d4      	b.n	8003d06 <UART_SetConfig+0xce>
 8003d5c:	f7ff f8fc 	bl	8002f58 <HAL_RCC_GetSysClockFreq>
 8003d60:	e7cf      	b.n	8003d02 <UART_SetConfig+0xca>
 8003d62:	f7ff fc91 	bl	8003688 <HAL_RCC_GetPCLK1Freq>
 8003d66:	1e03      	subs	r3, r0, #0
 8003d68:	d0cd      	beq.n	8003d06 <UART_SetConfig+0xce>
 8003d6a:	e00d      	b.n	8003d88 <UART_SetConfig+0x150>
 8003d6c:	f7ff fc9c 	bl	80036a8 <HAL_RCC_GetPCLK2Freq>
 8003d70:	e7f9      	b.n	8003d66 <UART_SetConfig+0x12e>
 8003d72:	4b2e      	ldr	r3, [pc, #184]	; (8003e2c <UART_SetConfig+0x1f4>)
 8003d74:	4a32      	ldr	r2, [pc, #200]	; (8003e40 <UART_SetConfig+0x208>)
 8003d76:	6818      	ldr	r0, [r3, #0]
 8003d78:	2310      	movs	r3, #16
 8003d7a:	4018      	ands	r0, r3
 8003d7c:	4243      	negs	r3, r0
 8003d7e:	4158      	adcs	r0, r3
 8003d80:	4b2e      	ldr	r3, [pc, #184]	; (8003e3c <UART_SetConfig+0x204>)
 8003d82:	4240      	negs	r0, r0
 8003d84:	4003      	ands	r3, r0
 8003d86:	189b      	adds	r3, r3, r2
 8003d88:	0058      	lsls	r0, r3, #1
 8003d8a:	6863      	ldr	r3, [r4, #4]
 8003d8c:	6861      	ldr	r1, [r4, #4]
 8003d8e:	085b      	lsrs	r3, r3, #1
 8003d90:	18c0      	adds	r0, r0, r3
 8003d92:	f7fc f9d5 	bl	8000140 <__udivsi3>
 8003d96:	0002      	movs	r2, r0
 8003d98:	4b2c      	ldr	r3, [pc, #176]	; (8003e4c <UART_SetConfig+0x214>)
 8003d9a:	3a10      	subs	r2, #16
 8003d9c:	429a      	cmp	r2, r3
 8003d9e:	d8a7      	bhi.n	8003cf0 <UART_SetConfig+0xb8>
 8003da0:	230f      	movs	r3, #15
 8003da2:	0002      	movs	r2, r0
 8003da4:	0700      	lsls	r0, r0, #28
 8003da6:	439a      	bics	r2, r3
 8003da8:	b293      	uxth	r3, r2
 8003daa:	0f40      	lsrs	r0, r0, #29
 8003dac:	6822      	ldr	r2, [r4, #0]
 8003dae:	4318      	orrs	r0, r3
 8003db0:	60d0      	str	r0, [r2, #12]
 8003db2:	e7a8      	b.n	8003d06 <UART_SetConfig+0xce>
 8003db4:	f7ff f8d0 	bl	8002f58 <HAL_RCC_GetSysClockFreq>
 8003db8:	e7d5      	b.n	8003d66 <UART_SetConfig+0x12e>
 8003dba:	2808      	cmp	r0, #8
 8003dbc:	d898      	bhi.n	8003cf0 <UART_SetConfig+0xb8>
 8003dbe:	f7fc f9b5 	bl	800012c <__gnu_thumb1_case_shi>
 8003dc2:	0009      	.short	0x0009
 8003dc4:	000fff6b 	.word	0x000fff6b
 8003dc8:	0024ff97 	.word	0x0024ff97
 8003dcc:	ff97ff97 	.word	0xff97ff97
 8003dd0:	0027ff97 	.word	0x0027ff97
 8003dd4:	f7ff fc58 	bl	8003688 <HAL_RCC_GetPCLK1Freq>
 8003dd8:	2800      	cmp	r0, #0
 8003dda:	d100      	bne.n	8003dde <UART_SetConfig+0x1a6>
 8003ddc:	e793      	b.n	8003d06 <UART_SetConfig+0xce>
 8003dde:	e00a      	b.n	8003df6 <UART_SetConfig+0x1be>
 8003de0:	4b12      	ldr	r3, [pc, #72]	; (8003e2c <UART_SetConfig+0x1f4>)
 8003de2:	6818      	ldr	r0, [r3, #0]
 8003de4:	2310      	movs	r3, #16
 8003de6:	4018      	ands	r0, r3
 8003de8:	4243      	negs	r3, r0
 8003dea:	4158      	adcs	r0, r3
 8003dec:	4b13      	ldr	r3, [pc, #76]	; (8003e3c <UART_SetConfig+0x204>)
 8003dee:	4240      	negs	r0, r0
 8003df0:	4018      	ands	r0, r3
 8003df2:	4b13      	ldr	r3, [pc, #76]	; (8003e40 <UART_SetConfig+0x208>)
 8003df4:	18c0      	adds	r0, r0, r3
 8003df6:	6863      	ldr	r3, [r4, #4]
 8003df8:	6861      	ldr	r1, [r4, #4]
 8003dfa:	085b      	lsrs	r3, r3, #1
 8003dfc:	1818      	adds	r0, r3, r0
 8003dfe:	f7fc f99f 	bl	8000140 <__udivsi3>
 8003e02:	0002      	movs	r2, r0
 8003e04:	4b11      	ldr	r3, [pc, #68]	; (8003e4c <UART_SetConfig+0x214>)
 8003e06:	3a10      	subs	r2, #16
 8003e08:	e7a3      	b.n	8003d52 <UART_SetConfig+0x11a>
 8003e0a:	f7ff f8a5 	bl	8002f58 <HAL_RCC_GetSysClockFreq>
 8003e0e:	e7e3      	b.n	8003dd8 <UART_SetConfig+0x1a0>
 8003e10:	2080      	movs	r0, #128	; 0x80
 8003e12:	0200      	lsls	r0, r0, #8
 8003e14:	e7ef      	b.n	8003df6 <UART_SetConfig+0x1be>
 8003e16:	46c0      	nop			; (mov r8, r8)
 8003e18:	efff69f3 	.word	0xefff69f3
 8003e1c:	ffffcfff 	.word	0xffffcfff
 8003e20:	40004800 	.word	0x40004800
 8003e24:	fffff4ff 	.word	0xfffff4ff
 8003e28:	40013800 	.word	0x40013800
 8003e2c:	40021000 	.word	0x40021000
 8003e30:	080052bb 	.word	0x080052bb
 8003e34:	40004400 	.word	0x40004400
 8003e38:	080052be 	.word	0x080052be
 8003e3c:	00b71b00 	.word	0x00b71b00
 8003e40:	003d0900 	.word	0x003d0900
 8003e44:	fffffd00 	.word	0xfffffd00
 8003e48:	000ffcff 	.word	0x000ffcff
 8003e4c:	0000ffef 	.word	0x0000ffef

08003e50 <UART_AdvFeatureConfig>:
 8003e50:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8003e52:	b530      	push	{r4, r5, lr}
 8003e54:	07da      	lsls	r2, r3, #31
 8003e56:	d506      	bpl.n	8003e66 <UART_AdvFeatureConfig+0x16>
 8003e58:	6801      	ldr	r1, [r0, #0]
 8003e5a:	4c28      	ldr	r4, [pc, #160]	; (8003efc <UART_AdvFeatureConfig+0xac>)
 8003e5c:	684a      	ldr	r2, [r1, #4]
 8003e5e:	4022      	ands	r2, r4
 8003e60:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8003e62:	4322      	orrs	r2, r4
 8003e64:	604a      	str	r2, [r1, #4]
 8003e66:	079a      	lsls	r2, r3, #30
 8003e68:	d506      	bpl.n	8003e78 <UART_AdvFeatureConfig+0x28>
 8003e6a:	6801      	ldr	r1, [r0, #0]
 8003e6c:	4c24      	ldr	r4, [pc, #144]	; (8003f00 <UART_AdvFeatureConfig+0xb0>)
 8003e6e:	684a      	ldr	r2, [r1, #4]
 8003e70:	4022      	ands	r2, r4
 8003e72:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003e74:	4322      	orrs	r2, r4
 8003e76:	604a      	str	r2, [r1, #4]
 8003e78:	075a      	lsls	r2, r3, #29
 8003e7a:	d506      	bpl.n	8003e8a <UART_AdvFeatureConfig+0x3a>
 8003e7c:	6801      	ldr	r1, [r0, #0]
 8003e7e:	4c21      	ldr	r4, [pc, #132]	; (8003f04 <UART_AdvFeatureConfig+0xb4>)
 8003e80:	684a      	ldr	r2, [r1, #4]
 8003e82:	4022      	ands	r2, r4
 8003e84:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003e86:	4322      	orrs	r2, r4
 8003e88:	604a      	str	r2, [r1, #4]
 8003e8a:	071a      	lsls	r2, r3, #28
 8003e8c:	d506      	bpl.n	8003e9c <UART_AdvFeatureConfig+0x4c>
 8003e8e:	6801      	ldr	r1, [r0, #0]
 8003e90:	4c1d      	ldr	r4, [pc, #116]	; (8003f08 <UART_AdvFeatureConfig+0xb8>)
 8003e92:	684a      	ldr	r2, [r1, #4]
 8003e94:	4022      	ands	r2, r4
 8003e96:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003e98:	4322      	orrs	r2, r4
 8003e9a:	604a      	str	r2, [r1, #4]
 8003e9c:	06da      	lsls	r2, r3, #27
 8003e9e:	d506      	bpl.n	8003eae <UART_AdvFeatureConfig+0x5e>
 8003ea0:	6801      	ldr	r1, [r0, #0]
 8003ea2:	4c1a      	ldr	r4, [pc, #104]	; (8003f0c <UART_AdvFeatureConfig+0xbc>)
 8003ea4:	688a      	ldr	r2, [r1, #8]
 8003ea6:	4022      	ands	r2, r4
 8003ea8:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003eaa:	4322      	orrs	r2, r4
 8003eac:	608a      	str	r2, [r1, #8]
 8003eae:	069a      	lsls	r2, r3, #26
 8003eb0:	d506      	bpl.n	8003ec0 <UART_AdvFeatureConfig+0x70>
 8003eb2:	6801      	ldr	r1, [r0, #0]
 8003eb4:	4c16      	ldr	r4, [pc, #88]	; (8003f10 <UART_AdvFeatureConfig+0xc0>)
 8003eb6:	688a      	ldr	r2, [r1, #8]
 8003eb8:	4022      	ands	r2, r4
 8003eba:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003ebc:	4322      	orrs	r2, r4
 8003ebe:	608a      	str	r2, [r1, #8]
 8003ec0:	065a      	lsls	r2, r3, #25
 8003ec2:	d510      	bpl.n	8003ee6 <UART_AdvFeatureConfig+0x96>
 8003ec4:	6801      	ldr	r1, [r0, #0]
 8003ec6:	4d13      	ldr	r5, [pc, #76]	; (8003f14 <UART_AdvFeatureConfig+0xc4>)
 8003ec8:	684a      	ldr	r2, [r1, #4]
 8003eca:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003ecc:	402a      	ands	r2, r5
 8003ece:	4322      	orrs	r2, r4
 8003ed0:	604a      	str	r2, [r1, #4]
 8003ed2:	2280      	movs	r2, #128	; 0x80
 8003ed4:	0352      	lsls	r2, r2, #13
 8003ed6:	4294      	cmp	r4, r2
 8003ed8:	d105      	bne.n	8003ee6 <UART_AdvFeatureConfig+0x96>
 8003eda:	684a      	ldr	r2, [r1, #4]
 8003edc:	4c0e      	ldr	r4, [pc, #56]	; (8003f18 <UART_AdvFeatureConfig+0xc8>)
 8003ede:	4022      	ands	r2, r4
 8003ee0:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8003ee2:	4322      	orrs	r2, r4
 8003ee4:	604a      	str	r2, [r1, #4]
 8003ee6:	061b      	lsls	r3, r3, #24
 8003ee8:	d506      	bpl.n	8003ef8 <UART_AdvFeatureConfig+0xa8>
 8003eea:	6802      	ldr	r2, [r0, #0]
 8003eec:	490b      	ldr	r1, [pc, #44]	; (8003f1c <UART_AdvFeatureConfig+0xcc>)
 8003eee:	6853      	ldr	r3, [r2, #4]
 8003ef0:	400b      	ands	r3, r1
 8003ef2:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8003ef4:	430b      	orrs	r3, r1
 8003ef6:	6053      	str	r3, [r2, #4]
 8003ef8:	bd30      	pop	{r4, r5, pc}
 8003efa:	46c0      	nop			; (mov r8, r8)
 8003efc:	fffdffff 	.word	0xfffdffff
 8003f00:	fffeffff 	.word	0xfffeffff
 8003f04:	fffbffff 	.word	0xfffbffff
 8003f08:	ffff7fff 	.word	0xffff7fff
 8003f0c:	ffffefff 	.word	0xffffefff
 8003f10:	ffffdfff 	.word	0xffffdfff
 8003f14:	ffefffff 	.word	0xffefffff
 8003f18:	ff9fffff 	.word	0xff9fffff
 8003f1c:	fff7ffff 	.word	0xfff7ffff

08003f20 <UART_WaitOnFlagUntilTimeout>:
 8003f20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f22:	0004      	movs	r4, r0
 8003f24:	000d      	movs	r5, r1
 8003f26:	0017      	movs	r7, r2
 8003f28:	2608      	movs	r6, #8
 8003f2a:	9300      	str	r3, [sp, #0]
 8003f2c:	6822      	ldr	r2, [r4, #0]
 8003f2e:	69d3      	ldr	r3, [r2, #28]
 8003f30:	402b      	ands	r3, r5
 8003f32:	1b5b      	subs	r3, r3, r5
 8003f34:	4259      	negs	r1, r3
 8003f36:	414b      	adcs	r3, r1
 8003f38:	42bb      	cmp	r3, r7
 8003f3a:	d001      	beq.n	8003f40 <UART_WaitOnFlagUntilTimeout+0x20>
 8003f3c:	2000      	movs	r0, #0
 8003f3e:	e021      	b.n	8003f84 <UART_WaitOnFlagUntilTimeout+0x64>
 8003f40:	9b08      	ldr	r3, [sp, #32]
 8003f42:	3301      	adds	r3, #1
 8003f44:	d0f3      	beq.n	8003f2e <UART_WaitOnFlagUntilTimeout+0xe>
 8003f46:	f7fe f9df 	bl	8002308 <HAL_GetTick>
 8003f4a:	9b00      	ldr	r3, [sp, #0]
 8003f4c:	1ac0      	subs	r0, r0, r3
 8003f4e:	9b08      	ldr	r3, [sp, #32]
 8003f50:	4298      	cmp	r0, r3
 8003f52:	d828      	bhi.n	8003fa6 <UART_WaitOnFlagUntilTimeout+0x86>
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d026      	beq.n	8003fa6 <UART_WaitOnFlagUntilTimeout+0x86>
 8003f58:	2104      	movs	r1, #4
 8003f5a:	6823      	ldr	r3, [r4, #0]
 8003f5c:	681a      	ldr	r2, [r3, #0]
 8003f5e:	420a      	tst	r2, r1
 8003f60:	d0e4      	beq.n	8003f2c <UART_WaitOnFlagUntilTimeout+0xc>
 8003f62:	69da      	ldr	r2, [r3, #28]
 8003f64:	0011      	movs	r1, r2
 8003f66:	4031      	ands	r1, r6
 8003f68:	9101      	str	r1, [sp, #4]
 8003f6a:	4232      	tst	r2, r6
 8003f6c:	d00b      	beq.n	8003f86 <UART_WaitOnFlagUntilTimeout+0x66>
 8003f6e:	0020      	movs	r0, r4
 8003f70:	621e      	str	r6, [r3, #32]
 8003f72:	f7ff fe33 	bl	8003bdc <UART_EndRxTransfer>
 8003f76:	0023      	movs	r3, r4
 8003f78:	3308      	adds	r3, #8
 8003f7a:	67de      	str	r6, [r3, #124]	; 0x7c
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	2001      	movs	r0, #1
 8003f80:	3478      	adds	r4, #120	; 0x78
 8003f82:	7023      	strb	r3, [r4, #0]
 8003f84:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003f86:	2280      	movs	r2, #128	; 0x80
 8003f88:	69d9      	ldr	r1, [r3, #28]
 8003f8a:	0112      	lsls	r2, r2, #4
 8003f8c:	4211      	tst	r1, r2
 8003f8e:	d0cd      	beq.n	8003f2c <UART_WaitOnFlagUntilTimeout+0xc>
 8003f90:	621a      	str	r2, [r3, #32]
 8003f92:	0020      	movs	r0, r4
 8003f94:	f7ff fe22 	bl	8003bdc <UART_EndRxTransfer>
 8003f98:	0023      	movs	r3, r4
 8003f9a:	2220      	movs	r2, #32
 8003f9c:	3308      	adds	r3, #8
 8003f9e:	67da      	str	r2, [r3, #124]	; 0x7c
 8003fa0:	9b01      	ldr	r3, [sp, #4]
 8003fa2:	3478      	adds	r4, #120	; 0x78
 8003fa4:	7023      	strb	r3, [r4, #0]
 8003fa6:	2003      	movs	r0, #3
 8003fa8:	e7ec      	b.n	8003f84 <UART_WaitOnFlagUntilTimeout+0x64>

08003faa <HAL_UART_Transmit>:
 8003faa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003fac:	b085      	sub	sp, #20
 8003fae:	9303      	str	r3, [sp, #12]
 8003fb0:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8003fb2:	0004      	movs	r4, r0
 8003fb4:	000d      	movs	r5, r1
 8003fb6:	0016      	movs	r6, r2
 8003fb8:	2002      	movs	r0, #2
 8003fba:	2b20      	cmp	r3, #32
 8003fbc:	d139      	bne.n	8004032 <HAL_UART_Transmit+0x88>
 8003fbe:	3801      	subs	r0, #1
 8003fc0:	2900      	cmp	r1, #0
 8003fc2:	d036      	beq.n	8004032 <HAL_UART_Transmit+0x88>
 8003fc4:	2a00      	cmp	r2, #0
 8003fc6:	d034      	beq.n	8004032 <HAL_UART_Transmit+0x88>
 8003fc8:	2380      	movs	r3, #128	; 0x80
 8003fca:	68a2      	ldr	r2, [r4, #8]
 8003fcc:	015b      	lsls	r3, r3, #5
 8003fce:	429a      	cmp	r2, r3
 8003fd0:	d104      	bne.n	8003fdc <HAL_UART_Transmit+0x32>
 8003fd2:	6923      	ldr	r3, [r4, #16]
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	d101      	bne.n	8003fdc <HAL_UART_Transmit+0x32>
 8003fd8:	4201      	tst	r1, r0
 8003fda:	d12a      	bne.n	8004032 <HAL_UART_Transmit+0x88>
 8003fdc:	0023      	movs	r3, r4
 8003fde:	2200      	movs	r2, #0
 8003fe0:	3308      	adds	r3, #8
 8003fe2:	67da      	str	r2, [r3, #124]	; 0x7c
 8003fe4:	2321      	movs	r3, #33	; 0x21
 8003fe6:	67e3      	str	r3, [r4, #124]	; 0x7c
 8003fe8:	f7fe f98e 	bl	8002308 <HAL_GetTick>
 8003fec:	0023      	movs	r3, r4
 8003fee:	3350      	adds	r3, #80	; 0x50
 8003ff0:	801e      	strh	r6, [r3, #0]
 8003ff2:	3302      	adds	r3, #2
 8003ff4:	801e      	strh	r6, [r3, #0]
 8003ff6:	9302      	str	r3, [sp, #8]
 8003ff8:	2380      	movs	r3, #128	; 0x80
 8003ffa:	68a2      	ldr	r2, [r4, #8]
 8003ffc:	0007      	movs	r7, r0
 8003ffe:	2600      	movs	r6, #0
 8004000:	015b      	lsls	r3, r3, #5
 8004002:	429a      	cmp	r2, r3
 8004004:	d104      	bne.n	8004010 <HAL_UART_Transmit+0x66>
 8004006:	6923      	ldr	r3, [r4, #16]
 8004008:	42b3      	cmp	r3, r6
 800400a:	d101      	bne.n	8004010 <HAL_UART_Transmit+0x66>
 800400c:	002e      	movs	r6, r5
 800400e:	001d      	movs	r5, r3
 8004010:	0023      	movs	r3, r4
 8004012:	3352      	adds	r3, #82	; 0x52
 8004014:	881b      	ldrh	r3, [r3, #0]
 8004016:	b29a      	uxth	r2, r3
 8004018:	2b00      	cmp	r3, #0
 800401a:	d10c      	bne.n	8004036 <HAL_UART_Transmit+0x8c>
 800401c:	9b03      	ldr	r3, [sp, #12]
 800401e:	2140      	movs	r1, #64	; 0x40
 8004020:	9300      	str	r3, [sp, #0]
 8004022:	0020      	movs	r0, r4
 8004024:	003b      	movs	r3, r7
 8004026:	f7ff ff7b 	bl	8003f20 <UART_WaitOnFlagUntilTimeout>
 800402a:	2320      	movs	r3, #32
 800402c:	67e3      	str	r3, [r4, #124]	; 0x7c
 800402e:	2800      	cmp	r0, #0
 8004030:	d10d      	bne.n	800404e <HAL_UART_Transmit+0xa4>
 8004032:	b005      	add	sp, #20
 8004034:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004036:	9b03      	ldr	r3, [sp, #12]
 8004038:	2200      	movs	r2, #0
 800403a:	9300      	str	r3, [sp, #0]
 800403c:	2180      	movs	r1, #128	; 0x80
 800403e:	003b      	movs	r3, r7
 8004040:	0020      	movs	r0, r4
 8004042:	f7ff ff6d 	bl	8003f20 <UART_WaitOnFlagUntilTimeout>
 8004046:	2800      	cmp	r0, #0
 8004048:	d003      	beq.n	8004052 <HAL_UART_Transmit+0xa8>
 800404a:	2320      	movs	r3, #32
 800404c:	67e3      	str	r3, [r4, #124]	; 0x7c
 800404e:	2003      	movs	r0, #3
 8004050:	e7ef      	b.n	8004032 <HAL_UART_Transmit+0x88>
 8004052:	6822      	ldr	r2, [r4, #0]
 8004054:	2d00      	cmp	r5, #0
 8004056:	d10b      	bne.n	8004070 <HAL_UART_Transmit+0xc6>
 8004058:	8833      	ldrh	r3, [r6, #0]
 800405a:	3602      	adds	r6, #2
 800405c:	05db      	lsls	r3, r3, #23
 800405e:	0ddb      	lsrs	r3, r3, #23
 8004060:	6293      	str	r3, [r2, #40]	; 0x28
 8004062:	9b02      	ldr	r3, [sp, #8]
 8004064:	9a02      	ldr	r2, [sp, #8]
 8004066:	881b      	ldrh	r3, [r3, #0]
 8004068:	3b01      	subs	r3, #1
 800406a:	b29b      	uxth	r3, r3
 800406c:	8013      	strh	r3, [r2, #0]
 800406e:	e7cf      	b.n	8004010 <HAL_UART_Transmit+0x66>
 8004070:	782b      	ldrb	r3, [r5, #0]
 8004072:	3501      	adds	r5, #1
 8004074:	6293      	str	r3, [r2, #40]	; 0x28
 8004076:	e7f4      	b.n	8004062 <HAL_UART_Transmit+0xb8>

08004078 <HAL_UART_Receive>:
 8004078:	b5f0      	push	{r4, r5, r6, r7, lr}
 800407a:	0016      	movs	r6, r2
 800407c:	b087      	sub	sp, #28
 800407e:	1d02      	adds	r2, r0, #4
 8004080:	9305      	str	r3, [sp, #20]
 8004082:	6fd3      	ldr	r3, [r2, #124]	; 0x7c
 8004084:	0004      	movs	r4, r0
 8004086:	000d      	movs	r5, r1
 8004088:	2002      	movs	r0, #2
 800408a:	2b20      	cmp	r3, #32
 800408c:	d160      	bne.n	8004150 <HAL_UART_Receive+0xd8>
 800408e:	3801      	subs	r0, #1
 8004090:	2900      	cmp	r1, #0
 8004092:	d05d      	beq.n	8004150 <HAL_UART_Receive+0xd8>
 8004094:	2e00      	cmp	r6, #0
 8004096:	d05b      	beq.n	8004150 <HAL_UART_Receive+0xd8>
 8004098:	2380      	movs	r3, #128	; 0x80
 800409a:	68a1      	ldr	r1, [r4, #8]
 800409c:	015b      	lsls	r3, r3, #5
 800409e:	4299      	cmp	r1, r3
 80040a0:	d104      	bne.n	80040ac <HAL_UART_Receive+0x34>
 80040a2:	6923      	ldr	r3, [r4, #16]
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d101      	bne.n	80040ac <HAL_UART_Receive+0x34>
 80040a8:	4205      	tst	r5, r0
 80040aa:	d151      	bne.n	8004150 <HAL_UART_Receive+0xd8>
 80040ac:	0023      	movs	r3, r4
 80040ae:	2700      	movs	r7, #0
 80040b0:	3308      	adds	r3, #8
 80040b2:	67df      	str	r7, [r3, #124]	; 0x7c
 80040b4:	2322      	movs	r3, #34	; 0x22
 80040b6:	67d3      	str	r3, [r2, #124]	; 0x7c
 80040b8:	6627      	str	r7, [r4, #96]	; 0x60
 80040ba:	f7fe f925 	bl	8002308 <HAL_GetTick>
 80040be:	0023      	movs	r3, r4
 80040c0:	2180      	movs	r1, #128	; 0x80
 80040c2:	3358      	adds	r3, #88	; 0x58
 80040c4:	68a2      	ldr	r2, [r4, #8]
 80040c6:	801e      	strh	r6, [r3, #0]
 80040c8:	3302      	adds	r3, #2
 80040ca:	9303      	str	r3, [sp, #12]
 80040cc:	801e      	strh	r6, [r3, #0]
 80040ce:	9004      	str	r0, [sp, #16]
 80040d0:	0149      	lsls	r1, r1, #5
 80040d2:	3302      	adds	r3, #2
 80040d4:	428a      	cmp	r2, r1
 80040d6:	d11b      	bne.n	8004110 <HAL_UART_Receive+0x98>
 80040d8:	6921      	ldr	r1, [r4, #16]
 80040da:	42b9      	cmp	r1, r7
 80040dc:	d116      	bne.n	800410c <HAL_UART_Receive+0x94>
 80040de:	4926      	ldr	r1, [pc, #152]	; (8004178 <HAL_UART_Receive+0x100>)
 80040e0:	8019      	strh	r1, [r3, #0]
 80040e2:	881f      	ldrh	r7, [r3, #0]
 80040e4:	2380      	movs	r3, #128	; 0x80
 80040e6:	2600      	movs	r6, #0
 80040e8:	015b      	lsls	r3, r3, #5
 80040ea:	429a      	cmp	r2, r3
 80040ec:	d104      	bne.n	80040f8 <HAL_UART_Receive+0x80>
 80040ee:	6923      	ldr	r3, [r4, #16]
 80040f0:	42b3      	cmp	r3, r6
 80040f2:	d101      	bne.n	80040f8 <HAL_UART_Receive+0x80>
 80040f4:	002e      	movs	r6, r5
 80040f6:	001d      	movs	r5, r3
 80040f8:	0023      	movs	r3, r4
 80040fa:	335a      	adds	r3, #90	; 0x5a
 80040fc:	881b      	ldrh	r3, [r3, #0]
 80040fe:	b298      	uxth	r0, r3
 8004100:	2b00      	cmp	r3, #0
 8004102:	d117      	bne.n	8004134 <HAL_UART_Receive+0xbc>
 8004104:	3404      	adds	r4, #4
 8004106:	3320      	adds	r3, #32
 8004108:	67e3      	str	r3, [r4, #124]	; 0x7c
 800410a:	e021      	b.n	8004150 <HAL_UART_Receive+0xd8>
 800410c:	21ff      	movs	r1, #255	; 0xff
 800410e:	e7e7      	b.n	80040e0 <HAL_UART_Receive+0x68>
 8004110:	2a00      	cmp	r2, #0
 8004112:	d104      	bne.n	800411e <HAL_UART_Receive+0xa6>
 8004114:	6921      	ldr	r1, [r4, #16]
 8004116:	2900      	cmp	r1, #0
 8004118:	d0f8      	beq.n	800410c <HAL_UART_Receive+0x94>
 800411a:	217f      	movs	r1, #127	; 0x7f
 800411c:	e7e0      	b.n	80040e0 <HAL_UART_Receive+0x68>
 800411e:	2180      	movs	r1, #128	; 0x80
 8004120:	0549      	lsls	r1, r1, #21
 8004122:	428a      	cmp	r2, r1
 8004124:	d104      	bne.n	8004130 <HAL_UART_Receive+0xb8>
 8004126:	6921      	ldr	r1, [r4, #16]
 8004128:	2900      	cmp	r1, #0
 800412a:	d0f6      	beq.n	800411a <HAL_UART_Receive+0xa2>
 800412c:	213f      	movs	r1, #63	; 0x3f
 800412e:	e7d7      	b.n	80040e0 <HAL_UART_Receive+0x68>
 8004130:	801f      	strh	r7, [r3, #0]
 8004132:	e7d6      	b.n	80040e2 <HAL_UART_Receive+0x6a>
 8004134:	9b05      	ldr	r3, [sp, #20]
 8004136:	2200      	movs	r2, #0
 8004138:	9300      	str	r3, [sp, #0]
 800413a:	2120      	movs	r1, #32
 800413c:	0020      	movs	r0, r4
 800413e:	9b04      	ldr	r3, [sp, #16]
 8004140:	f7ff feee 	bl	8003f20 <UART_WaitOnFlagUntilTimeout>
 8004144:	2800      	cmp	r0, #0
 8004146:	d005      	beq.n	8004154 <HAL_UART_Receive+0xdc>
 8004148:	2320      	movs	r3, #32
 800414a:	2003      	movs	r0, #3
 800414c:	3404      	adds	r4, #4
 800414e:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004150:	b007      	add	sp, #28
 8004152:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004154:	6823      	ldr	r3, [r4, #0]
 8004156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004158:	403b      	ands	r3, r7
 800415a:	2d00      	cmp	r5, #0
 800415c:	d108      	bne.n	8004170 <HAL_UART_Receive+0xf8>
 800415e:	8033      	strh	r3, [r6, #0]
 8004160:	3602      	adds	r6, #2
 8004162:	9b03      	ldr	r3, [sp, #12]
 8004164:	9a03      	ldr	r2, [sp, #12]
 8004166:	881b      	ldrh	r3, [r3, #0]
 8004168:	3b01      	subs	r3, #1
 800416a:	b29b      	uxth	r3, r3
 800416c:	8013      	strh	r3, [r2, #0]
 800416e:	e7c3      	b.n	80040f8 <HAL_UART_Receive+0x80>
 8004170:	702b      	strb	r3, [r5, #0]
 8004172:	3501      	adds	r5, #1
 8004174:	e7f5      	b.n	8004162 <HAL_UART_Receive+0xea>
 8004176:	46c0      	nop			; (mov r8, r8)
 8004178:	000001ff 	.word	0x000001ff

0800417c <UART_CheckIdleState>:
 800417c:	0003      	movs	r3, r0
 800417e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004180:	2500      	movs	r5, #0
 8004182:	0004      	movs	r4, r0
 8004184:	3308      	adds	r3, #8
 8004186:	67dd      	str	r5, [r3, #124]	; 0x7c
 8004188:	f7fe f8be 	bl	8002308 <HAL_GetTick>
 800418c:	0026      	movs	r6, r4
 800418e:	6823      	ldr	r3, [r4, #0]
 8004190:	0007      	movs	r7, r0
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	3678      	adds	r6, #120	; 0x78
 8004196:	071b      	lsls	r3, r3, #28
 8004198:	d51b      	bpl.n	80041d2 <UART_CheckIdleState+0x56>
 800419a:	2180      	movs	r1, #128	; 0x80
 800419c:	4b26      	ldr	r3, [pc, #152]	; (8004238 <UART_CheckIdleState+0xbc>)
 800419e:	002a      	movs	r2, r5
 80041a0:	9300      	str	r3, [sp, #0]
 80041a2:	0389      	lsls	r1, r1, #14
 80041a4:	0003      	movs	r3, r0
 80041a6:	0020      	movs	r0, r4
 80041a8:	f7ff feba 	bl	8003f20 <UART_WaitOnFlagUntilTimeout>
 80041ac:	42a8      	cmp	r0, r5
 80041ae:	d010      	beq.n	80041d2 <UART_CheckIdleState+0x56>
 80041b0:	f3ef 8110 	mrs	r1, PRIMASK
 80041b4:	2301      	movs	r3, #1
 80041b6:	f383 8810 	msr	PRIMASK, r3
 80041ba:	2080      	movs	r0, #128	; 0x80
 80041bc:	6822      	ldr	r2, [r4, #0]
 80041be:	6813      	ldr	r3, [r2, #0]
 80041c0:	4383      	bics	r3, r0
 80041c2:	6013      	str	r3, [r2, #0]
 80041c4:	f381 8810 	msr	PRIMASK, r1
 80041c8:	2320      	movs	r3, #32
 80041ca:	67e3      	str	r3, [r4, #124]	; 0x7c
 80041cc:	7035      	strb	r5, [r6, #0]
 80041ce:	2003      	movs	r0, #3
 80041d0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80041d2:	0025      	movs	r5, r4
 80041d4:	cd08      	ldmia	r5!, {r3}
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	075b      	lsls	r3, r3, #29
 80041da:	d525      	bpl.n	8004228 <UART_CheckIdleState+0xac>
 80041dc:	2180      	movs	r1, #128	; 0x80
 80041de:	4b16      	ldr	r3, [pc, #88]	; (8004238 <UART_CheckIdleState+0xbc>)
 80041e0:	2200      	movs	r2, #0
 80041e2:	9300      	str	r3, [sp, #0]
 80041e4:	0020      	movs	r0, r4
 80041e6:	003b      	movs	r3, r7
 80041e8:	03c9      	lsls	r1, r1, #15
 80041ea:	f7ff fe99 	bl	8003f20 <UART_WaitOnFlagUntilTimeout>
 80041ee:	2800      	cmp	r0, #0
 80041f0:	d01a      	beq.n	8004228 <UART_CheckIdleState+0xac>
 80041f2:	f3ef 8010 	mrs	r0, PRIMASK
 80041f6:	2201      	movs	r2, #1
 80041f8:	f382 8810 	msr	PRIMASK, r2
 80041fc:	6821      	ldr	r1, [r4, #0]
 80041fe:	4f0f      	ldr	r7, [pc, #60]	; (800423c <UART_CheckIdleState+0xc0>)
 8004200:	680b      	ldr	r3, [r1, #0]
 8004202:	403b      	ands	r3, r7
 8004204:	600b      	str	r3, [r1, #0]
 8004206:	f380 8810 	msr	PRIMASK, r0
 800420a:	f3ef 8010 	mrs	r0, PRIMASK
 800420e:	f382 8810 	msr	PRIMASK, r2
 8004212:	6821      	ldr	r1, [r4, #0]
 8004214:	688b      	ldr	r3, [r1, #8]
 8004216:	4393      	bics	r3, r2
 8004218:	608b      	str	r3, [r1, #8]
 800421a:	f380 8810 	msr	PRIMASK, r0
 800421e:	2320      	movs	r3, #32
 8004220:	67eb      	str	r3, [r5, #124]	; 0x7c
 8004222:	2300      	movs	r3, #0
 8004224:	7033      	strb	r3, [r6, #0]
 8004226:	e7d2      	b.n	80041ce <UART_CheckIdleState+0x52>
 8004228:	2000      	movs	r0, #0
 800422a:	2320      	movs	r3, #32
 800422c:	67e3      	str	r3, [r4, #124]	; 0x7c
 800422e:	67eb      	str	r3, [r5, #124]	; 0x7c
 8004230:	6620      	str	r0, [r4, #96]	; 0x60
 8004232:	6660      	str	r0, [r4, #100]	; 0x64
 8004234:	7030      	strb	r0, [r6, #0]
 8004236:	e7cb      	b.n	80041d0 <UART_CheckIdleState+0x54>
 8004238:	01ffffff 	.word	0x01ffffff
 800423c:	fffffedf 	.word	0xfffffedf

08004240 <HAL_UART_Init>:
 8004240:	b510      	push	{r4, lr}
 8004242:	1e04      	subs	r4, r0, #0
 8004244:	d101      	bne.n	800424a <HAL_UART_Init+0xa>
 8004246:	2001      	movs	r0, #1
 8004248:	bd10      	pop	{r4, pc}
 800424a:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 800424c:	2b00      	cmp	r3, #0
 800424e:	d104      	bne.n	800425a <HAL_UART_Init+0x1a>
 8004250:	0002      	movs	r2, r0
 8004252:	3278      	adds	r2, #120	; 0x78
 8004254:	7013      	strb	r3, [r2, #0]
 8004256:	f7fd ff91 	bl	800217c <HAL_UART_MspInit>
 800425a:	2324      	movs	r3, #36	; 0x24
 800425c:	2101      	movs	r1, #1
 800425e:	6822      	ldr	r2, [r4, #0]
 8004260:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004262:	6813      	ldr	r3, [r2, #0]
 8004264:	0020      	movs	r0, r4
 8004266:	438b      	bics	r3, r1
 8004268:	6013      	str	r3, [r2, #0]
 800426a:	f7ff fce5 	bl	8003c38 <UART_SetConfig>
 800426e:	2801      	cmp	r0, #1
 8004270:	d0e9      	beq.n	8004246 <HAL_UART_Init+0x6>
 8004272:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004274:	2b00      	cmp	r3, #0
 8004276:	d002      	beq.n	800427e <HAL_UART_Init+0x3e>
 8004278:	0020      	movs	r0, r4
 800427a:	f7ff fde9 	bl	8003e50 <UART_AdvFeatureConfig>
 800427e:	6823      	ldr	r3, [r4, #0]
 8004280:	4907      	ldr	r1, [pc, #28]	; (80042a0 <HAL_UART_Init+0x60>)
 8004282:	685a      	ldr	r2, [r3, #4]
 8004284:	0020      	movs	r0, r4
 8004286:	400a      	ands	r2, r1
 8004288:	212a      	movs	r1, #42	; 0x2a
 800428a:	605a      	str	r2, [r3, #4]
 800428c:	689a      	ldr	r2, [r3, #8]
 800428e:	438a      	bics	r2, r1
 8004290:	609a      	str	r2, [r3, #8]
 8004292:	2201      	movs	r2, #1
 8004294:	6819      	ldr	r1, [r3, #0]
 8004296:	430a      	orrs	r2, r1
 8004298:	601a      	str	r2, [r3, #0]
 800429a:	f7ff ff6f 	bl	800417c <UART_CheckIdleState>
 800429e:	e7d3      	b.n	8004248 <HAL_UART_Init+0x8>
 80042a0:	ffffb7ff 	.word	0xffffb7ff

080042a4 <__errno>:
 80042a4:	4b01      	ldr	r3, [pc, #4]	; (80042ac <__errno+0x8>)
 80042a6:	6818      	ldr	r0, [r3, #0]
 80042a8:	4770      	bx	lr
 80042aa:	46c0      	nop			; (mov r8, r8)
 80042ac:	2000019c 	.word	0x2000019c

080042b0 <__libc_init_array>:
 80042b0:	b570      	push	{r4, r5, r6, lr}
 80042b2:	2600      	movs	r6, #0
 80042b4:	4d0c      	ldr	r5, [pc, #48]	; (80042e8 <__libc_init_array+0x38>)
 80042b6:	4c0d      	ldr	r4, [pc, #52]	; (80042ec <__libc_init_array+0x3c>)
 80042b8:	1b64      	subs	r4, r4, r5
 80042ba:	10a4      	asrs	r4, r4, #2
 80042bc:	42a6      	cmp	r6, r4
 80042be:	d109      	bne.n	80042d4 <__libc_init_array+0x24>
 80042c0:	2600      	movs	r6, #0
 80042c2:	f000 fc9f 	bl	8004c04 <_init>
 80042c6:	4d0a      	ldr	r5, [pc, #40]	; (80042f0 <__libc_init_array+0x40>)
 80042c8:	4c0a      	ldr	r4, [pc, #40]	; (80042f4 <__libc_init_array+0x44>)
 80042ca:	1b64      	subs	r4, r4, r5
 80042cc:	10a4      	asrs	r4, r4, #2
 80042ce:	42a6      	cmp	r6, r4
 80042d0:	d105      	bne.n	80042de <__libc_init_array+0x2e>
 80042d2:	bd70      	pop	{r4, r5, r6, pc}
 80042d4:	00b3      	lsls	r3, r6, #2
 80042d6:	58eb      	ldr	r3, [r5, r3]
 80042d8:	4798      	blx	r3
 80042da:	3601      	adds	r6, #1
 80042dc:	e7ee      	b.n	80042bc <__libc_init_array+0xc>
 80042de:	00b3      	lsls	r3, r6, #2
 80042e0:	58eb      	ldr	r3, [r5, r3]
 80042e2:	4798      	blx	r3
 80042e4:	3601      	adds	r6, #1
 80042e6:	e7f2      	b.n	80042ce <__libc_init_array+0x1e>
 80042e8:	08005308 	.word	0x08005308
 80042ec:	08005308 	.word	0x08005308
 80042f0:	08005308 	.word	0x08005308
 80042f4:	0800530c 	.word	0x0800530c

080042f8 <malloc>:
 80042f8:	b510      	push	{r4, lr}
 80042fa:	4b03      	ldr	r3, [pc, #12]	; (8004308 <malloc+0x10>)
 80042fc:	0001      	movs	r1, r0
 80042fe:	6818      	ldr	r0, [r3, #0]
 8004300:	f000 f88c 	bl	800441c <_malloc_r>
 8004304:	bd10      	pop	{r4, pc}
 8004306:	46c0      	nop			; (mov r8, r8)
 8004308:	2000019c 	.word	0x2000019c

0800430c <free>:
 800430c:	b510      	push	{r4, lr}
 800430e:	4b03      	ldr	r3, [pc, #12]	; (800431c <free+0x10>)
 8004310:	0001      	movs	r1, r0
 8004312:	6818      	ldr	r0, [r3, #0]
 8004314:	f000 f816 	bl	8004344 <_free_r>
 8004318:	bd10      	pop	{r4, pc}
 800431a:	46c0      	nop			; (mov r8, r8)
 800431c:	2000019c 	.word	0x2000019c

08004320 <memcpy>:
 8004320:	2300      	movs	r3, #0
 8004322:	b510      	push	{r4, lr}
 8004324:	429a      	cmp	r2, r3
 8004326:	d100      	bne.n	800432a <memcpy+0xa>
 8004328:	bd10      	pop	{r4, pc}
 800432a:	5ccc      	ldrb	r4, [r1, r3]
 800432c:	54c4      	strb	r4, [r0, r3]
 800432e:	3301      	adds	r3, #1
 8004330:	e7f8      	b.n	8004324 <memcpy+0x4>

08004332 <memset>:
 8004332:	0003      	movs	r3, r0
 8004334:	1882      	adds	r2, r0, r2
 8004336:	4293      	cmp	r3, r2
 8004338:	d100      	bne.n	800433c <memset+0xa>
 800433a:	4770      	bx	lr
 800433c:	7019      	strb	r1, [r3, #0]
 800433e:	3301      	adds	r3, #1
 8004340:	e7f9      	b.n	8004336 <memset+0x4>
	...

08004344 <_free_r>:
 8004344:	b570      	push	{r4, r5, r6, lr}
 8004346:	0005      	movs	r5, r0
 8004348:	2900      	cmp	r1, #0
 800434a:	d010      	beq.n	800436e <_free_r+0x2a>
 800434c:	1f0c      	subs	r4, r1, #4
 800434e:	6823      	ldr	r3, [r4, #0]
 8004350:	2b00      	cmp	r3, #0
 8004352:	da00      	bge.n	8004356 <_free_r+0x12>
 8004354:	18e4      	adds	r4, r4, r3
 8004356:	0028      	movs	r0, r5
 8004358:	f000 f908 	bl	800456c <__malloc_lock>
 800435c:	4a1d      	ldr	r2, [pc, #116]	; (80043d4 <_free_r+0x90>)
 800435e:	6813      	ldr	r3, [r2, #0]
 8004360:	2b00      	cmp	r3, #0
 8004362:	d105      	bne.n	8004370 <_free_r+0x2c>
 8004364:	6063      	str	r3, [r4, #4]
 8004366:	6014      	str	r4, [r2, #0]
 8004368:	0028      	movs	r0, r5
 800436a:	f000 f907 	bl	800457c <__malloc_unlock>
 800436e:	bd70      	pop	{r4, r5, r6, pc}
 8004370:	42a3      	cmp	r3, r4
 8004372:	d908      	bls.n	8004386 <_free_r+0x42>
 8004374:	6821      	ldr	r1, [r4, #0]
 8004376:	1860      	adds	r0, r4, r1
 8004378:	4283      	cmp	r3, r0
 800437a:	d1f3      	bne.n	8004364 <_free_r+0x20>
 800437c:	6818      	ldr	r0, [r3, #0]
 800437e:	685b      	ldr	r3, [r3, #4]
 8004380:	1841      	adds	r1, r0, r1
 8004382:	6021      	str	r1, [r4, #0]
 8004384:	e7ee      	b.n	8004364 <_free_r+0x20>
 8004386:	001a      	movs	r2, r3
 8004388:	685b      	ldr	r3, [r3, #4]
 800438a:	2b00      	cmp	r3, #0
 800438c:	d001      	beq.n	8004392 <_free_r+0x4e>
 800438e:	42a3      	cmp	r3, r4
 8004390:	d9f9      	bls.n	8004386 <_free_r+0x42>
 8004392:	6811      	ldr	r1, [r2, #0]
 8004394:	1850      	adds	r0, r2, r1
 8004396:	42a0      	cmp	r0, r4
 8004398:	d10b      	bne.n	80043b2 <_free_r+0x6e>
 800439a:	6820      	ldr	r0, [r4, #0]
 800439c:	1809      	adds	r1, r1, r0
 800439e:	1850      	adds	r0, r2, r1
 80043a0:	6011      	str	r1, [r2, #0]
 80043a2:	4283      	cmp	r3, r0
 80043a4:	d1e0      	bne.n	8004368 <_free_r+0x24>
 80043a6:	6818      	ldr	r0, [r3, #0]
 80043a8:	685b      	ldr	r3, [r3, #4]
 80043aa:	1841      	adds	r1, r0, r1
 80043ac:	6011      	str	r1, [r2, #0]
 80043ae:	6053      	str	r3, [r2, #4]
 80043b0:	e7da      	b.n	8004368 <_free_r+0x24>
 80043b2:	42a0      	cmp	r0, r4
 80043b4:	d902      	bls.n	80043bc <_free_r+0x78>
 80043b6:	230c      	movs	r3, #12
 80043b8:	602b      	str	r3, [r5, #0]
 80043ba:	e7d5      	b.n	8004368 <_free_r+0x24>
 80043bc:	6821      	ldr	r1, [r4, #0]
 80043be:	1860      	adds	r0, r4, r1
 80043c0:	4283      	cmp	r3, r0
 80043c2:	d103      	bne.n	80043cc <_free_r+0x88>
 80043c4:	6818      	ldr	r0, [r3, #0]
 80043c6:	685b      	ldr	r3, [r3, #4]
 80043c8:	1841      	adds	r1, r0, r1
 80043ca:	6021      	str	r1, [r4, #0]
 80043cc:	6063      	str	r3, [r4, #4]
 80043ce:	6054      	str	r4, [r2, #4]
 80043d0:	e7ca      	b.n	8004368 <_free_r+0x24>
 80043d2:	46c0      	nop			; (mov r8, r8)
 80043d4:	200003c0 	.word	0x200003c0

080043d8 <sbrk_aligned>:
 80043d8:	b570      	push	{r4, r5, r6, lr}
 80043da:	4e0f      	ldr	r6, [pc, #60]	; (8004418 <sbrk_aligned+0x40>)
 80043dc:	000d      	movs	r5, r1
 80043de:	6831      	ldr	r1, [r6, #0]
 80043e0:	0004      	movs	r4, r0
 80043e2:	2900      	cmp	r1, #0
 80043e4:	d102      	bne.n	80043ec <sbrk_aligned+0x14>
 80043e6:	f000 f88f 	bl	8004508 <_sbrk_r>
 80043ea:	6030      	str	r0, [r6, #0]
 80043ec:	0029      	movs	r1, r5
 80043ee:	0020      	movs	r0, r4
 80043f0:	f000 f88a 	bl	8004508 <_sbrk_r>
 80043f4:	1c43      	adds	r3, r0, #1
 80043f6:	d00a      	beq.n	800440e <sbrk_aligned+0x36>
 80043f8:	2303      	movs	r3, #3
 80043fa:	1cc5      	adds	r5, r0, #3
 80043fc:	439d      	bics	r5, r3
 80043fe:	42a8      	cmp	r0, r5
 8004400:	d007      	beq.n	8004412 <sbrk_aligned+0x3a>
 8004402:	1a29      	subs	r1, r5, r0
 8004404:	0020      	movs	r0, r4
 8004406:	f000 f87f 	bl	8004508 <_sbrk_r>
 800440a:	1c43      	adds	r3, r0, #1
 800440c:	d101      	bne.n	8004412 <sbrk_aligned+0x3a>
 800440e:	2501      	movs	r5, #1
 8004410:	426d      	negs	r5, r5
 8004412:	0028      	movs	r0, r5
 8004414:	bd70      	pop	{r4, r5, r6, pc}
 8004416:	46c0      	nop			; (mov r8, r8)
 8004418:	200003c4 	.word	0x200003c4

0800441c <_malloc_r>:
 800441c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800441e:	2203      	movs	r2, #3
 8004420:	1ccb      	adds	r3, r1, #3
 8004422:	4393      	bics	r3, r2
 8004424:	3308      	adds	r3, #8
 8004426:	0006      	movs	r6, r0
 8004428:	001f      	movs	r7, r3
 800442a:	2b0c      	cmp	r3, #12
 800442c:	d232      	bcs.n	8004494 <_malloc_r+0x78>
 800442e:	270c      	movs	r7, #12
 8004430:	42b9      	cmp	r1, r7
 8004432:	d831      	bhi.n	8004498 <_malloc_r+0x7c>
 8004434:	0030      	movs	r0, r6
 8004436:	f000 f899 	bl	800456c <__malloc_lock>
 800443a:	4d32      	ldr	r5, [pc, #200]	; (8004504 <_malloc_r+0xe8>)
 800443c:	682b      	ldr	r3, [r5, #0]
 800443e:	001c      	movs	r4, r3
 8004440:	2c00      	cmp	r4, #0
 8004442:	d12e      	bne.n	80044a2 <_malloc_r+0x86>
 8004444:	0039      	movs	r1, r7
 8004446:	0030      	movs	r0, r6
 8004448:	f7ff ffc6 	bl	80043d8 <sbrk_aligned>
 800444c:	0004      	movs	r4, r0
 800444e:	1c43      	adds	r3, r0, #1
 8004450:	d11e      	bne.n	8004490 <_malloc_r+0x74>
 8004452:	682c      	ldr	r4, [r5, #0]
 8004454:	0025      	movs	r5, r4
 8004456:	2d00      	cmp	r5, #0
 8004458:	d14a      	bne.n	80044f0 <_malloc_r+0xd4>
 800445a:	6823      	ldr	r3, [r4, #0]
 800445c:	0029      	movs	r1, r5
 800445e:	18e3      	adds	r3, r4, r3
 8004460:	0030      	movs	r0, r6
 8004462:	9301      	str	r3, [sp, #4]
 8004464:	f000 f850 	bl	8004508 <_sbrk_r>
 8004468:	9b01      	ldr	r3, [sp, #4]
 800446a:	4283      	cmp	r3, r0
 800446c:	d143      	bne.n	80044f6 <_malloc_r+0xda>
 800446e:	6823      	ldr	r3, [r4, #0]
 8004470:	3703      	adds	r7, #3
 8004472:	1aff      	subs	r7, r7, r3
 8004474:	2303      	movs	r3, #3
 8004476:	439f      	bics	r7, r3
 8004478:	3708      	adds	r7, #8
 800447a:	2f0c      	cmp	r7, #12
 800447c:	d200      	bcs.n	8004480 <_malloc_r+0x64>
 800447e:	270c      	movs	r7, #12
 8004480:	0039      	movs	r1, r7
 8004482:	0030      	movs	r0, r6
 8004484:	f7ff ffa8 	bl	80043d8 <sbrk_aligned>
 8004488:	1c43      	adds	r3, r0, #1
 800448a:	d034      	beq.n	80044f6 <_malloc_r+0xda>
 800448c:	6823      	ldr	r3, [r4, #0]
 800448e:	19df      	adds	r7, r3, r7
 8004490:	6027      	str	r7, [r4, #0]
 8004492:	e013      	b.n	80044bc <_malloc_r+0xa0>
 8004494:	2b00      	cmp	r3, #0
 8004496:	dacb      	bge.n	8004430 <_malloc_r+0x14>
 8004498:	230c      	movs	r3, #12
 800449a:	2500      	movs	r5, #0
 800449c:	6033      	str	r3, [r6, #0]
 800449e:	0028      	movs	r0, r5
 80044a0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80044a2:	6822      	ldr	r2, [r4, #0]
 80044a4:	1bd1      	subs	r1, r2, r7
 80044a6:	d420      	bmi.n	80044ea <_malloc_r+0xce>
 80044a8:	290b      	cmp	r1, #11
 80044aa:	d917      	bls.n	80044dc <_malloc_r+0xc0>
 80044ac:	19e2      	adds	r2, r4, r7
 80044ae:	6027      	str	r7, [r4, #0]
 80044b0:	42a3      	cmp	r3, r4
 80044b2:	d111      	bne.n	80044d8 <_malloc_r+0xbc>
 80044b4:	602a      	str	r2, [r5, #0]
 80044b6:	6863      	ldr	r3, [r4, #4]
 80044b8:	6011      	str	r1, [r2, #0]
 80044ba:	6053      	str	r3, [r2, #4]
 80044bc:	0030      	movs	r0, r6
 80044be:	0025      	movs	r5, r4
 80044c0:	f000 f85c 	bl	800457c <__malloc_unlock>
 80044c4:	2207      	movs	r2, #7
 80044c6:	350b      	adds	r5, #11
 80044c8:	1d23      	adds	r3, r4, #4
 80044ca:	4395      	bics	r5, r2
 80044cc:	1aea      	subs	r2, r5, r3
 80044ce:	429d      	cmp	r5, r3
 80044d0:	d0e5      	beq.n	800449e <_malloc_r+0x82>
 80044d2:	1b5b      	subs	r3, r3, r5
 80044d4:	50a3      	str	r3, [r4, r2]
 80044d6:	e7e2      	b.n	800449e <_malloc_r+0x82>
 80044d8:	605a      	str	r2, [r3, #4]
 80044da:	e7ec      	b.n	80044b6 <_malloc_r+0x9a>
 80044dc:	6862      	ldr	r2, [r4, #4]
 80044de:	42a3      	cmp	r3, r4
 80044e0:	d101      	bne.n	80044e6 <_malloc_r+0xca>
 80044e2:	602a      	str	r2, [r5, #0]
 80044e4:	e7ea      	b.n	80044bc <_malloc_r+0xa0>
 80044e6:	605a      	str	r2, [r3, #4]
 80044e8:	e7e8      	b.n	80044bc <_malloc_r+0xa0>
 80044ea:	0023      	movs	r3, r4
 80044ec:	6864      	ldr	r4, [r4, #4]
 80044ee:	e7a7      	b.n	8004440 <_malloc_r+0x24>
 80044f0:	002c      	movs	r4, r5
 80044f2:	686d      	ldr	r5, [r5, #4]
 80044f4:	e7af      	b.n	8004456 <_malloc_r+0x3a>
 80044f6:	230c      	movs	r3, #12
 80044f8:	0030      	movs	r0, r6
 80044fa:	6033      	str	r3, [r6, #0]
 80044fc:	f000 f83e 	bl	800457c <__malloc_unlock>
 8004500:	e7cd      	b.n	800449e <_malloc_r+0x82>
 8004502:	46c0      	nop			; (mov r8, r8)
 8004504:	200003c0 	.word	0x200003c0

08004508 <_sbrk_r>:
 8004508:	2300      	movs	r3, #0
 800450a:	b570      	push	{r4, r5, r6, lr}
 800450c:	4d06      	ldr	r5, [pc, #24]	; (8004528 <_sbrk_r+0x20>)
 800450e:	0004      	movs	r4, r0
 8004510:	0008      	movs	r0, r1
 8004512:	602b      	str	r3, [r5, #0]
 8004514:	f7fd fe68 	bl	80021e8 <_sbrk>
 8004518:	1c43      	adds	r3, r0, #1
 800451a:	d103      	bne.n	8004524 <_sbrk_r+0x1c>
 800451c:	682b      	ldr	r3, [r5, #0]
 800451e:	2b00      	cmp	r3, #0
 8004520:	d000      	beq.n	8004524 <_sbrk_r+0x1c>
 8004522:	6023      	str	r3, [r4, #0]
 8004524:	bd70      	pop	{r4, r5, r6, pc}
 8004526:	46c0      	nop			; (mov r8, r8)
 8004528:	200003c8 	.word	0x200003c8

0800452c <siprintf>:
 800452c:	b40e      	push	{r1, r2, r3}
 800452e:	b500      	push	{lr}
 8004530:	490b      	ldr	r1, [pc, #44]	; (8004560 <siprintf+0x34>)
 8004532:	b09c      	sub	sp, #112	; 0x70
 8004534:	ab1d      	add	r3, sp, #116	; 0x74
 8004536:	9002      	str	r0, [sp, #8]
 8004538:	9006      	str	r0, [sp, #24]
 800453a:	9107      	str	r1, [sp, #28]
 800453c:	9104      	str	r1, [sp, #16]
 800453e:	4809      	ldr	r0, [pc, #36]	; (8004564 <siprintf+0x38>)
 8004540:	4909      	ldr	r1, [pc, #36]	; (8004568 <siprintf+0x3c>)
 8004542:	cb04      	ldmia	r3!, {r2}
 8004544:	9105      	str	r1, [sp, #20]
 8004546:	6800      	ldr	r0, [r0, #0]
 8004548:	a902      	add	r1, sp, #8
 800454a:	9301      	str	r3, [sp, #4]
 800454c:	f000 f880 	bl	8004650 <_svfiprintf_r>
 8004550:	2300      	movs	r3, #0
 8004552:	9a02      	ldr	r2, [sp, #8]
 8004554:	7013      	strb	r3, [r2, #0]
 8004556:	b01c      	add	sp, #112	; 0x70
 8004558:	bc08      	pop	{r3}
 800455a:	b003      	add	sp, #12
 800455c:	4718      	bx	r3
 800455e:	46c0      	nop			; (mov r8, r8)
 8004560:	7fffffff 	.word	0x7fffffff
 8004564:	2000019c 	.word	0x2000019c
 8004568:	ffff0208 	.word	0xffff0208

0800456c <__malloc_lock>:
 800456c:	b510      	push	{r4, lr}
 800456e:	4802      	ldr	r0, [pc, #8]	; (8004578 <__malloc_lock+0xc>)
 8004570:	f000 faf0 	bl	8004b54 <__retarget_lock_acquire_recursive>
 8004574:	bd10      	pop	{r4, pc}
 8004576:	46c0      	nop			; (mov r8, r8)
 8004578:	200003cc 	.word	0x200003cc

0800457c <__malloc_unlock>:
 800457c:	b510      	push	{r4, lr}
 800457e:	4802      	ldr	r0, [pc, #8]	; (8004588 <__malloc_unlock+0xc>)
 8004580:	f000 fae9 	bl	8004b56 <__retarget_lock_release_recursive>
 8004584:	bd10      	pop	{r4, pc}
 8004586:	46c0      	nop			; (mov r8, r8)
 8004588:	200003cc 	.word	0x200003cc

0800458c <__ssputs_r>:
 800458c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800458e:	688e      	ldr	r6, [r1, #8]
 8004590:	b085      	sub	sp, #20
 8004592:	0007      	movs	r7, r0
 8004594:	000c      	movs	r4, r1
 8004596:	9203      	str	r2, [sp, #12]
 8004598:	9301      	str	r3, [sp, #4]
 800459a:	429e      	cmp	r6, r3
 800459c:	d83c      	bhi.n	8004618 <__ssputs_r+0x8c>
 800459e:	2390      	movs	r3, #144	; 0x90
 80045a0:	898a      	ldrh	r2, [r1, #12]
 80045a2:	00db      	lsls	r3, r3, #3
 80045a4:	421a      	tst	r2, r3
 80045a6:	d034      	beq.n	8004612 <__ssputs_r+0x86>
 80045a8:	6909      	ldr	r1, [r1, #16]
 80045aa:	6823      	ldr	r3, [r4, #0]
 80045ac:	6960      	ldr	r0, [r4, #20]
 80045ae:	1a5b      	subs	r3, r3, r1
 80045b0:	9302      	str	r3, [sp, #8]
 80045b2:	2303      	movs	r3, #3
 80045b4:	4343      	muls	r3, r0
 80045b6:	0fdd      	lsrs	r5, r3, #31
 80045b8:	18ed      	adds	r5, r5, r3
 80045ba:	9b01      	ldr	r3, [sp, #4]
 80045bc:	9802      	ldr	r0, [sp, #8]
 80045be:	3301      	adds	r3, #1
 80045c0:	181b      	adds	r3, r3, r0
 80045c2:	106d      	asrs	r5, r5, #1
 80045c4:	42ab      	cmp	r3, r5
 80045c6:	d900      	bls.n	80045ca <__ssputs_r+0x3e>
 80045c8:	001d      	movs	r5, r3
 80045ca:	0553      	lsls	r3, r2, #21
 80045cc:	d532      	bpl.n	8004634 <__ssputs_r+0xa8>
 80045ce:	0029      	movs	r1, r5
 80045d0:	0038      	movs	r0, r7
 80045d2:	f7ff ff23 	bl	800441c <_malloc_r>
 80045d6:	1e06      	subs	r6, r0, #0
 80045d8:	d109      	bne.n	80045ee <__ssputs_r+0x62>
 80045da:	230c      	movs	r3, #12
 80045dc:	603b      	str	r3, [r7, #0]
 80045de:	2340      	movs	r3, #64	; 0x40
 80045e0:	2001      	movs	r0, #1
 80045e2:	89a2      	ldrh	r2, [r4, #12]
 80045e4:	4240      	negs	r0, r0
 80045e6:	4313      	orrs	r3, r2
 80045e8:	81a3      	strh	r3, [r4, #12]
 80045ea:	b005      	add	sp, #20
 80045ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80045ee:	9a02      	ldr	r2, [sp, #8]
 80045f0:	6921      	ldr	r1, [r4, #16]
 80045f2:	f7ff fe95 	bl	8004320 <memcpy>
 80045f6:	89a3      	ldrh	r3, [r4, #12]
 80045f8:	4a14      	ldr	r2, [pc, #80]	; (800464c <__ssputs_r+0xc0>)
 80045fa:	401a      	ands	r2, r3
 80045fc:	2380      	movs	r3, #128	; 0x80
 80045fe:	4313      	orrs	r3, r2
 8004600:	81a3      	strh	r3, [r4, #12]
 8004602:	9b02      	ldr	r3, [sp, #8]
 8004604:	6126      	str	r6, [r4, #16]
 8004606:	18f6      	adds	r6, r6, r3
 8004608:	6026      	str	r6, [r4, #0]
 800460a:	6165      	str	r5, [r4, #20]
 800460c:	9e01      	ldr	r6, [sp, #4]
 800460e:	1aed      	subs	r5, r5, r3
 8004610:	60a5      	str	r5, [r4, #8]
 8004612:	9b01      	ldr	r3, [sp, #4]
 8004614:	429e      	cmp	r6, r3
 8004616:	d900      	bls.n	800461a <__ssputs_r+0x8e>
 8004618:	9e01      	ldr	r6, [sp, #4]
 800461a:	0032      	movs	r2, r6
 800461c:	9903      	ldr	r1, [sp, #12]
 800461e:	6820      	ldr	r0, [r4, #0]
 8004620:	f000 faa5 	bl	8004b6e <memmove>
 8004624:	68a3      	ldr	r3, [r4, #8]
 8004626:	2000      	movs	r0, #0
 8004628:	1b9b      	subs	r3, r3, r6
 800462a:	60a3      	str	r3, [r4, #8]
 800462c:	6823      	ldr	r3, [r4, #0]
 800462e:	199e      	adds	r6, r3, r6
 8004630:	6026      	str	r6, [r4, #0]
 8004632:	e7da      	b.n	80045ea <__ssputs_r+0x5e>
 8004634:	002a      	movs	r2, r5
 8004636:	0038      	movs	r0, r7
 8004638:	f000 faac 	bl	8004b94 <_realloc_r>
 800463c:	1e06      	subs	r6, r0, #0
 800463e:	d1e0      	bne.n	8004602 <__ssputs_r+0x76>
 8004640:	0038      	movs	r0, r7
 8004642:	6921      	ldr	r1, [r4, #16]
 8004644:	f7ff fe7e 	bl	8004344 <_free_r>
 8004648:	e7c7      	b.n	80045da <__ssputs_r+0x4e>
 800464a:	46c0      	nop			; (mov r8, r8)
 800464c:	fffffb7f 	.word	0xfffffb7f

08004650 <_svfiprintf_r>:
 8004650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004652:	b0a1      	sub	sp, #132	; 0x84
 8004654:	9003      	str	r0, [sp, #12]
 8004656:	001d      	movs	r5, r3
 8004658:	898b      	ldrh	r3, [r1, #12]
 800465a:	000f      	movs	r7, r1
 800465c:	0016      	movs	r6, r2
 800465e:	061b      	lsls	r3, r3, #24
 8004660:	d511      	bpl.n	8004686 <_svfiprintf_r+0x36>
 8004662:	690b      	ldr	r3, [r1, #16]
 8004664:	2b00      	cmp	r3, #0
 8004666:	d10e      	bne.n	8004686 <_svfiprintf_r+0x36>
 8004668:	2140      	movs	r1, #64	; 0x40
 800466a:	f7ff fed7 	bl	800441c <_malloc_r>
 800466e:	6038      	str	r0, [r7, #0]
 8004670:	6138      	str	r0, [r7, #16]
 8004672:	2800      	cmp	r0, #0
 8004674:	d105      	bne.n	8004682 <_svfiprintf_r+0x32>
 8004676:	230c      	movs	r3, #12
 8004678:	9a03      	ldr	r2, [sp, #12]
 800467a:	3801      	subs	r0, #1
 800467c:	6013      	str	r3, [r2, #0]
 800467e:	b021      	add	sp, #132	; 0x84
 8004680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004682:	2340      	movs	r3, #64	; 0x40
 8004684:	617b      	str	r3, [r7, #20]
 8004686:	2300      	movs	r3, #0
 8004688:	ac08      	add	r4, sp, #32
 800468a:	6163      	str	r3, [r4, #20]
 800468c:	3320      	adds	r3, #32
 800468e:	7663      	strb	r3, [r4, #25]
 8004690:	3310      	adds	r3, #16
 8004692:	76a3      	strb	r3, [r4, #26]
 8004694:	9507      	str	r5, [sp, #28]
 8004696:	0035      	movs	r5, r6
 8004698:	782b      	ldrb	r3, [r5, #0]
 800469a:	2b00      	cmp	r3, #0
 800469c:	d001      	beq.n	80046a2 <_svfiprintf_r+0x52>
 800469e:	2b25      	cmp	r3, #37	; 0x25
 80046a0:	d147      	bne.n	8004732 <_svfiprintf_r+0xe2>
 80046a2:	1bab      	subs	r3, r5, r6
 80046a4:	9305      	str	r3, [sp, #20]
 80046a6:	42b5      	cmp	r5, r6
 80046a8:	d00c      	beq.n	80046c4 <_svfiprintf_r+0x74>
 80046aa:	0032      	movs	r2, r6
 80046ac:	0039      	movs	r1, r7
 80046ae:	9803      	ldr	r0, [sp, #12]
 80046b0:	f7ff ff6c 	bl	800458c <__ssputs_r>
 80046b4:	1c43      	adds	r3, r0, #1
 80046b6:	d100      	bne.n	80046ba <_svfiprintf_r+0x6a>
 80046b8:	e0ae      	b.n	8004818 <_svfiprintf_r+0x1c8>
 80046ba:	6962      	ldr	r2, [r4, #20]
 80046bc:	9b05      	ldr	r3, [sp, #20]
 80046be:	4694      	mov	ip, r2
 80046c0:	4463      	add	r3, ip
 80046c2:	6163      	str	r3, [r4, #20]
 80046c4:	782b      	ldrb	r3, [r5, #0]
 80046c6:	2b00      	cmp	r3, #0
 80046c8:	d100      	bne.n	80046cc <_svfiprintf_r+0x7c>
 80046ca:	e0a5      	b.n	8004818 <_svfiprintf_r+0x1c8>
 80046cc:	2201      	movs	r2, #1
 80046ce:	2300      	movs	r3, #0
 80046d0:	4252      	negs	r2, r2
 80046d2:	6062      	str	r2, [r4, #4]
 80046d4:	a904      	add	r1, sp, #16
 80046d6:	3254      	adds	r2, #84	; 0x54
 80046d8:	1852      	adds	r2, r2, r1
 80046da:	1c6e      	adds	r6, r5, #1
 80046dc:	6023      	str	r3, [r4, #0]
 80046de:	60e3      	str	r3, [r4, #12]
 80046e0:	60a3      	str	r3, [r4, #8]
 80046e2:	7013      	strb	r3, [r2, #0]
 80046e4:	65a3      	str	r3, [r4, #88]	; 0x58
 80046e6:	2205      	movs	r2, #5
 80046e8:	7831      	ldrb	r1, [r6, #0]
 80046ea:	4854      	ldr	r0, [pc, #336]	; (800483c <_svfiprintf_r+0x1ec>)
 80046ec:	f000 fa34 	bl	8004b58 <memchr>
 80046f0:	1c75      	adds	r5, r6, #1
 80046f2:	2800      	cmp	r0, #0
 80046f4:	d11f      	bne.n	8004736 <_svfiprintf_r+0xe6>
 80046f6:	6822      	ldr	r2, [r4, #0]
 80046f8:	06d3      	lsls	r3, r2, #27
 80046fa:	d504      	bpl.n	8004706 <_svfiprintf_r+0xb6>
 80046fc:	2353      	movs	r3, #83	; 0x53
 80046fe:	a904      	add	r1, sp, #16
 8004700:	185b      	adds	r3, r3, r1
 8004702:	2120      	movs	r1, #32
 8004704:	7019      	strb	r1, [r3, #0]
 8004706:	0713      	lsls	r3, r2, #28
 8004708:	d504      	bpl.n	8004714 <_svfiprintf_r+0xc4>
 800470a:	2353      	movs	r3, #83	; 0x53
 800470c:	a904      	add	r1, sp, #16
 800470e:	185b      	adds	r3, r3, r1
 8004710:	212b      	movs	r1, #43	; 0x2b
 8004712:	7019      	strb	r1, [r3, #0]
 8004714:	7833      	ldrb	r3, [r6, #0]
 8004716:	2b2a      	cmp	r3, #42	; 0x2a
 8004718:	d016      	beq.n	8004748 <_svfiprintf_r+0xf8>
 800471a:	0035      	movs	r5, r6
 800471c:	2100      	movs	r1, #0
 800471e:	200a      	movs	r0, #10
 8004720:	68e3      	ldr	r3, [r4, #12]
 8004722:	782a      	ldrb	r2, [r5, #0]
 8004724:	1c6e      	adds	r6, r5, #1
 8004726:	3a30      	subs	r2, #48	; 0x30
 8004728:	2a09      	cmp	r2, #9
 800472a:	d94e      	bls.n	80047ca <_svfiprintf_r+0x17a>
 800472c:	2900      	cmp	r1, #0
 800472e:	d111      	bne.n	8004754 <_svfiprintf_r+0x104>
 8004730:	e017      	b.n	8004762 <_svfiprintf_r+0x112>
 8004732:	3501      	adds	r5, #1
 8004734:	e7b0      	b.n	8004698 <_svfiprintf_r+0x48>
 8004736:	4b41      	ldr	r3, [pc, #260]	; (800483c <_svfiprintf_r+0x1ec>)
 8004738:	6822      	ldr	r2, [r4, #0]
 800473a:	1ac0      	subs	r0, r0, r3
 800473c:	2301      	movs	r3, #1
 800473e:	4083      	lsls	r3, r0
 8004740:	4313      	orrs	r3, r2
 8004742:	002e      	movs	r6, r5
 8004744:	6023      	str	r3, [r4, #0]
 8004746:	e7ce      	b.n	80046e6 <_svfiprintf_r+0x96>
 8004748:	9b07      	ldr	r3, [sp, #28]
 800474a:	1d19      	adds	r1, r3, #4
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	9107      	str	r1, [sp, #28]
 8004750:	2b00      	cmp	r3, #0
 8004752:	db01      	blt.n	8004758 <_svfiprintf_r+0x108>
 8004754:	930b      	str	r3, [sp, #44]	; 0x2c
 8004756:	e004      	b.n	8004762 <_svfiprintf_r+0x112>
 8004758:	425b      	negs	r3, r3
 800475a:	60e3      	str	r3, [r4, #12]
 800475c:	2302      	movs	r3, #2
 800475e:	4313      	orrs	r3, r2
 8004760:	6023      	str	r3, [r4, #0]
 8004762:	782b      	ldrb	r3, [r5, #0]
 8004764:	2b2e      	cmp	r3, #46	; 0x2e
 8004766:	d10a      	bne.n	800477e <_svfiprintf_r+0x12e>
 8004768:	786b      	ldrb	r3, [r5, #1]
 800476a:	2b2a      	cmp	r3, #42	; 0x2a
 800476c:	d135      	bne.n	80047da <_svfiprintf_r+0x18a>
 800476e:	9b07      	ldr	r3, [sp, #28]
 8004770:	3502      	adds	r5, #2
 8004772:	1d1a      	adds	r2, r3, #4
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	9207      	str	r2, [sp, #28]
 8004778:	2b00      	cmp	r3, #0
 800477a:	db2b      	blt.n	80047d4 <_svfiprintf_r+0x184>
 800477c:	9309      	str	r3, [sp, #36]	; 0x24
 800477e:	4e30      	ldr	r6, [pc, #192]	; (8004840 <_svfiprintf_r+0x1f0>)
 8004780:	2203      	movs	r2, #3
 8004782:	0030      	movs	r0, r6
 8004784:	7829      	ldrb	r1, [r5, #0]
 8004786:	f000 f9e7 	bl	8004b58 <memchr>
 800478a:	2800      	cmp	r0, #0
 800478c:	d006      	beq.n	800479c <_svfiprintf_r+0x14c>
 800478e:	2340      	movs	r3, #64	; 0x40
 8004790:	1b80      	subs	r0, r0, r6
 8004792:	4083      	lsls	r3, r0
 8004794:	6822      	ldr	r2, [r4, #0]
 8004796:	3501      	adds	r5, #1
 8004798:	4313      	orrs	r3, r2
 800479a:	6023      	str	r3, [r4, #0]
 800479c:	7829      	ldrb	r1, [r5, #0]
 800479e:	2206      	movs	r2, #6
 80047a0:	4828      	ldr	r0, [pc, #160]	; (8004844 <_svfiprintf_r+0x1f4>)
 80047a2:	1c6e      	adds	r6, r5, #1
 80047a4:	7621      	strb	r1, [r4, #24]
 80047a6:	f000 f9d7 	bl	8004b58 <memchr>
 80047aa:	2800      	cmp	r0, #0
 80047ac:	d03c      	beq.n	8004828 <_svfiprintf_r+0x1d8>
 80047ae:	4b26      	ldr	r3, [pc, #152]	; (8004848 <_svfiprintf_r+0x1f8>)
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	d125      	bne.n	8004800 <_svfiprintf_r+0x1b0>
 80047b4:	2207      	movs	r2, #7
 80047b6:	9b07      	ldr	r3, [sp, #28]
 80047b8:	3307      	adds	r3, #7
 80047ba:	4393      	bics	r3, r2
 80047bc:	3308      	adds	r3, #8
 80047be:	9307      	str	r3, [sp, #28]
 80047c0:	6963      	ldr	r3, [r4, #20]
 80047c2:	9a04      	ldr	r2, [sp, #16]
 80047c4:	189b      	adds	r3, r3, r2
 80047c6:	6163      	str	r3, [r4, #20]
 80047c8:	e765      	b.n	8004696 <_svfiprintf_r+0x46>
 80047ca:	4343      	muls	r3, r0
 80047cc:	0035      	movs	r5, r6
 80047ce:	2101      	movs	r1, #1
 80047d0:	189b      	adds	r3, r3, r2
 80047d2:	e7a6      	b.n	8004722 <_svfiprintf_r+0xd2>
 80047d4:	2301      	movs	r3, #1
 80047d6:	425b      	negs	r3, r3
 80047d8:	e7d0      	b.n	800477c <_svfiprintf_r+0x12c>
 80047da:	2300      	movs	r3, #0
 80047dc:	200a      	movs	r0, #10
 80047de:	001a      	movs	r2, r3
 80047e0:	3501      	adds	r5, #1
 80047e2:	6063      	str	r3, [r4, #4]
 80047e4:	7829      	ldrb	r1, [r5, #0]
 80047e6:	1c6e      	adds	r6, r5, #1
 80047e8:	3930      	subs	r1, #48	; 0x30
 80047ea:	2909      	cmp	r1, #9
 80047ec:	d903      	bls.n	80047f6 <_svfiprintf_r+0x1a6>
 80047ee:	2b00      	cmp	r3, #0
 80047f0:	d0c5      	beq.n	800477e <_svfiprintf_r+0x12e>
 80047f2:	9209      	str	r2, [sp, #36]	; 0x24
 80047f4:	e7c3      	b.n	800477e <_svfiprintf_r+0x12e>
 80047f6:	4342      	muls	r2, r0
 80047f8:	0035      	movs	r5, r6
 80047fa:	2301      	movs	r3, #1
 80047fc:	1852      	adds	r2, r2, r1
 80047fe:	e7f1      	b.n	80047e4 <_svfiprintf_r+0x194>
 8004800:	ab07      	add	r3, sp, #28
 8004802:	9300      	str	r3, [sp, #0]
 8004804:	003a      	movs	r2, r7
 8004806:	0021      	movs	r1, r4
 8004808:	4b10      	ldr	r3, [pc, #64]	; (800484c <_svfiprintf_r+0x1fc>)
 800480a:	9803      	ldr	r0, [sp, #12]
 800480c:	e000      	b.n	8004810 <_svfiprintf_r+0x1c0>
 800480e:	bf00      	nop
 8004810:	9004      	str	r0, [sp, #16]
 8004812:	9b04      	ldr	r3, [sp, #16]
 8004814:	3301      	adds	r3, #1
 8004816:	d1d3      	bne.n	80047c0 <_svfiprintf_r+0x170>
 8004818:	89bb      	ldrh	r3, [r7, #12]
 800481a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800481c:	065b      	lsls	r3, r3, #25
 800481e:	d400      	bmi.n	8004822 <_svfiprintf_r+0x1d2>
 8004820:	e72d      	b.n	800467e <_svfiprintf_r+0x2e>
 8004822:	2001      	movs	r0, #1
 8004824:	4240      	negs	r0, r0
 8004826:	e72a      	b.n	800467e <_svfiprintf_r+0x2e>
 8004828:	ab07      	add	r3, sp, #28
 800482a:	9300      	str	r3, [sp, #0]
 800482c:	003a      	movs	r2, r7
 800482e:	0021      	movs	r1, r4
 8004830:	4b06      	ldr	r3, [pc, #24]	; (800484c <_svfiprintf_r+0x1fc>)
 8004832:	9803      	ldr	r0, [sp, #12]
 8004834:	f000 f87c 	bl	8004930 <_printf_i>
 8004838:	e7ea      	b.n	8004810 <_svfiprintf_r+0x1c0>
 800483a:	46c0      	nop			; (mov r8, r8)
 800483c:	080052cb 	.word	0x080052cb
 8004840:	080052d1 	.word	0x080052d1
 8004844:	080052d5 	.word	0x080052d5
 8004848:	00000000 	.word	0x00000000
 800484c:	0800458d 	.word	0x0800458d

08004850 <_printf_common>:
 8004850:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004852:	0015      	movs	r5, r2
 8004854:	9301      	str	r3, [sp, #4]
 8004856:	688a      	ldr	r2, [r1, #8]
 8004858:	690b      	ldr	r3, [r1, #16]
 800485a:	000c      	movs	r4, r1
 800485c:	9000      	str	r0, [sp, #0]
 800485e:	4293      	cmp	r3, r2
 8004860:	da00      	bge.n	8004864 <_printf_common+0x14>
 8004862:	0013      	movs	r3, r2
 8004864:	0022      	movs	r2, r4
 8004866:	602b      	str	r3, [r5, #0]
 8004868:	3243      	adds	r2, #67	; 0x43
 800486a:	7812      	ldrb	r2, [r2, #0]
 800486c:	2a00      	cmp	r2, #0
 800486e:	d001      	beq.n	8004874 <_printf_common+0x24>
 8004870:	3301      	adds	r3, #1
 8004872:	602b      	str	r3, [r5, #0]
 8004874:	6823      	ldr	r3, [r4, #0]
 8004876:	069b      	lsls	r3, r3, #26
 8004878:	d502      	bpl.n	8004880 <_printf_common+0x30>
 800487a:	682b      	ldr	r3, [r5, #0]
 800487c:	3302      	adds	r3, #2
 800487e:	602b      	str	r3, [r5, #0]
 8004880:	6822      	ldr	r2, [r4, #0]
 8004882:	2306      	movs	r3, #6
 8004884:	0017      	movs	r7, r2
 8004886:	401f      	ands	r7, r3
 8004888:	421a      	tst	r2, r3
 800488a:	d027      	beq.n	80048dc <_printf_common+0x8c>
 800488c:	0023      	movs	r3, r4
 800488e:	3343      	adds	r3, #67	; 0x43
 8004890:	781b      	ldrb	r3, [r3, #0]
 8004892:	1e5a      	subs	r2, r3, #1
 8004894:	4193      	sbcs	r3, r2
 8004896:	6822      	ldr	r2, [r4, #0]
 8004898:	0692      	lsls	r2, r2, #26
 800489a:	d430      	bmi.n	80048fe <_printf_common+0xae>
 800489c:	0022      	movs	r2, r4
 800489e:	9901      	ldr	r1, [sp, #4]
 80048a0:	9800      	ldr	r0, [sp, #0]
 80048a2:	9e08      	ldr	r6, [sp, #32]
 80048a4:	3243      	adds	r2, #67	; 0x43
 80048a6:	47b0      	blx	r6
 80048a8:	1c43      	adds	r3, r0, #1
 80048aa:	d025      	beq.n	80048f8 <_printf_common+0xa8>
 80048ac:	2306      	movs	r3, #6
 80048ae:	6820      	ldr	r0, [r4, #0]
 80048b0:	682a      	ldr	r2, [r5, #0]
 80048b2:	68e1      	ldr	r1, [r4, #12]
 80048b4:	2500      	movs	r5, #0
 80048b6:	4003      	ands	r3, r0
 80048b8:	2b04      	cmp	r3, #4
 80048ba:	d103      	bne.n	80048c4 <_printf_common+0x74>
 80048bc:	1a8d      	subs	r5, r1, r2
 80048be:	43eb      	mvns	r3, r5
 80048c0:	17db      	asrs	r3, r3, #31
 80048c2:	401d      	ands	r5, r3
 80048c4:	68a3      	ldr	r3, [r4, #8]
 80048c6:	6922      	ldr	r2, [r4, #16]
 80048c8:	4293      	cmp	r3, r2
 80048ca:	dd01      	ble.n	80048d0 <_printf_common+0x80>
 80048cc:	1a9b      	subs	r3, r3, r2
 80048ce:	18ed      	adds	r5, r5, r3
 80048d0:	2700      	movs	r7, #0
 80048d2:	42bd      	cmp	r5, r7
 80048d4:	d120      	bne.n	8004918 <_printf_common+0xc8>
 80048d6:	2000      	movs	r0, #0
 80048d8:	e010      	b.n	80048fc <_printf_common+0xac>
 80048da:	3701      	adds	r7, #1
 80048dc:	68e3      	ldr	r3, [r4, #12]
 80048de:	682a      	ldr	r2, [r5, #0]
 80048e0:	1a9b      	subs	r3, r3, r2
 80048e2:	42bb      	cmp	r3, r7
 80048e4:	ddd2      	ble.n	800488c <_printf_common+0x3c>
 80048e6:	0022      	movs	r2, r4
 80048e8:	2301      	movs	r3, #1
 80048ea:	9901      	ldr	r1, [sp, #4]
 80048ec:	9800      	ldr	r0, [sp, #0]
 80048ee:	9e08      	ldr	r6, [sp, #32]
 80048f0:	3219      	adds	r2, #25
 80048f2:	47b0      	blx	r6
 80048f4:	1c43      	adds	r3, r0, #1
 80048f6:	d1f0      	bne.n	80048da <_printf_common+0x8a>
 80048f8:	2001      	movs	r0, #1
 80048fa:	4240      	negs	r0, r0
 80048fc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80048fe:	2030      	movs	r0, #48	; 0x30
 8004900:	18e1      	adds	r1, r4, r3
 8004902:	3143      	adds	r1, #67	; 0x43
 8004904:	7008      	strb	r0, [r1, #0]
 8004906:	0021      	movs	r1, r4
 8004908:	1c5a      	adds	r2, r3, #1
 800490a:	3145      	adds	r1, #69	; 0x45
 800490c:	7809      	ldrb	r1, [r1, #0]
 800490e:	18a2      	adds	r2, r4, r2
 8004910:	3243      	adds	r2, #67	; 0x43
 8004912:	3302      	adds	r3, #2
 8004914:	7011      	strb	r1, [r2, #0]
 8004916:	e7c1      	b.n	800489c <_printf_common+0x4c>
 8004918:	0022      	movs	r2, r4
 800491a:	2301      	movs	r3, #1
 800491c:	9901      	ldr	r1, [sp, #4]
 800491e:	9800      	ldr	r0, [sp, #0]
 8004920:	9e08      	ldr	r6, [sp, #32]
 8004922:	321a      	adds	r2, #26
 8004924:	47b0      	blx	r6
 8004926:	1c43      	adds	r3, r0, #1
 8004928:	d0e6      	beq.n	80048f8 <_printf_common+0xa8>
 800492a:	3701      	adds	r7, #1
 800492c:	e7d1      	b.n	80048d2 <_printf_common+0x82>
	...

08004930 <_printf_i>:
 8004930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004932:	b08b      	sub	sp, #44	; 0x2c
 8004934:	9206      	str	r2, [sp, #24]
 8004936:	000a      	movs	r2, r1
 8004938:	3243      	adds	r2, #67	; 0x43
 800493a:	9307      	str	r3, [sp, #28]
 800493c:	9005      	str	r0, [sp, #20]
 800493e:	9204      	str	r2, [sp, #16]
 8004940:	7e0a      	ldrb	r2, [r1, #24]
 8004942:	000c      	movs	r4, r1
 8004944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004946:	2a78      	cmp	r2, #120	; 0x78
 8004948:	d807      	bhi.n	800495a <_printf_i+0x2a>
 800494a:	2a62      	cmp	r2, #98	; 0x62
 800494c:	d809      	bhi.n	8004962 <_printf_i+0x32>
 800494e:	2a00      	cmp	r2, #0
 8004950:	d100      	bne.n	8004954 <_printf_i+0x24>
 8004952:	e0c1      	b.n	8004ad8 <_printf_i+0x1a8>
 8004954:	2a58      	cmp	r2, #88	; 0x58
 8004956:	d100      	bne.n	800495a <_printf_i+0x2a>
 8004958:	e08c      	b.n	8004a74 <_printf_i+0x144>
 800495a:	0026      	movs	r6, r4
 800495c:	3642      	adds	r6, #66	; 0x42
 800495e:	7032      	strb	r2, [r6, #0]
 8004960:	e022      	b.n	80049a8 <_printf_i+0x78>
 8004962:	0010      	movs	r0, r2
 8004964:	3863      	subs	r0, #99	; 0x63
 8004966:	2815      	cmp	r0, #21
 8004968:	d8f7      	bhi.n	800495a <_printf_i+0x2a>
 800496a:	f7fb fbdf 	bl	800012c <__gnu_thumb1_case_shi>
 800496e:	0016      	.short	0x0016
 8004970:	fff6001f 	.word	0xfff6001f
 8004974:	fff6fff6 	.word	0xfff6fff6
 8004978:	001ffff6 	.word	0x001ffff6
 800497c:	fff6fff6 	.word	0xfff6fff6
 8004980:	fff6fff6 	.word	0xfff6fff6
 8004984:	003600a8 	.word	0x003600a8
 8004988:	fff6009a 	.word	0xfff6009a
 800498c:	00b9fff6 	.word	0x00b9fff6
 8004990:	0036fff6 	.word	0x0036fff6
 8004994:	fff6fff6 	.word	0xfff6fff6
 8004998:	009e      	.short	0x009e
 800499a:	0026      	movs	r6, r4
 800499c:	681a      	ldr	r2, [r3, #0]
 800499e:	3642      	adds	r6, #66	; 0x42
 80049a0:	1d11      	adds	r1, r2, #4
 80049a2:	6019      	str	r1, [r3, #0]
 80049a4:	6813      	ldr	r3, [r2, #0]
 80049a6:	7033      	strb	r3, [r6, #0]
 80049a8:	2301      	movs	r3, #1
 80049aa:	e0a7      	b.n	8004afc <_printf_i+0x1cc>
 80049ac:	6808      	ldr	r0, [r1, #0]
 80049ae:	6819      	ldr	r1, [r3, #0]
 80049b0:	1d0a      	adds	r2, r1, #4
 80049b2:	0605      	lsls	r5, r0, #24
 80049b4:	d50b      	bpl.n	80049ce <_printf_i+0x9e>
 80049b6:	680d      	ldr	r5, [r1, #0]
 80049b8:	601a      	str	r2, [r3, #0]
 80049ba:	2d00      	cmp	r5, #0
 80049bc:	da03      	bge.n	80049c6 <_printf_i+0x96>
 80049be:	232d      	movs	r3, #45	; 0x2d
 80049c0:	9a04      	ldr	r2, [sp, #16]
 80049c2:	426d      	negs	r5, r5
 80049c4:	7013      	strb	r3, [r2, #0]
 80049c6:	4b61      	ldr	r3, [pc, #388]	; (8004b4c <_printf_i+0x21c>)
 80049c8:	270a      	movs	r7, #10
 80049ca:	9303      	str	r3, [sp, #12]
 80049cc:	e01b      	b.n	8004a06 <_printf_i+0xd6>
 80049ce:	680d      	ldr	r5, [r1, #0]
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	0641      	lsls	r1, r0, #25
 80049d4:	d5f1      	bpl.n	80049ba <_printf_i+0x8a>
 80049d6:	b22d      	sxth	r5, r5
 80049d8:	e7ef      	b.n	80049ba <_printf_i+0x8a>
 80049da:	680d      	ldr	r5, [r1, #0]
 80049dc:	6819      	ldr	r1, [r3, #0]
 80049de:	1d08      	adds	r0, r1, #4
 80049e0:	6018      	str	r0, [r3, #0]
 80049e2:	062e      	lsls	r6, r5, #24
 80049e4:	d501      	bpl.n	80049ea <_printf_i+0xba>
 80049e6:	680d      	ldr	r5, [r1, #0]
 80049e8:	e003      	b.n	80049f2 <_printf_i+0xc2>
 80049ea:	066d      	lsls	r5, r5, #25
 80049ec:	d5fb      	bpl.n	80049e6 <_printf_i+0xb6>
 80049ee:	680d      	ldr	r5, [r1, #0]
 80049f0:	b2ad      	uxth	r5, r5
 80049f2:	4b56      	ldr	r3, [pc, #344]	; (8004b4c <_printf_i+0x21c>)
 80049f4:	2708      	movs	r7, #8
 80049f6:	9303      	str	r3, [sp, #12]
 80049f8:	2a6f      	cmp	r2, #111	; 0x6f
 80049fa:	d000      	beq.n	80049fe <_printf_i+0xce>
 80049fc:	3702      	adds	r7, #2
 80049fe:	0023      	movs	r3, r4
 8004a00:	2200      	movs	r2, #0
 8004a02:	3343      	adds	r3, #67	; 0x43
 8004a04:	701a      	strb	r2, [r3, #0]
 8004a06:	6863      	ldr	r3, [r4, #4]
 8004a08:	60a3      	str	r3, [r4, #8]
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	db03      	blt.n	8004a16 <_printf_i+0xe6>
 8004a0e:	2204      	movs	r2, #4
 8004a10:	6821      	ldr	r1, [r4, #0]
 8004a12:	4391      	bics	r1, r2
 8004a14:	6021      	str	r1, [r4, #0]
 8004a16:	2d00      	cmp	r5, #0
 8004a18:	d102      	bne.n	8004a20 <_printf_i+0xf0>
 8004a1a:	9e04      	ldr	r6, [sp, #16]
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	d00c      	beq.n	8004a3a <_printf_i+0x10a>
 8004a20:	9e04      	ldr	r6, [sp, #16]
 8004a22:	0028      	movs	r0, r5
 8004a24:	0039      	movs	r1, r7
 8004a26:	f7fb fc11 	bl	800024c <__aeabi_uidivmod>
 8004a2a:	9b03      	ldr	r3, [sp, #12]
 8004a2c:	3e01      	subs	r6, #1
 8004a2e:	5c5b      	ldrb	r3, [r3, r1]
 8004a30:	7033      	strb	r3, [r6, #0]
 8004a32:	002b      	movs	r3, r5
 8004a34:	0005      	movs	r5, r0
 8004a36:	429f      	cmp	r7, r3
 8004a38:	d9f3      	bls.n	8004a22 <_printf_i+0xf2>
 8004a3a:	2f08      	cmp	r7, #8
 8004a3c:	d109      	bne.n	8004a52 <_printf_i+0x122>
 8004a3e:	6823      	ldr	r3, [r4, #0]
 8004a40:	07db      	lsls	r3, r3, #31
 8004a42:	d506      	bpl.n	8004a52 <_printf_i+0x122>
 8004a44:	6863      	ldr	r3, [r4, #4]
 8004a46:	6922      	ldr	r2, [r4, #16]
 8004a48:	4293      	cmp	r3, r2
 8004a4a:	dc02      	bgt.n	8004a52 <_printf_i+0x122>
 8004a4c:	2330      	movs	r3, #48	; 0x30
 8004a4e:	3e01      	subs	r6, #1
 8004a50:	7033      	strb	r3, [r6, #0]
 8004a52:	9b04      	ldr	r3, [sp, #16]
 8004a54:	1b9b      	subs	r3, r3, r6
 8004a56:	6123      	str	r3, [r4, #16]
 8004a58:	9b07      	ldr	r3, [sp, #28]
 8004a5a:	0021      	movs	r1, r4
 8004a5c:	9300      	str	r3, [sp, #0]
 8004a5e:	9805      	ldr	r0, [sp, #20]
 8004a60:	9b06      	ldr	r3, [sp, #24]
 8004a62:	aa09      	add	r2, sp, #36	; 0x24
 8004a64:	f7ff fef4 	bl	8004850 <_printf_common>
 8004a68:	1c43      	adds	r3, r0, #1
 8004a6a:	d14c      	bne.n	8004b06 <_printf_i+0x1d6>
 8004a6c:	2001      	movs	r0, #1
 8004a6e:	4240      	negs	r0, r0
 8004a70:	b00b      	add	sp, #44	; 0x2c
 8004a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a74:	3145      	adds	r1, #69	; 0x45
 8004a76:	700a      	strb	r2, [r1, #0]
 8004a78:	4a34      	ldr	r2, [pc, #208]	; (8004b4c <_printf_i+0x21c>)
 8004a7a:	9203      	str	r2, [sp, #12]
 8004a7c:	681a      	ldr	r2, [r3, #0]
 8004a7e:	6821      	ldr	r1, [r4, #0]
 8004a80:	ca20      	ldmia	r2!, {r5}
 8004a82:	601a      	str	r2, [r3, #0]
 8004a84:	0608      	lsls	r0, r1, #24
 8004a86:	d516      	bpl.n	8004ab6 <_printf_i+0x186>
 8004a88:	07cb      	lsls	r3, r1, #31
 8004a8a:	d502      	bpl.n	8004a92 <_printf_i+0x162>
 8004a8c:	2320      	movs	r3, #32
 8004a8e:	4319      	orrs	r1, r3
 8004a90:	6021      	str	r1, [r4, #0]
 8004a92:	2710      	movs	r7, #16
 8004a94:	2d00      	cmp	r5, #0
 8004a96:	d1b2      	bne.n	80049fe <_printf_i+0xce>
 8004a98:	2320      	movs	r3, #32
 8004a9a:	6822      	ldr	r2, [r4, #0]
 8004a9c:	439a      	bics	r2, r3
 8004a9e:	6022      	str	r2, [r4, #0]
 8004aa0:	e7ad      	b.n	80049fe <_printf_i+0xce>
 8004aa2:	2220      	movs	r2, #32
 8004aa4:	6809      	ldr	r1, [r1, #0]
 8004aa6:	430a      	orrs	r2, r1
 8004aa8:	6022      	str	r2, [r4, #0]
 8004aaa:	0022      	movs	r2, r4
 8004aac:	2178      	movs	r1, #120	; 0x78
 8004aae:	3245      	adds	r2, #69	; 0x45
 8004ab0:	7011      	strb	r1, [r2, #0]
 8004ab2:	4a27      	ldr	r2, [pc, #156]	; (8004b50 <_printf_i+0x220>)
 8004ab4:	e7e1      	b.n	8004a7a <_printf_i+0x14a>
 8004ab6:	0648      	lsls	r0, r1, #25
 8004ab8:	d5e6      	bpl.n	8004a88 <_printf_i+0x158>
 8004aba:	b2ad      	uxth	r5, r5
 8004abc:	e7e4      	b.n	8004a88 <_printf_i+0x158>
 8004abe:	681a      	ldr	r2, [r3, #0]
 8004ac0:	680d      	ldr	r5, [r1, #0]
 8004ac2:	1d10      	adds	r0, r2, #4
 8004ac4:	6949      	ldr	r1, [r1, #20]
 8004ac6:	6018      	str	r0, [r3, #0]
 8004ac8:	6813      	ldr	r3, [r2, #0]
 8004aca:	062e      	lsls	r6, r5, #24
 8004acc:	d501      	bpl.n	8004ad2 <_printf_i+0x1a2>
 8004ace:	6019      	str	r1, [r3, #0]
 8004ad0:	e002      	b.n	8004ad8 <_printf_i+0x1a8>
 8004ad2:	066d      	lsls	r5, r5, #25
 8004ad4:	d5fb      	bpl.n	8004ace <_printf_i+0x19e>
 8004ad6:	8019      	strh	r1, [r3, #0]
 8004ad8:	2300      	movs	r3, #0
 8004ada:	9e04      	ldr	r6, [sp, #16]
 8004adc:	6123      	str	r3, [r4, #16]
 8004ade:	e7bb      	b.n	8004a58 <_printf_i+0x128>
 8004ae0:	681a      	ldr	r2, [r3, #0]
 8004ae2:	1d11      	adds	r1, r2, #4
 8004ae4:	6019      	str	r1, [r3, #0]
 8004ae6:	6816      	ldr	r6, [r2, #0]
 8004ae8:	2100      	movs	r1, #0
 8004aea:	0030      	movs	r0, r6
 8004aec:	6862      	ldr	r2, [r4, #4]
 8004aee:	f000 f833 	bl	8004b58 <memchr>
 8004af2:	2800      	cmp	r0, #0
 8004af4:	d001      	beq.n	8004afa <_printf_i+0x1ca>
 8004af6:	1b80      	subs	r0, r0, r6
 8004af8:	6060      	str	r0, [r4, #4]
 8004afa:	6863      	ldr	r3, [r4, #4]
 8004afc:	6123      	str	r3, [r4, #16]
 8004afe:	2300      	movs	r3, #0
 8004b00:	9a04      	ldr	r2, [sp, #16]
 8004b02:	7013      	strb	r3, [r2, #0]
 8004b04:	e7a8      	b.n	8004a58 <_printf_i+0x128>
 8004b06:	6923      	ldr	r3, [r4, #16]
 8004b08:	0032      	movs	r2, r6
 8004b0a:	9906      	ldr	r1, [sp, #24]
 8004b0c:	9805      	ldr	r0, [sp, #20]
 8004b0e:	9d07      	ldr	r5, [sp, #28]
 8004b10:	47a8      	blx	r5
 8004b12:	1c43      	adds	r3, r0, #1
 8004b14:	d0aa      	beq.n	8004a6c <_printf_i+0x13c>
 8004b16:	6823      	ldr	r3, [r4, #0]
 8004b18:	079b      	lsls	r3, r3, #30
 8004b1a:	d415      	bmi.n	8004b48 <_printf_i+0x218>
 8004b1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b1e:	68e0      	ldr	r0, [r4, #12]
 8004b20:	4298      	cmp	r0, r3
 8004b22:	daa5      	bge.n	8004a70 <_printf_i+0x140>
 8004b24:	0018      	movs	r0, r3
 8004b26:	e7a3      	b.n	8004a70 <_printf_i+0x140>
 8004b28:	0022      	movs	r2, r4
 8004b2a:	2301      	movs	r3, #1
 8004b2c:	9906      	ldr	r1, [sp, #24]
 8004b2e:	9805      	ldr	r0, [sp, #20]
 8004b30:	9e07      	ldr	r6, [sp, #28]
 8004b32:	3219      	adds	r2, #25
 8004b34:	47b0      	blx	r6
 8004b36:	1c43      	adds	r3, r0, #1
 8004b38:	d098      	beq.n	8004a6c <_printf_i+0x13c>
 8004b3a:	3501      	adds	r5, #1
 8004b3c:	68e3      	ldr	r3, [r4, #12]
 8004b3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004b40:	1a9b      	subs	r3, r3, r2
 8004b42:	42ab      	cmp	r3, r5
 8004b44:	dcf0      	bgt.n	8004b28 <_printf_i+0x1f8>
 8004b46:	e7e9      	b.n	8004b1c <_printf_i+0x1ec>
 8004b48:	2500      	movs	r5, #0
 8004b4a:	e7f7      	b.n	8004b3c <_printf_i+0x20c>
 8004b4c:	080052dc 	.word	0x080052dc
 8004b50:	080052ed 	.word	0x080052ed

08004b54 <__retarget_lock_acquire_recursive>:
 8004b54:	4770      	bx	lr

08004b56 <__retarget_lock_release_recursive>:
 8004b56:	4770      	bx	lr

08004b58 <memchr>:
 8004b58:	b2c9      	uxtb	r1, r1
 8004b5a:	1882      	adds	r2, r0, r2
 8004b5c:	4290      	cmp	r0, r2
 8004b5e:	d101      	bne.n	8004b64 <memchr+0xc>
 8004b60:	2000      	movs	r0, #0
 8004b62:	4770      	bx	lr
 8004b64:	7803      	ldrb	r3, [r0, #0]
 8004b66:	428b      	cmp	r3, r1
 8004b68:	d0fb      	beq.n	8004b62 <memchr+0xa>
 8004b6a:	3001      	adds	r0, #1
 8004b6c:	e7f6      	b.n	8004b5c <memchr+0x4>

08004b6e <memmove>:
 8004b6e:	b510      	push	{r4, lr}
 8004b70:	4288      	cmp	r0, r1
 8004b72:	d902      	bls.n	8004b7a <memmove+0xc>
 8004b74:	188b      	adds	r3, r1, r2
 8004b76:	4298      	cmp	r0, r3
 8004b78:	d303      	bcc.n	8004b82 <memmove+0x14>
 8004b7a:	2300      	movs	r3, #0
 8004b7c:	e007      	b.n	8004b8e <memmove+0x20>
 8004b7e:	5c8b      	ldrb	r3, [r1, r2]
 8004b80:	5483      	strb	r3, [r0, r2]
 8004b82:	3a01      	subs	r2, #1
 8004b84:	d2fb      	bcs.n	8004b7e <memmove+0x10>
 8004b86:	bd10      	pop	{r4, pc}
 8004b88:	5ccc      	ldrb	r4, [r1, r3]
 8004b8a:	54c4      	strb	r4, [r0, r3]
 8004b8c:	3301      	adds	r3, #1
 8004b8e:	429a      	cmp	r2, r3
 8004b90:	d1fa      	bne.n	8004b88 <memmove+0x1a>
 8004b92:	e7f8      	b.n	8004b86 <memmove+0x18>

08004b94 <_realloc_r>:
 8004b94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004b96:	0007      	movs	r7, r0
 8004b98:	000e      	movs	r6, r1
 8004b9a:	0014      	movs	r4, r2
 8004b9c:	2900      	cmp	r1, #0
 8004b9e:	d105      	bne.n	8004bac <_realloc_r+0x18>
 8004ba0:	0011      	movs	r1, r2
 8004ba2:	f7ff fc3b 	bl	800441c <_malloc_r>
 8004ba6:	0005      	movs	r5, r0
 8004ba8:	0028      	movs	r0, r5
 8004baa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004bac:	2a00      	cmp	r2, #0
 8004bae:	d103      	bne.n	8004bb8 <_realloc_r+0x24>
 8004bb0:	f7ff fbc8 	bl	8004344 <_free_r>
 8004bb4:	0025      	movs	r5, r4
 8004bb6:	e7f7      	b.n	8004ba8 <_realloc_r+0x14>
 8004bb8:	f000 f81b 	bl	8004bf2 <_malloc_usable_size_r>
 8004bbc:	9001      	str	r0, [sp, #4]
 8004bbe:	4284      	cmp	r4, r0
 8004bc0:	d803      	bhi.n	8004bca <_realloc_r+0x36>
 8004bc2:	0035      	movs	r5, r6
 8004bc4:	0843      	lsrs	r3, r0, #1
 8004bc6:	42a3      	cmp	r3, r4
 8004bc8:	d3ee      	bcc.n	8004ba8 <_realloc_r+0x14>
 8004bca:	0021      	movs	r1, r4
 8004bcc:	0038      	movs	r0, r7
 8004bce:	f7ff fc25 	bl	800441c <_malloc_r>
 8004bd2:	1e05      	subs	r5, r0, #0
 8004bd4:	d0e8      	beq.n	8004ba8 <_realloc_r+0x14>
 8004bd6:	9b01      	ldr	r3, [sp, #4]
 8004bd8:	0022      	movs	r2, r4
 8004bda:	429c      	cmp	r4, r3
 8004bdc:	d900      	bls.n	8004be0 <_realloc_r+0x4c>
 8004bde:	001a      	movs	r2, r3
 8004be0:	0031      	movs	r1, r6
 8004be2:	0028      	movs	r0, r5
 8004be4:	f7ff fb9c 	bl	8004320 <memcpy>
 8004be8:	0031      	movs	r1, r6
 8004bea:	0038      	movs	r0, r7
 8004bec:	f7ff fbaa 	bl	8004344 <_free_r>
 8004bf0:	e7da      	b.n	8004ba8 <_realloc_r+0x14>

08004bf2 <_malloc_usable_size_r>:
 8004bf2:	1f0b      	subs	r3, r1, #4
 8004bf4:	681b      	ldr	r3, [r3, #0]
 8004bf6:	1f18      	subs	r0, r3, #4
 8004bf8:	2b00      	cmp	r3, #0
 8004bfa:	da01      	bge.n	8004c00 <_malloc_usable_size_r+0xe>
 8004bfc:	580b      	ldr	r3, [r1, r0]
 8004bfe:	18c0      	adds	r0, r0, r3
 8004c00:	4770      	bx	lr
	...

08004c04 <_init>:
 8004c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c06:	46c0      	nop			; (mov r8, r8)
 8004c08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c0a:	bc08      	pop	{r3}
 8004c0c:	469e      	mov	lr, r3
 8004c0e:	4770      	bx	lr

08004c10 <_fini>:
 8004c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c12:	46c0      	nop			; (mov r8, r8)
 8004c14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c16:	bc08      	pop	{r3}
 8004c18:	469e      	mov	lr, r3
 8004c1a:	4770      	bx	lr

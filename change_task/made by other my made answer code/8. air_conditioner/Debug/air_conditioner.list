
air_conditioner.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004b70  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006e0  08004c30  08004c30  00014c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005310  08005310  00020200  2**0
                  CONTENTS
  4 .ARM          00000008  08005310  08005310  00015310  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005318  08005318  00020200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005318  08005318  00015318  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800531c  0800531c  0001531c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000200  20000000  08005320  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001d0  20000200  08005520  00020200  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003d0  08005520  000203d0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 12 .debug_info   000179ab  00000000  00000000  00020228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002b2f  00000000  00000000  00037bd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000f11f  00000000  00000000  0003a702  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000c50  00000000  00000000  00049828  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001498  00000000  00000000  0004a478  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002735  00000000  00000000  0004b910  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00018bc4  00000000  00000000  0004e045  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0007f72b  00000000  00000000  00066c09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000e6334  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002ce8  00000000  00000000  000e6384  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000200 	.word	0x20000200
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08004c18 	.word	0x08004c18

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000204 	.word	0x20000204
 8000104:	08004c18 	.word	0x08004c18

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f806 	bl	8000254 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__aeabi_idiv0>:
 8000254:	4770      	bx	lr
 8000256:	46c0      	nop			; (mov r8, r8)

08000258 <__aeabi_uldivmod>:
 8000258:	2b00      	cmp	r3, #0
 800025a:	d111      	bne.n	8000280 <__aeabi_uldivmod+0x28>
 800025c:	2a00      	cmp	r2, #0
 800025e:	d10f      	bne.n	8000280 <__aeabi_uldivmod+0x28>
 8000260:	2900      	cmp	r1, #0
 8000262:	d100      	bne.n	8000266 <__aeabi_uldivmod+0xe>
 8000264:	2800      	cmp	r0, #0
 8000266:	d002      	beq.n	800026e <__aeabi_uldivmod+0x16>
 8000268:	2100      	movs	r1, #0
 800026a:	43c9      	mvns	r1, r1
 800026c:	0008      	movs	r0, r1
 800026e:	b407      	push	{r0, r1, r2}
 8000270:	4802      	ldr	r0, [pc, #8]	; (800027c <__aeabi_uldivmod+0x24>)
 8000272:	a102      	add	r1, pc, #8	; (adr r1, 800027c <__aeabi_uldivmod+0x24>)
 8000274:	1840      	adds	r0, r0, r1
 8000276:	9002      	str	r0, [sp, #8]
 8000278:	bd03      	pop	{r0, r1, pc}
 800027a:	46c0      	nop			; (mov r8, r8)
 800027c:	ffffffd9 	.word	0xffffffd9
 8000280:	b403      	push	{r0, r1}
 8000282:	4668      	mov	r0, sp
 8000284:	b501      	push	{r0, lr}
 8000286:	9802      	ldr	r0, [sp, #8]
 8000288:	f000 f84c 	bl	8000324 <__udivmoddi4>
 800028c:	9b01      	ldr	r3, [sp, #4]
 800028e:	469e      	mov	lr, r3
 8000290:	b002      	add	sp, #8
 8000292:	bc0c      	pop	{r2, r3}
 8000294:	4770      	bx	lr
 8000296:	46c0      	nop			; (mov r8, r8)

08000298 <__aeabi_lmul>:
 8000298:	b5f0      	push	{r4, r5, r6, r7, lr}
 800029a:	46ce      	mov	lr, r9
 800029c:	4647      	mov	r7, r8
 800029e:	b580      	push	{r7, lr}
 80002a0:	0007      	movs	r7, r0
 80002a2:	4699      	mov	r9, r3
 80002a4:	0c3b      	lsrs	r3, r7, #16
 80002a6:	469c      	mov	ip, r3
 80002a8:	0413      	lsls	r3, r2, #16
 80002aa:	0c1b      	lsrs	r3, r3, #16
 80002ac:	001d      	movs	r5, r3
 80002ae:	000e      	movs	r6, r1
 80002b0:	4661      	mov	r1, ip
 80002b2:	0400      	lsls	r0, r0, #16
 80002b4:	0c14      	lsrs	r4, r2, #16
 80002b6:	0c00      	lsrs	r0, r0, #16
 80002b8:	4345      	muls	r5, r0
 80002ba:	434b      	muls	r3, r1
 80002bc:	4360      	muls	r0, r4
 80002be:	4361      	muls	r1, r4
 80002c0:	18c0      	adds	r0, r0, r3
 80002c2:	0c2c      	lsrs	r4, r5, #16
 80002c4:	1820      	adds	r0, r4, r0
 80002c6:	468c      	mov	ip, r1
 80002c8:	4283      	cmp	r3, r0
 80002ca:	d903      	bls.n	80002d4 <__aeabi_lmul+0x3c>
 80002cc:	2380      	movs	r3, #128	; 0x80
 80002ce:	025b      	lsls	r3, r3, #9
 80002d0:	4698      	mov	r8, r3
 80002d2:	44c4      	add	ip, r8
 80002d4:	4649      	mov	r1, r9
 80002d6:	4379      	muls	r1, r7
 80002d8:	4372      	muls	r2, r6
 80002da:	0c03      	lsrs	r3, r0, #16
 80002dc:	4463      	add	r3, ip
 80002de:	042d      	lsls	r5, r5, #16
 80002e0:	0c2d      	lsrs	r5, r5, #16
 80002e2:	18c9      	adds	r1, r1, r3
 80002e4:	0400      	lsls	r0, r0, #16
 80002e6:	1940      	adds	r0, r0, r5
 80002e8:	1889      	adds	r1, r1, r2
 80002ea:	bcc0      	pop	{r6, r7}
 80002ec:	46b9      	mov	r9, r7
 80002ee:	46b0      	mov	r8, r6
 80002f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80002f2:	46c0      	nop			; (mov r8, r8)

080002f4 <__aeabi_f2uiz>:
 80002f4:	219e      	movs	r1, #158	; 0x9e
 80002f6:	b510      	push	{r4, lr}
 80002f8:	05c9      	lsls	r1, r1, #23
 80002fa:	1c04      	adds	r4, r0, #0
 80002fc:	f000 fd5c 	bl	8000db8 <__aeabi_fcmpge>
 8000300:	2800      	cmp	r0, #0
 8000302:	d103      	bne.n	800030c <__aeabi_f2uiz+0x18>
 8000304:	1c20      	adds	r0, r4, #0
 8000306:	f000 fcc5 	bl	8000c94 <__aeabi_f2iz>
 800030a:	bd10      	pop	{r4, pc}
 800030c:	219e      	movs	r1, #158	; 0x9e
 800030e:	1c20      	adds	r0, r4, #0
 8000310:	05c9      	lsls	r1, r1, #23
 8000312:	f000 fb11 	bl	8000938 <__aeabi_fsub>
 8000316:	f000 fcbd 	bl	8000c94 <__aeabi_f2iz>
 800031a:	2380      	movs	r3, #128	; 0x80
 800031c:	061b      	lsls	r3, r3, #24
 800031e:	469c      	mov	ip, r3
 8000320:	4460      	add	r0, ip
 8000322:	e7f2      	b.n	800030a <__aeabi_f2uiz+0x16>

08000324 <__udivmoddi4>:
 8000324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000326:	4657      	mov	r7, sl
 8000328:	464e      	mov	r6, r9
 800032a:	4645      	mov	r5, r8
 800032c:	46de      	mov	lr, fp
 800032e:	b5e0      	push	{r5, r6, r7, lr}
 8000330:	0004      	movs	r4, r0
 8000332:	000d      	movs	r5, r1
 8000334:	4692      	mov	sl, r2
 8000336:	4699      	mov	r9, r3
 8000338:	b083      	sub	sp, #12
 800033a:	428b      	cmp	r3, r1
 800033c:	d830      	bhi.n	80003a0 <__udivmoddi4+0x7c>
 800033e:	d02d      	beq.n	800039c <__udivmoddi4+0x78>
 8000340:	4649      	mov	r1, r9
 8000342:	4650      	mov	r0, sl
 8000344:	f000 fd60 	bl	8000e08 <__clzdi2>
 8000348:	0029      	movs	r1, r5
 800034a:	0006      	movs	r6, r0
 800034c:	0020      	movs	r0, r4
 800034e:	f000 fd5b 	bl	8000e08 <__clzdi2>
 8000352:	1a33      	subs	r3, r6, r0
 8000354:	4698      	mov	r8, r3
 8000356:	3b20      	subs	r3, #32
 8000358:	469b      	mov	fp, r3
 800035a:	d433      	bmi.n	80003c4 <__udivmoddi4+0xa0>
 800035c:	465a      	mov	r2, fp
 800035e:	4653      	mov	r3, sl
 8000360:	4093      	lsls	r3, r2
 8000362:	4642      	mov	r2, r8
 8000364:	001f      	movs	r7, r3
 8000366:	4653      	mov	r3, sl
 8000368:	4093      	lsls	r3, r2
 800036a:	001e      	movs	r6, r3
 800036c:	42af      	cmp	r7, r5
 800036e:	d83a      	bhi.n	80003e6 <__udivmoddi4+0xc2>
 8000370:	42af      	cmp	r7, r5
 8000372:	d100      	bne.n	8000376 <__udivmoddi4+0x52>
 8000374:	e078      	b.n	8000468 <__udivmoddi4+0x144>
 8000376:	465b      	mov	r3, fp
 8000378:	1ba4      	subs	r4, r4, r6
 800037a:	41bd      	sbcs	r5, r7
 800037c:	2b00      	cmp	r3, #0
 800037e:	da00      	bge.n	8000382 <__udivmoddi4+0x5e>
 8000380:	e075      	b.n	800046e <__udivmoddi4+0x14a>
 8000382:	2200      	movs	r2, #0
 8000384:	2300      	movs	r3, #0
 8000386:	9200      	str	r2, [sp, #0]
 8000388:	9301      	str	r3, [sp, #4]
 800038a:	2301      	movs	r3, #1
 800038c:	465a      	mov	r2, fp
 800038e:	4093      	lsls	r3, r2
 8000390:	9301      	str	r3, [sp, #4]
 8000392:	2301      	movs	r3, #1
 8000394:	4642      	mov	r2, r8
 8000396:	4093      	lsls	r3, r2
 8000398:	9300      	str	r3, [sp, #0]
 800039a:	e028      	b.n	80003ee <__udivmoddi4+0xca>
 800039c:	4282      	cmp	r2, r0
 800039e:	d9cf      	bls.n	8000340 <__udivmoddi4+0x1c>
 80003a0:	2200      	movs	r2, #0
 80003a2:	2300      	movs	r3, #0
 80003a4:	9200      	str	r2, [sp, #0]
 80003a6:	9301      	str	r3, [sp, #4]
 80003a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	d001      	beq.n	80003b2 <__udivmoddi4+0x8e>
 80003ae:	601c      	str	r4, [r3, #0]
 80003b0:	605d      	str	r5, [r3, #4]
 80003b2:	9800      	ldr	r0, [sp, #0]
 80003b4:	9901      	ldr	r1, [sp, #4]
 80003b6:	b003      	add	sp, #12
 80003b8:	bcf0      	pop	{r4, r5, r6, r7}
 80003ba:	46bb      	mov	fp, r7
 80003bc:	46b2      	mov	sl, r6
 80003be:	46a9      	mov	r9, r5
 80003c0:	46a0      	mov	r8, r4
 80003c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80003c4:	4642      	mov	r2, r8
 80003c6:	2320      	movs	r3, #32
 80003c8:	1a9b      	subs	r3, r3, r2
 80003ca:	4652      	mov	r2, sl
 80003cc:	40da      	lsrs	r2, r3
 80003ce:	4641      	mov	r1, r8
 80003d0:	0013      	movs	r3, r2
 80003d2:	464a      	mov	r2, r9
 80003d4:	408a      	lsls	r2, r1
 80003d6:	0017      	movs	r7, r2
 80003d8:	4642      	mov	r2, r8
 80003da:	431f      	orrs	r7, r3
 80003dc:	4653      	mov	r3, sl
 80003de:	4093      	lsls	r3, r2
 80003e0:	001e      	movs	r6, r3
 80003e2:	42af      	cmp	r7, r5
 80003e4:	d9c4      	bls.n	8000370 <__udivmoddi4+0x4c>
 80003e6:	2200      	movs	r2, #0
 80003e8:	2300      	movs	r3, #0
 80003ea:	9200      	str	r2, [sp, #0]
 80003ec:	9301      	str	r3, [sp, #4]
 80003ee:	4643      	mov	r3, r8
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d0d9      	beq.n	80003a8 <__udivmoddi4+0x84>
 80003f4:	07fb      	lsls	r3, r7, #31
 80003f6:	0872      	lsrs	r2, r6, #1
 80003f8:	431a      	orrs	r2, r3
 80003fa:	4646      	mov	r6, r8
 80003fc:	087b      	lsrs	r3, r7, #1
 80003fe:	e00e      	b.n	800041e <__udivmoddi4+0xfa>
 8000400:	42ab      	cmp	r3, r5
 8000402:	d101      	bne.n	8000408 <__udivmoddi4+0xe4>
 8000404:	42a2      	cmp	r2, r4
 8000406:	d80c      	bhi.n	8000422 <__udivmoddi4+0xfe>
 8000408:	1aa4      	subs	r4, r4, r2
 800040a:	419d      	sbcs	r5, r3
 800040c:	2001      	movs	r0, #1
 800040e:	1924      	adds	r4, r4, r4
 8000410:	416d      	adcs	r5, r5
 8000412:	2100      	movs	r1, #0
 8000414:	3e01      	subs	r6, #1
 8000416:	1824      	adds	r4, r4, r0
 8000418:	414d      	adcs	r5, r1
 800041a:	2e00      	cmp	r6, #0
 800041c:	d006      	beq.n	800042c <__udivmoddi4+0x108>
 800041e:	42ab      	cmp	r3, r5
 8000420:	d9ee      	bls.n	8000400 <__udivmoddi4+0xdc>
 8000422:	3e01      	subs	r6, #1
 8000424:	1924      	adds	r4, r4, r4
 8000426:	416d      	adcs	r5, r5
 8000428:	2e00      	cmp	r6, #0
 800042a:	d1f8      	bne.n	800041e <__udivmoddi4+0xfa>
 800042c:	9800      	ldr	r0, [sp, #0]
 800042e:	9901      	ldr	r1, [sp, #4]
 8000430:	465b      	mov	r3, fp
 8000432:	1900      	adds	r0, r0, r4
 8000434:	4169      	adcs	r1, r5
 8000436:	2b00      	cmp	r3, #0
 8000438:	db24      	blt.n	8000484 <__udivmoddi4+0x160>
 800043a:	002b      	movs	r3, r5
 800043c:	465a      	mov	r2, fp
 800043e:	4644      	mov	r4, r8
 8000440:	40d3      	lsrs	r3, r2
 8000442:	002a      	movs	r2, r5
 8000444:	40e2      	lsrs	r2, r4
 8000446:	001c      	movs	r4, r3
 8000448:	465b      	mov	r3, fp
 800044a:	0015      	movs	r5, r2
 800044c:	2b00      	cmp	r3, #0
 800044e:	db2a      	blt.n	80004a6 <__udivmoddi4+0x182>
 8000450:	0026      	movs	r6, r4
 8000452:	409e      	lsls	r6, r3
 8000454:	0033      	movs	r3, r6
 8000456:	0026      	movs	r6, r4
 8000458:	4647      	mov	r7, r8
 800045a:	40be      	lsls	r6, r7
 800045c:	0032      	movs	r2, r6
 800045e:	1a80      	subs	r0, r0, r2
 8000460:	4199      	sbcs	r1, r3
 8000462:	9000      	str	r0, [sp, #0]
 8000464:	9101      	str	r1, [sp, #4]
 8000466:	e79f      	b.n	80003a8 <__udivmoddi4+0x84>
 8000468:	42a3      	cmp	r3, r4
 800046a:	d8bc      	bhi.n	80003e6 <__udivmoddi4+0xc2>
 800046c:	e783      	b.n	8000376 <__udivmoddi4+0x52>
 800046e:	4642      	mov	r2, r8
 8000470:	2320      	movs	r3, #32
 8000472:	2100      	movs	r1, #0
 8000474:	1a9b      	subs	r3, r3, r2
 8000476:	2200      	movs	r2, #0
 8000478:	9100      	str	r1, [sp, #0]
 800047a:	9201      	str	r2, [sp, #4]
 800047c:	2201      	movs	r2, #1
 800047e:	40da      	lsrs	r2, r3
 8000480:	9201      	str	r2, [sp, #4]
 8000482:	e786      	b.n	8000392 <__udivmoddi4+0x6e>
 8000484:	4642      	mov	r2, r8
 8000486:	2320      	movs	r3, #32
 8000488:	1a9b      	subs	r3, r3, r2
 800048a:	002a      	movs	r2, r5
 800048c:	4646      	mov	r6, r8
 800048e:	409a      	lsls	r2, r3
 8000490:	0023      	movs	r3, r4
 8000492:	40f3      	lsrs	r3, r6
 8000494:	4644      	mov	r4, r8
 8000496:	4313      	orrs	r3, r2
 8000498:	002a      	movs	r2, r5
 800049a:	40e2      	lsrs	r2, r4
 800049c:	001c      	movs	r4, r3
 800049e:	465b      	mov	r3, fp
 80004a0:	0015      	movs	r5, r2
 80004a2:	2b00      	cmp	r3, #0
 80004a4:	dad4      	bge.n	8000450 <__udivmoddi4+0x12c>
 80004a6:	4642      	mov	r2, r8
 80004a8:	002f      	movs	r7, r5
 80004aa:	2320      	movs	r3, #32
 80004ac:	0026      	movs	r6, r4
 80004ae:	4097      	lsls	r7, r2
 80004b0:	1a9b      	subs	r3, r3, r2
 80004b2:	40de      	lsrs	r6, r3
 80004b4:	003b      	movs	r3, r7
 80004b6:	4333      	orrs	r3, r6
 80004b8:	e7cd      	b.n	8000456 <__udivmoddi4+0x132>
 80004ba:	46c0      	nop			; (mov r8, r8)

080004bc <__aeabi_fdiv>:
 80004bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004be:	464f      	mov	r7, r9
 80004c0:	4646      	mov	r6, r8
 80004c2:	46d6      	mov	lr, sl
 80004c4:	0245      	lsls	r5, r0, #9
 80004c6:	b5c0      	push	{r6, r7, lr}
 80004c8:	0047      	lsls	r7, r0, #1
 80004ca:	1c0c      	adds	r4, r1, #0
 80004cc:	0a6d      	lsrs	r5, r5, #9
 80004ce:	0e3f      	lsrs	r7, r7, #24
 80004d0:	0fc6      	lsrs	r6, r0, #31
 80004d2:	2f00      	cmp	r7, #0
 80004d4:	d100      	bne.n	80004d8 <__aeabi_fdiv+0x1c>
 80004d6:	e070      	b.n	80005ba <__aeabi_fdiv+0xfe>
 80004d8:	2fff      	cmp	r7, #255	; 0xff
 80004da:	d100      	bne.n	80004de <__aeabi_fdiv+0x22>
 80004dc:	e075      	b.n	80005ca <__aeabi_fdiv+0x10e>
 80004de:	00eb      	lsls	r3, r5, #3
 80004e0:	2580      	movs	r5, #128	; 0x80
 80004e2:	04ed      	lsls	r5, r5, #19
 80004e4:	431d      	orrs	r5, r3
 80004e6:	2300      	movs	r3, #0
 80004e8:	4699      	mov	r9, r3
 80004ea:	469a      	mov	sl, r3
 80004ec:	3f7f      	subs	r7, #127	; 0x7f
 80004ee:	0260      	lsls	r0, r4, #9
 80004f0:	0a43      	lsrs	r3, r0, #9
 80004f2:	4698      	mov	r8, r3
 80004f4:	0063      	lsls	r3, r4, #1
 80004f6:	0e1b      	lsrs	r3, r3, #24
 80004f8:	0fe4      	lsrs	r4, r4, #31
 80004fa:	2b00      	cmp	r3, #0
 80004fc:	d04e      	beq.n	800059c <__aeabi_fdiv+0xe0>
 80004fe:	2bff      	cmp	r3, #255	; 0xff
 8000500:	d046      	beq.n	8000590 <__aeabi_fdiv+0xd4>
 8000502:	4642      	mov	r2, r8
 8000504:	00d0      	lsls	r0, r2, #3
 8000506:	2280      	movs	r2, #128	; 0x80
 8000508:	04d2      	lsls	r2, r2, #19
 800050a:	4302      	orrs	r2, r0
 800050c:	4690      	mov	r8, r2
 800050e:	2200      	movs	r2, #0
 8000510:	3b7f      	subs	r3, #127	; 0x7f
 8000512:	0031      	movs	r1, r6
 8000514:	1aff      	subs	r7, r7, r3
 8000516:	464b      	mov	r3, r9
 8000518:	4061      	eors	r1, r4
 800051a:	b2c9      	uxtb	r1, r1
 800051c:	4313      	orrs	r3, r2
 800051e:	2b0f      	cmp	r3, #15
 8000520:	d900      	bls.n	8000524 <__aeabi_fdiv+0x68>
 8000522:	e0b5      	b.n	8000690 <__aeabi_fdiv+0x1d4>
 8000524:	486e      	ldr	r0, [pc, #440]	; (80006e0 <__aeabi_fdiv+0x224>)
 8000526:	009b      	lsls	r3, r3, #2
 8000528:	58c3      	ldr	r3, [r0, r3]
 800052a:	469f      	mov	pc, r3
 800052c:	2300      	movs	r3, #0
 800052e:	4698      	mov	r8, r3
 8000530:	0026      	movs	r6, r4
 8000532:	4645      	mov	r5, r8
 8000534:	4692      	mov	sl, r2
 8000536:	4653      	mov	r3, sl
 8000538:	2b02      	cmp	r3, #2
 800053a:	d100      	bne.n	800053e <__aeabi_fdiv+0x82>
 800053c:	e089      	b.n	8000652 <__aeabi_fdiv+0x196>
 800053e:	2b03      	cmp	r3, #3
 8000540:	d100      	bne.n	8000544 <__aeabi_fdiv+0x88>
 8000542:	e09e      	b.n	8000682 <__aeabi_fdiv+0x1c6>
 8000544:	2b01      	cmp	r3, #1
 8000546:	d018      	beq.n	800057a <__aeabi_fdiv+0xbe>
 8000548:	003b      	movs	r3, r7
 800054a:	337f      	adds	r3, #127	; 0x7f
 800054c:	2b00      	cmp	r3, #0
 800054e:	dd69      	ble.n	8000624 <__aeabi_fdiv+0x168>
 8000550:	076a      	lsls	r2, r5, #29
 8000552:	d004      	beq.n	800055e <__aeabi_fdiv+0xa2>
 8000554:	220f      	movs	r2, #15
 8000556:	402a      	ands	r2, r5
 8000558:	2a04      	cmp	r2, #4
 800055a:	d000      	beq.n	800055e <__aeabi_fdiv+0xa2>
 800055c:	3504      	adds	r5, #4
 800055e:	012a      	lsls	r2, r5, #4
 8000560:	d503      	bpl.n	800056a <__aeabi_fdiv+0xae>
 8000562:	4b60      	ldr	r3, [pc, #384]	; (80006e4 <__aeabi_fdiv+0x228>)
 8000564:	401d      	ands	r5, r3
 8000566:	003b      	movs	r3, r7
 8000568:	3380      	adds	r3, #128	; 0x80
 800056a:	2bfe      	cmp	r3, #254	; 0xfe
 800056c:	dd00      	ble.n	8000570 <__aeabi_fdiv+0xb4>
 800056e:	e070      	b.n	8000652 <__aeabi_fdiv+0x196>
 8000570:	01ad      	lsls	r5, r5, #6
 8000572:	0a6d      	lsrs	r5, r5, #9
 8000574:	b2d8      	uxtb	r0, r3
 8000576:	e002      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000578:	000e      	movs	r6, r1
 800057a:	2000      	movs	r0, #0
 800057c:	2500      	movs	r5, #0
 800057e:	05c0      	lsls	r0, r0, #23
 8000580:	4328      	orrs	r0, r5
 8000582:	07f6      	lsls	r6, r6, #31
 8000584:	4330      	orrs	r0, r6
 8000586:	bce0      	pop	{r5, r6, r7}
 8000588:	46ba      	mov	sl, r7
 800058a:	46b1      	mov	r9, r6
 800058c:	46a8      	mov	r8, r5
 800058e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000590:	4643      	mov	r3, r8
 8000592:	2b00      	cmp	r3, #0
 8000594:	d13f      	bne.n	8000616 <__aeabi_fdiv+0x15a>
 8000596:	2202      	movs	r2, #2
 8000598:	3fff      	subs	r7, #255	; 0xff
 800059a:	e003      	b.n	80005a4 <__aeabi_fdiv+0xe8>
 800059c:	4643      	mov	r3, r8
 800059e:	2b00      	cmp	r3, #0
 80005a0:	d12d      	bne.n	80005fe <__aeabi_fdiv+0x142>
 80005a2:	2201      	movs	r2, #1
 80005a4:	0031      	movs	r1, r6
 80005a6:	464b      	mov	r3, r9
 80005a8:	4061      	eors	r1, r4
 80005aa:	b2c9      	uxtb	r1, r1
 80005ac:	4313      	orrs	r3, r2
 80005ae:	2b0f      	cmp	r3, #15
 80005b0:	d834      	bhi.n	800061c <__aeabi_fdiv+0x160>
 80005b2:	484d      	ldr	r0, [pc, #308]	; (80006e8 <__aeabi_fdiv+0x22c>)
 80005b4:	009b      	lsls	r3, r3, #2
 80005b6:	58c3      	ldr	r3, [r0, r3]
 80005b8:	469f      	mov	pc, r3
 80005ba:	2d00      	cmp	r5, #0
 80005bc:	d113      	bne.n	80005e6 <__aeabi_fdiv+0x12a>
 80005be:	2304      	movs	r3, #4
 80005c0:	4699      	mov	r9, r3
 80005c2:	3b03      	subs	r3, #3
 80005c4:	2700      	movs	r7, #0
 80005c6:	469a      	mov	sl, r3
 80005c8:	e791      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005ca:	2d00      	cmp	r5, #0
 80005cc:	d105      	bne.n	80005da <__aeabi_fdiv+0x11e>
 80005ce:	2308      	movs	r3, #8
 80005d0:	4699      	mov	r9, r3
 80005d2:	3b06      	subs	r3, #6
 80005d4:	27ff      	movs	r7, #255	; 0xff
 80005d6:	469a      	mov	sl, r3
 80005d8:	e789      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005da:	230c      	movs	r3, #12
 80005dc:	4699      	mov	r9, r3
 80005de:	3b09      	subs	r3, #9
 80005e0:	27ff      	movs	r7, #255	; 0xff
 80005e2:	469a      	mov	sl, r3
 80005e4:	e783      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005e6:	0028      	movs	r0, r5
 80005e8:	f000 fbf0 	bl	8000dcc <__clzsi2>
 80005ec:	2776      	movs	r7, #118	; 0x76
 80005ee:	1f43      	subs	r3, r0, #5
 80005f0:	409d      	lsls	r5, r3
 80005f2:	2300      	movs	r3, #0
 80005f4:	427f      	negs	r7, r7
 80005f6:	4699      	mov	r9, r3
 80005f8:	469a      	mov	sl, r3
 80005fa:	1a3f      	subs	r7, r7, r0
 80005fc:	e777      	b.n	80004ee <__aeabi_fdiv+0x32>
 80005fe:	4640      	mov	r0, r8
 8000600:	f000 fbe4 	bl	8000dcc <__clzsi2>
 8000604:	4642      	mov	r2, r8
 8000606:	1f43      	subs	r3, r0, #5
 8000608:	409a      	lsls	r2, r3
 800060a:	2376      	movs	r3, #118	; 0x76
 800060c:	425b      	negs	r3, r3
 800060e:	4690      	mov	r8, r2
 8000610:	1a1b      	subs	r3, r3, r0
 8000612:	2200      	movs	r2, #0
 8000614:	e77d      	b.n	8000512 <__aeabi_fdiv+0x56>
 8000616:	23ff      	movs	r3, #255	; 0xff
 8000618:	2203      	movs	r2, #3
 800061a:	e77a      	b.n	8000512 <__aeabi_fdiv+0x56>
 800061c:	000e      	movs	r6, r1
 800061e:	20ff      	movs	r0, #255	; 0xff
 8000620:	2500      	movs	r5, #0
 8000622:	e7ac      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000624:	2001      	movs	r0, #1
 8000626:	1ac0      	subs	r0, r0, r3
 8000628:	281b      	cmp	r0, #27
 800062a:	dca6      	bgt.n	800057a <__aeabi_fdiv+0xbe>
 800062c:	379e      	adds	r7, #158	; 0x9e
 800062e:	002a      	movs	r2, r5
 8000630:	40bd      	lsls	r5, r7
 8000632:	40c2      	lsrs	r2, r0
 8000634:	1e6b      	subs	r3, r5, #1
 8000636:	419d      	sbcs	r5, r3
 8000638:	4315      	orrs	r5, r2
 800063a:	076b      	lsls	r3, r5, #29
 800063c:	d004      	beq.n	8000648 <__aeabi_fdiv+0x18c>
 800063e:	230f      	movs	r3, #15
 8000640:	402b      	ands	r3, r5
 8000642:	2b04      	cmp	r3, #4
 8000644:	d000      	beq.n	8000648 <__aeabi_fdiv+0x18c>
 8000646:	3504      	adds	r5, #4
 8000648:	016b      	lsls	r3, r5, #5
 800064a:	d544      	bpl.n	80006d6 <__aeabi_fdiv+0x21a>
 800064c:	2001      	movs	r0, #1
 800064e:	2500      	movs	r5, #0
 8000650:	e795      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000652:	20ff      	movs	r0, #255	; 0xff
 8000654:	2500      	movs	r5, #0
 8000656:	e792      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000658:	2580      	movs	r5, #128	; 0x80
 800065a:	2600      	movs	r6, #0
 800065c:	20ff      	movs	r0, #255	; 0xff
 800065e:	03ed      	lsls	r5, r5, #15
 8000660:	e78d      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000662:	2300      	movs	r3, #0
 8000664:	4698      	mov	r8, r3
 8000666:	2080      	movs	r0, #128	; 0x80
 8000668:	03c0      	lsls	r0, r0, #15
 800066a:	4205      	tst	r5, r0
 800066c:	d009      	beq.n	8000682 <__aeabi_fdiv+0x1c6>
 800066e:	4643      	mov	r3, r8
 8000670:	4203      	tst	r3, r0
 8000672:	d106      	bne.n	8000682 <__aeabi_fdiv+0x1c6>
 8000674:	4645      	mov	r5, r8
 8000676:	4305      	orrs	r5, r0
 8000678:	026d      	lsls	r5, r5, #9
 800067a:	0026      	movs	r6, r4
 800067c:	20ff      	movs	r0, #255	; 0xff
 800067e:	0a6d      	lsrs	r5, r5, #9
 8000680:	e77d      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000682:	2080      	movs	r0, #128	; 0x80
 8000684:	03c0      	lsls	r0, r0, #15
 8000686:	4305      	orrs	r5, r0
 8000688:	026d      	lsls	r5, r5, #9
 800068a:	20ff      	movs	r0, #255	; 0xff
 800068c:	0a6d      	lsrs	r5, r5, #9
 800068e:	e776      	b.n	800057e <__aeabi_fdiv+0xc2>
 8000690:	4642      	mov	r2, r8
 8000692:	016b      	lsls	r3, r5, #5
 8000694:	0150      	lsls	r0, r2, #5
 8000696:	4283      	cmp	r3, r0
 8000698:	d219      	bcs.n	80006ce <__aeabi_fdiv+0x212>
 800069a:	221b      	movs	r2, #27
 800069c:	2500      	movs	r5, #0
 800069e:	3f01      	subs	r7, #1
 80006a0:	2601      	movs	r6, #1
 80006a2:	001c      	movs	r4, r3
 80006a4:	006d      	lsls	r5, r5, #1
 80006a6:	005b      	lsls	r3, r3, #1
 80006a8:	2c00      	cmp	r4, #0
 80006aa:	db01      	blt.n	80006b0 <__aeabi_fdiv+0x1f4>
 80006ac:	4298      	cmp	r0, r3
 80006ae:	d801      	bhi.n	80006b4 <__aeabi_fdiv+0x1f8>
 80006b0:	1a1b      	subs	r3, r3, r0
 80006b2:	4335      	orrs	r5, r6
 80006b4:	3a01      	subs	r2, #1
 80006b6:	2a00      	cmp	r2, #0
 80006b8:	d1f3      	bne.n	80006a2 <__aeabi_fdiv+0x1e6>
 80006ba:	1e5a      	subs	r2, r3, #1
 80006bc:	4193      	sbcs	r3, r2
 80006be:	431d      	orrs	r5, r3
 80006c0:	003b      	movs	r3, r7
 80006c2:	337f      	adds	r3, #127	; 0x7f
 80006c4:	000e      	movs	r6, r1
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	dd00      	ble.n	80006cc <__aeabi_fdiv+0x210>
 80006ca:	e741      	b.n	8000550 <__aeabi_fdiv+0x94>
 80006cc:	e7aa      	b.n	8000624 <__aeabi_fdiv+0x168>
 80006ce:	221a      	movs	r2, #26
 80006d0:	2501      	movs	r5, #1
 80006d2:	1a1b      	subs	r3, r3, r0
 80006d4:	e7e4      	b.n	80006a0 <__aeabi_fdiv+0x1e4>
 80006d6:	01ad      	lsls	r5, r5, #6
 80006d8:	2000      	movs	r0, #0
 80006da:	0a6d      	lsrs	r5, r5, #9
 80006dc:	e74f      	b.n	800057e <__aeabi_fdiv+0xc2>
 80006de:	46c0      	nop			; (mov r8, r8)
 80006e0:	08004c40 	.word	0x08004c40
 80006e4:	f7ffffff 	.word	0xf7ffffff
 80006e8:	08004c80 	.word	0x08004c80

080006ec <__aeabi_fmul>:
 80006ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006ee:	464f      	mov	r7, r9
 80006f0:	4646      	mov	r6, r8
 80006f2:	46d6      	mov	lr, sl
 80006f4:	0244      	lsls	r4, r0, #9
 80006f6:	0045      	lsls	r5, r0, #1
 80006f8:	b5c0      	push	{r6, r7, lr}
 80006fa:	0a64      	lsrs	r4, r4, #9
 80006fc:	1c0f      	adds	r7, r1, #0
 80006fe:	0e2d      	lsrs	r5, r5, #24
 8000700:	0fc6      	lsrs	r6, r0, #31
 8000702:	2d00      	cmp	r5, #0
 8000704:	d100      	bne.n	8000708 <__aeabi_fmul+0x1c>
 8000706:	e08d      	b.n	8000824 <__aeabi_fmul+0x138>
 8000708:	2dff      	cmp	r5, #255	; 0xff
 800070a:	d100      	bne.n	800070e <__aeabi_fmul+0x22>
 800070c:	e092      	b.n	8000834 <__aeabi_fmul+0x148>
 800070e:	2300      	movs	r3, #0
 8000710:	2080      	movs	r0, #128	; 0x80
 8000712:	4699      	mov	r9, r3
 8000714:	469a      	mov	sl, r3
 8000716:	00e4      	lsls	r4, r4, #3
 8000718:	04c0      	lsls	r0, r0, #19
 800071a:	4304      	orrs	r4, r0
 800071c:	3d7f      	subs	r5, #127	; 0x7f
 800071e:	0278      	lsls	r0, r7, #9
 8000720:	0a43      	lsrs	r3, r0, #9
 8000722:	4698      	mov	r8, r3
 8000724:	007b      	lsls	r3, r7, #1
 8000726:	0e1b      	lsrs	r3, r3, #24
 8000728:	0fff      	lsrs	r7, r7, #31
 800072a:	2b00      	cmp	r3, #0
 800072c:	d100      	bne.n	8000730 <__aeabi_fmul+0x44>
 800072e:	e070      	b.n	8000812 <__aeabi_fmul+0x126>
 8000730:	2bff      	cmp	r3, #255	; 0xff
 8000732:	d100      	bne.n	8000736 <__aeabi_fmul+0x4a>
 8000734:	e086      	b.n	8000844 <__aeabi_fmul+0x158>
 8000736:	4642      	mov	r2, r8
 8000738:	00d0      	lsls	r0, r2, #3
 800073a:	2280      	movs	r2, #128	; 0x80
 800073c:	3b7f      	subs	r3, #127	; 0x7f
 800073e:	18ed      	adds	r5, r5, r3
 8000740:	2300      	movs	r3, #0
 8000742:	04d2      	lsls	r2, r2, #19
 8000744:	4302      	orrs	r2, r0
 8000746:	4690      	mov	r8, r2
 8000748:	469c      	mov	ip, r3
 800074a:	0031      	movs	r1, r6
 800074c:	464b      	mov	r3, r9
 800074e:	4079      	eors	r1, r7
 8000750:	1c68      	adds	r0, r5, #1
 8000752:	2b0f      	cmp	r3, #15
 8000754:	d81c      	bhi.n	8000790 <__aeabi_fmul+0xa4>
 8000756:	4a76      	ldr	r2, [pc, #472]	; (8000930 <__aeabi_fmul+0x244>)
 8000758:	009b      	lsls	r3, r3, #2
 800075a:	58d3      	ldr	r3, [r2, r3]
 800075c:	469f      	mov	pc, r3
 800075e:	0039      	movs	r1, r7
 8000760:	4644      	mov	r4, r8
 8000762:	46e2      	mov	sl, ip
 8000764:	4653      	mov	r3, sl
 8000766:	2b02      	cmp	r3, #2
 8000768:	d00f      	beq.n	800078a <__aeabi_fmul+0x9e>
 800076a:	2b03      	cmp	r3, #3
 800076c:	d100      	bne.n	8000770 <__aeabi_fmul+0x84>
 800076e:	e0d7      	b.n	8000920 <__aeabi_fmul+0x234>
 8000770:	2b01      	cmp	r3, #1
 8000772:	d137      	bne.n	80007e4 <__aeabi_fmul+0xf8>
 8000774:	2000      	movs	r0, #0
 8000776:	2400      	movs	r4, #0
 8000778:	05c0      	lsls	r0, r0, #23
 800077a:	4320      	orrs	r0, r4
 800077c:	07c9      	lsls	r1, r1, #31
 800077e:	4308      	orrs	r0, r1
 8000780:	bce0      	pop	{r5, r6, r7}
 8000782:	46ba      	mov	sl, r7
 8000784:	46b1      	mov	r9, r6
 8000786:	46a8      	mov	r8, r5
 8000788:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800078a:	20ff      	movs	r0, #255	; 0xff
 800078c:	2400      	movs	r4, #0
 800078e:	e7f3      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000790:	0c26      	lsrs	r6, r4, #16
 8000792:	0424      	lsls	r4, r4, #16
 8000794:	0c22      	lsrs	r2, r4, #16
 8000796:	4644      	mov	r4, r8
 8000798:	0424      	lsls	r4, r4, #16
 800079a:	0c24      	lsrs	r4, r4, #16
 800079c:	4643      	mov	r3, r8
 800079e:	0027      	movs	r7, r4
 80007a0:	0c1b      	lsrs	r3, r3, #16
 80007a2:	4357      	muls	r7, r2
 80007a4:	4374      	muls	r4, r6
 80007a6:	435a      	muls	r2, r3
 80007a8:	435e      	muls	r6, r3
 80007aa:	1912      	adds	r2, r2, r4
 80007ac:	0c3b      	lsrs	r3, r7, #16
 80007ae:	189b      	adds	r3, r3, r2
 80007b0:	429c      	cmp	r4, r3
 80007b2:	d903      	bls.n	80007bc <__aeabi_fmul+0xd0>
 80007b4:	2280      	movs	r2, #128	; 0x80
 80007b6:	0252      	lsls	r2, r2, #9
 80007b8:	4694      	mov	ip, r2
 80007ba:	4466      	add	r6, ip
 80007bc:	043f      	lsls	r7, r7, #16
 80007be:	041a      	lsls	r2, r3, #16
 80007c0:	0c3f      	lsrs	r7, r7, #16
 80007c2:	19d2      	adds	r2, r2, r7
 80007c4:	0194      	lsls	r4, r2, #6
 80007c6:	1e67      	subs	r7, r4, #1
 80007c8:	41bc      	sbcs	r4, r7
 80007ca:	0c1b      	lsrs	r3, r3, #16
 80007cc:	0e92      	lsrs	r2, r2, #26
 80007ce:	199b      	adds	r3, r3, r6
 80007d0:	4314      	orrs	r4, r2
 80007d2:	019b      	lsls	r3, r3, #6
 80007d4:	431c      	orrs	r4, r3
 80007d6:	011b      	lsls	r3, r3, #4
 80007d8:	d400      	bmi.n	80007dc <__aeabi_fmul+0xf0>
 80007da:	e09b      	b.n	8000914 <__aeabi_fmul+0x228>
 80007dc:	2301      	movs	r3, #1
 80007de:	0862      	lsrs	r2, r4, #1
 80007e0:	401c      	ands	r4, r3
 80007e2:	4314      	orrs	r4, r2
 80007e4:	0002      	movs	r2, r0
 80007e6:	327f      	adds	r2, #127	; 0x7f
 80007e8:	2a00      	cmp	r2, #0
 80007ea:	dd64      	ble.n	80008b6 <__aeabi_fmul+0x1ca>
 80007ec:	0763      	lsls	r3, r4, #29
 80007ee:	d004      	beq.n	80007fa <__aeabi_fmul+0x10e>
 80007f0:	230f      	movs	r3, #15
 80007f2:	4023      	ands	r3, r4
 80007f4:	2b04      	cmp	r3, #4
 80007f6:	d000      	beq.n	80007fa <__aeabi_fmul+0x10e>
 80007f8:	3404      	adds	r4, #4
 80007fa:	0123      	lsls	r3, r4, #4
 80007fc:	d503      	bpl.n	8000806 <__aeabi_fmul+0x11a>
 80007fe:	0002      	movs	r2, r0
 8000800:	4b4c      	ldr	r3, [pc, #304]	; (8000934 <__aeabi_fmul+0x248>)
 8000802:	3280      	adds	r2, #128	; 0x80
 8000804:	401c      	ands	r4, r3
 8000806:	2afe      	cmp	r2, #254	; 0xfe
 8000808:	dcbf      	bgt.n	800078a <__aeabi_fmul+0x9e>
 800080a:	01a4      	lsls	r4, r4, #6
 800080c:	0a64      	lsrs	r4, r4, #9
 800080e:	b2d0      	uxtb	r0, r2
 8000810:	e7b2      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000812:	4643      	mov	r3, r8
 8000814:	2b00      	cmp	r3, #0
 8000816:	d13d      	bne.n	8000894 <__aeabi_fmul+0x1a8>
 8000818:	464a      	mov	r2, r9
 800081a:	3301      	adds	r3, #1
 800081c:	431a      	orrs	r2, r3
 800081e:	4691      	mov	r9, r2
 8000820:	469c      	mov	ip, r3
 8000822:	e792      	b.n	800074a <__aeabi_fmul+0x5e>
 8000824:	2c00      	cmp	r4, #0
 8000826:	d129      	bne.n	800087c <__aeabi_fmul+0x190>
 8000828:	2304      	movs	r3, #4
 800082a:	4699      	mov	r9, r3
 800082c:	3b03      	subs	r3, #3
 800082e:	2500      	movs	r5, #0
 8000830:	469a      	mov	sl, r3
 8000832:	e774      	b.n	800071e <__aeabi_fmul+0x32>
 8000834:	2c00      	cmp	r4, #0
 8000836:	d11b      	bne.n	8000870 <__aeabi_fmul+0x184>
 8000838:	2308      	movs	r3, #8
 800083a:	4699      	mov	r9, r3
 800083c:	3b06      	subs	r3, #6
 800083e:	25ff      	movs	r5, #255	; 0xff
 8000840:	469a      	mov	sl, r3
 8000842:	e76c      	b.n	800071e <__aeabi_fmul+0x32>
 8000844:	4643      	mov	r3, r8
 8000846:	35ff      	adds	r5, #255	; 0xff
 8000848:	2b00      	cmp	r3, #0
 800084a:	d10b      	bne.n	8000864 <__aeabi_fmul+0x178>
 800084c:	2302      	movs	r3, #2
 800084e:	464a      	mov	r2, r9
 8000850:	431a      	orrs	r2, r3
 8000852:	4691      	mov	r9, r2
 8000854:	469c      	mov	ip, r3
 8000856:	e778      	b.n	800074a <__aeabi_fmul+0x5e>
 8000858:	4653      	mov	r3, sl
 800085a:	0031      	movs	r1, r6
 800085c:	2b02      	cmp	r3, #2
 800085e:	d000      	beq.n	8000862 <__aeabi_fmul+0x176>
 8000860:	e783      	b.n	800076a <__aeabi_fmul+0x7e>
 8000862:	e792      	b.n	800078a <__aeabi_fmul+0x9e>
 8000864:	2303      	movs	r3, #3
 8000866:	464a      	mov	r2, r9
 8000868:	431a      	orrs	r2, r3
 800086a:	4691      	mov	r9, r2
 800086c:	469c      	mov	ip, r3
 800086e:	e76c      	b.n	800074a <__aeabi_fmul+0x5e>
 8000870:	230c      	movs	r3, #12
 8000872:	4699      	mov	r9, r3
 8000874:	3b09      	subs	r3, #9
 8000876:	25ff      	movs	r5, #255	; 0xff
 8000878:	469a      	mov	sl, r3
 800087a:	e750      	b.n	800071e <__aeabi_fmul+0x32>
 800087c:	0020      	movs	r0, r4
 800087e:	f000 faa5 	bl	8000dcc <__clzsi2>
 8000882:	2576      	movs	r5, #118	; 0x76
 8000884:	1f43      	subs	r3, r0, #5
 8000886:	409c      	lsls	r4, r3
 8000888:	2300      	movs	r3, #0
 800088a:	426d      	negs	r5, r5
 800088c:	4699      	mov	r9, r3
 800088e:	469a      	mov	sl, r3
 8000890:	1a2d      	subs	r5, r5, r0
 8000892:	e744      	b.n	800071e <__aeabi_fmul+0x32>
 8000894:	4640      	mov	r0, r8
 8000896:	f000 fa99 	bl	8000dcc <__clzsi2>
 800089a:	4642      	mov	r2, r8
 800089c:	1f43      	subs	r3, r0, #5
 800089e:	409a      	lsls	r2, r3
 80008a0:	2300      	movs	r3, #0
 80008a2:	1a2d      	subs	r5, r5, r0
 80008a4:	4690      	mov	r8, r2
 80008a6:	469c      	mov	ip, r3
 80008a8:	3d76      	subs	r5, #118	; 0x76
 80008aa:	e74e      	b.n	800074a <__aeabi_fmul+0x5e>
 80008ac:	2480      	movs	r4, #128	; 0x80
 80008ae:	2100      	movs	r1, #0
 80008b0:	20ff      	movs	r0, #255	; 0xff
 80008b2:	03e4      	lsls	r4, r4, #15
 80008b4:	e760      	b.n	8000778 <__aeabi_fmul+0x8c>
 80008b6:	2301      	movs	r3, #1
 80008b8:	1a9b      	subs	r3, r3, r2
 80008ba:	2b1b      	cmp	r3, #27
 80008bc:	dd00      	ble.n	80008c0 <__aeabi_fmul+0x1d4>
 80008be:	e759      	b.n	8000774 <__aeabi_fmul+0x88>
 80008c0:	0022      	movs	r2, r4
 80008c2:	309e      	adds	r0, #158	; 0x9e
 80008c4:	40da      	lsrs	r2, r3
 80008c6:	4084      	lsls	r4, r0
 80008c8:	0013      	movs	r3, r2
 80008ca:	1e62      	subs	r2, r4, #1
 80008cc:	4194      	sbcs	r4, r2
 80008ce:	431c      	orrs	r4, r3
 80008d0:	0763      	lsls	r3, r4, #29
 80008d2:	d004      	beq.n	80008de <__aeabi_fmul+0x1f2>
 80008d4:	230f      	movs	r3, #15
 80008d6:	4023      	ands	r3, r4
 80008d8:	2b04      	cmp	r3, #4
 80008da:	d000      	beq.n	80008de <__aeabi_fmul+0x1f2>
 80008dc:	3404      	adds	r4, #4
 80008de:	0163      	lsls	r3, r4, #5
 80008e0:	d51a      	bpl.n	8000918 <__aeabi_fmul+0x22c>
 80008e2:	2001      	movs	r0, #1
 80008e4:	2400      	movs	r4, #0
 80008e6:	e747      	b.n	8000778 <__aeabi_fmul+0x8c>
 80008e8:	2080      	movs	r0, #128	; 0x80
 80008ea:	03c0      	lsls	r0, r0, #15
 80008ec:	4204      	tst	r4, r0
 80008ee:	d009      	beq.n	8000904 <__aeabi_fmul+0x218>
 80008f0:	4643      	mov	r3, r8
 80008f2:	4203      	tst	r3, r0
 80008f4:	d106      	bne.n	8000904 <__aeabi_fmul+0x218>
 80008f6:	4644      	mov	r4, r8
 80008f8:	4304      	orrs	r4, r0
 80008fa:	0264      	lsls	r4, r4, #9
 80008fc:	0039      	movs	r1, r7
 80008fe:	20ff      	movs	r0, #255	; 0xff
 8000900:	0a64      	lsrs	r4, r4, #9
 8000902:	e739      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000904:	2080      	movs	r0, #128	; 0x80
 8000906:	03c0      	lsls	r0, r0, #15
 8000908:	4304      	orrs	r4, r0
 800090a:	0264      	lsls	r4, r4, #9
 800090c:	0031      	movs	r1, r6
 800090e:	20ff      	movs	r0, #255	; 0xff
 8000910:	0a64      	lsrs	r4, r4, #9
 8000912:	e731      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000914:	0028      	movs	r0, r5
 8000916:	e765      	b.n	80007e4 <__aeabi_fmul+0xf8>
 8000918:	01a4      	lsls	r4, r4, #6
 800091a:	2000      	movs	r0, #0
 800091c:	0a64      	lsrs	r4, r4, #9
 800091e:	e72b      	b.n	8000778 <__aeabi_fmul+0x8c>
 8000920:	2080      	movs	r0, #128	; 0x80
 8000922:	03c0      	lsls	r0, r0, #15
 8000924:	4304      	orrs	r4, r0
 8000926:	0264      	lsls	r4, r4, #9
 8000928:	20ff      	movs	r0, #255	; 0xff
 800092a:	0a64      	lsrs	r4, r4, #9
 800092c:	e724      	b.n	8000778 <__aeabi_fmul+0x8c>
 800092e:	46c0      	nop			; (mov r8, r8)
 8000930:	08004cc0 	.word	0x08004cc0
 8000934:	f7ffffff 	.word	0xf7ffffff

08000938 <__aeabi_fsub>:
 8000938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800093a:	46ce      	mov	lr, r9
 800093c:	4647      	mov	r7, r8
 800093e:	0243      	lsls	r3, r0, #9
 8000940:	0a5b      	lsrs	r3, r3, #9
 8000942:	024e      	lsls	r6, r1, #9
 8000944:	00da      	lsls	r2, r3, #3
 8000946:	4694      	mov	ip, r2
 8000948:	0a72      	lsrs	r2, r6, #9
 800094a:	4691      	mov	r9, r2
 800094c:	0045      	lsls	r5, r0, #1
 800094e:	004a      	lsls	r2, r1, #1
 8000950:	b580      	push	{r7, lr}
 8000952:	0e2d      	lsrs	r5, r5, #24
 8000954:	001f      	movs	r7, r3
 8000956:	0fc4      	lsrs	r4, r0, #31
 8000958:	0e12      	lsrs	r2, r2, #24
 800095a:	0fc9      	lsrs	r1, r1, #31
 800095c:	09b6      	lsrs	r6, r6, #6
 800095e:	2aff      	cmp	r2, #255	; 0xff
 8000960:	d05b      	beq.n	8000a1a <__aeabi_fsub+0xe2>
 8000962:	2001      	movs	r0, #1
 8000964:	4041      	eors	r1, r0
 8000966:	428c      	cmp	r4, r1
 8000968:	d039      	beq.n	80009de <__aeabi_fsub+0xa6>
 800096a:	1aa8      	subs	r0, r5, r2
 800096c:	2800      	cmp	r0, #0
 800096e:	dd5a      	ble.n	8000a26 <__aeabi_fsub+0xee>
 8000970:	2a00      	cmp	r2, #0
 8000972:	d06a      	beq.n	8000a4a <__aeabi_fsub+0x112>
 8000974:	2dff      	cmp	r5, #255	; 0xff
 8000976:	d100      	bne.n	800097a <__aeabi_fsub+0x42>
 8000978:	e0d9      	b.n	8000b2e <__aeabi_fsub+0x1f6>
 800097a:	2280      	movs	r2, #128	; 0x80
 800097c:	04d2      	lsls	r2, r2, #19
 800097e:	4316      	orrs	r6, r2
 8000980:	281b      	cmp	r0, #27
 8000982:	dc00      	bgt.n	8000986 <__aeabi_fsub+0x4e>
 8000984:	e0e9      	b.n	8000b5a <__aeabi_fsub+0x222>
 8000986:	2001      	movs	r0, #1
 8000988:	4663      	mov	r3, ip
 800098a:	1a18      	subs	r0, r3, r0
 800098c:	0143      	lsls	r3, r0, #5
 800098e:	d400      	bmi.n	8000992 <__aeabi_fsub+0x5a>
 8000990:	e0b4      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000992:	0180      	lsls	r0, r0, #6
 8000994:	0987      	lsrs	r7, r0, #6
 8000996:	0038      	movs	r0, r7
 8000998:	f000 fa18 	bl	8000dcc <__clzsi2>
 800099c:	3805      	subs	r0, #5
 800099e:	4087      	lsls	r7, r0
 80009a0:	4285      	cmp	r5, r0
 80009a2:	dc00      	bgt.n	80009a6 <__aeabi_fsub+0x6e>
 80009a4:	e0cc      	b.n	8000b40 <__aeabi_fsub+0x208>
 80009a6:	1a2d      	subs	r5, r5, r0
 80009a8:	48b5      	ldr	r0, [pc, #724]	; (8000c80 <__aeabi_fsub+0x348>)
 80009aa:	4038      	ands	r0, r7
 80009ac:	0743      	lsls	r3, r0, #29
 80009ae:	d004      	beq.n	80009ba <__aeabi_fsub+0x82>
 80009b0:	230f      	movs	r3, #15
 80009b2:	4003      	ands	r3, r0
 80009b4:	2b04      	cmp	r3, #4
 80009b6:	d000      	beq.n	80009ba <__aeabi_fsub+0x82>
 80009b8:	3004      	adds	r0, #4
 80009ba:	0143      	lsls	r3, r0, #5
 80009bc:	d400      	bmi.n	80009c0 <__aeabi_fsub+0x88>
 80009be:	e0a0      	b.n	8000b02 <__aeabi_fsub+0x1ca>
 80009c0:	1c6a      	adds	r2, r5, #1
 80009c2:	2dfe      	cmp	r5, #254	; 0xfe
 80009c4:	d100      	bne.n	80009c8 <__aeabi_fsub+0x90>
 80009c6:	e08d      	b.n	8000ae4 <__aeabi_fsub+0x1ac>
 80009c8:	0180      	lsls	r0, r0, #6
 80009ca:	0a47      	lsrs	r7, r0, #9
 80009cc:	b2d2      	uxtb	r2, r2
 80009ce:	05d0      	lsls	r0, r2, #23
 80009d0:	4338      	orrs	r0, r7
 80009d2:	07e4      	lsls	r4, r4, #31
 80009d4:	4320      	orrs	r0, r4
 80009d6:	bcc0      	pop	{r6, r7}
 80009d8:	46b9      	mov	r9, r7
 80009da:	46b0      	mov	r8, r6
 80009dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009de:	1aa8      	subs	r0, r5, r2
 80009e0:	4680      	mov	r8, r0
 80009e2:	2800      	cmp	r0, #0
 80009e4:	dd45      	ble.n	8000a72 <__aeabi_fsub+0x13a>
 80009e6:	2a00      	cmp	r2, #0
 80009e8:	d070      	beq.n	8000acc <__aeabi_fsub+0x194>
 80009ea:	2dff      	cmp	r5, #255	; 0xff
 80009ec:	d100      	bne.n	80009f0 <__aeabi_fsub+0xb8>
 80009ee:	e09e      	b.n	8000b2e <__aeabi_fsub+0x1f6>
 80009f0:	2380      	movs	r3, #128	; 0x80
 80009f2:	04db      	lsls	r3, r3, #19
 80009f4:	431e      	orrs	r6, r3
 80009f6:	4643      	mov	r3, r8
 80009f8:	2b1b      	cmp	r3, #27
 80009fa:	dc00      	bgt.n	80009fe <__aeabi_fsub+0xc6>
 80009fc:	e0d2      	b.n	8000ba4 <__aeabi_fsub+0x26c>
 80009fe:	2001      	movs	r0, #1
 8000a00:	4460      	add	r0, ip
 8000a02:	0143      	lsls	r3, r0, #5
 8000a04:	d57a      	bpl.n	8000afc <__aeabi_fsub+0x1c4>
 8000a06:	3501      	adds	r5, #1
 8000a08:	2dff      	cmp	r5, #255	; 0xff
 8000a0a:	d06b      	beq.n	8000ae4 <__aeabi_fsub+0x1ac>
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	4a9d      	ldr	r2, [pc, #628]	; (8000c84 <__aeabi_fsub+0x34c>)
 8000a10:	4003      	ands	r3, r0
 8000a12:	0840      	lsrs	r0, r0, #1
 8000a14:	4010      	ands	r0, r2
 8000a16:	4318      	orrs	r0, r3
 8000a18:	e7c8      	b.n	80009ac <__aeabi_fsub+0x74>
 8000a1a:	2e00      	cmp	r6, #0
 8000a1c:	d020      	beq.n	8000a60 <__aeabi_fsub+0x128>
 8000a1e:	428c      	cmp	r4, r1
 8000a20:	d023      	beq.n	8000a6a <__aeabi_fsub+0x132>
 8000a22:	0028      	movs	r0, r5
 8000a24:	38ff      	subs	r0, #255	; 0xff
 8000a26:	2800      	cmp	r0, #0
 8000a28:	d039      	beq.n	8000a9e <__aeabi_fsub+0x166>
 8000a2a:	1b57      	subs	r7, r2, r5
 8000a2c:	2d00      	cmp	r5, #0
 8000a2e:	d000      	beq.n	8000a32 <__aeabi_fsub+0xfa>
 8000a30:	e09d      	b.n	8000b6e <__aeabi_fsub+0x236>
 8000a32:	4663      	mov	r3, ip
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	d100      	bne.n	8000a3a <__aeabi_fsub+0x102>
 8000a38:	e0db      	b.n	8000bf2 <__aeabi_fsub+0x2ba>
 8000a3a:	1e7b      	subs	r3, r7, #1
 8000a3c:	2f01      	cmp	r7, #1
 8000a3e:	d100      	bne.n	8000a42 <__aeabi_fsub+0x10a>
 8000a40:	e10d      	b.n	8000c5e <__aeabi_fsub+0x326>
 8000a42:	2fff      	cmp	r7, #255	; 0xff
 8000a44:	d071      	beq.n	8000b2a <__aeabi_fsub+0x1f2>
 8000a46:	001f      	movs	r7, r3
 8000a48:	e098      	b.n	8000b7c <__aeabi_fsub+0x244>
 8000a4a:	2e00      	cmp	r6, #0
 8000a4c:	d100      	bne.n	8000a50 <__aeabi_fsub+0x118>
 8000a4e:	e0a7      	b.n	8000ba0 <__aeabi_fsub+0x268>
 8000a50:	1e42      	subs	r2, r0, #1
 8000a52:	2801      	cmp	r0, #1
 8000a54:	d100      	bne.n	8000a58 <__aeabi_fsub+0x120>
 8000a56:	e0e6      	b.n	8000c26 <__aeabi_fsub+0x2ee>
 8000a58:	28ff      	cmp	r0, #255	; 0xff
 8000a5a:	d068      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000a5c:	0010      	movs	r0, r2
 8000a5e:	e78f      	b.n	8000980 <__aeabi_fsub+0x48>
 8000a60:	2001      	movs	r0, #1
 8000a62:	4041      	eors	r1, r0
 8000a64:	42a1      	cmp	r1, r4
 8000a66:	d000      	beq.n	8000a6a <__aeabi_fsub+0x132>
 8000a68:	e77f      	b.n	800096a <__aeabi_fsub+0x32>
 8000a6a:	20ff      	movs	r0, #255	; 0xff
 8000a6c:	4240      	negs	r0, r0
 8000a6e:	4680      	mov	r8, r0
 8000a70:	44a8      	add	r8, r5
 8000a72:	4640      	mov	r0, r8
 8000a74:	2800      	cmp	r0, #0
 8000a76:	d038      	beq.n	8000aea <__aeabi_fsub+0x1b2>
 8000a78:	1b51      	subs	r1, r2, r5
 8000a7a:	2d00      	cmp	r5, #0
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_fsub+0x148>
 8000a7e:	e0ae      	b.n	8000bde <__aeabi_fsub+0x2a6>
 8000a80:	2aff      	cmp	r2, #255	; 0xff
 8000a82:	d100      	bne.n	8000a86 <__aeabi_fsub+0x14e>
 8000a84:	e0df      	b.n	8000c46 <__aeabi_fsub+0x30e>
 8000a86:	2380      	movs	r3, #128	; 0x80
 8000a88:	4660      	mov	r0, ip
 8000a8a:	04db      	lsls	r3, r3, #19
 8000a8c:	4318      	orrs	r0, r3
 8000a8e:	4684      	mov	ip, r0
 8000a90:	291b      	cmp	r1, #27
 8000a92:	dc00      	bgt.n	8000a96 <__aeabi_fsub+0x15e>
 8000a94:	e0d9      	b.n	8000c4a <__aeabi_fsub+0x312>
 8000a96:	2001      	movs	r0, #1
 8000a98:	0015      	movs	r5, r2
 8000a9a:	1980      	adds	r0, r0, r6
 8000a9c:	e7b1      	b.n	8000a02 <__aeabi_fsub+0xca>
 8000a9e:	20fe      	movs	r0, #254	; 0xfe
 8000aa0:	1c6a      	adds	r2, r5, #1
 8000aa2:	4210      	tst	r0, r2
 8000aa4:	d171      	bne.n	8000b8a <__aeabi_fsub+0x252>
 8000aa6:	2d00      	cmp	r5, #0
 8000aa8:	d000      	beq.n	8000aac <__aeabi_fsub+0x174>
 8000aaa:	e0a6      	b.n	8000bfa <__aeabi_fsub+0x2c2>
 8000aac:	4663      	mov	r3, ip
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	d100      	bne.n	8000ab4 <__aeabi_fsub+0x17c>
 8000ab2:	e0d9      	b.n	8000c68 <__aeabi_fsub+0x330>
 8000ab4:	2200      	movs	r2, #0
 8000ab6:	2e00      	cmp	r6, #0
 8000ab8:	d100      	bne.n	8000abc <__aeabi_fsub+0x184>
 8000aba:	e788      	b.n	80009ce <__aeabi_fsub+0x96>
 8000abc:	1b98      	subs	r0, r3, r6
 8000abe:	0143      	lsls	r3, r0, #5
 8000ac0:	d400      	bmi.n	8000ac4 <__aeabi_fsub+0x18c>
 8000ac2:	e0e1      	b.n	8000c88 <__aeabi_fsub+0x350>
 8000ac4:	4663      	mov	r3, ip
 8000ac6:	000c      	movs	r4, r1
 8000ac8:	1af0      	subs	r0, r6, r3
 8000aca:	e76f      	b.n	80009ac <__aeabi_fsub+0x74>
 8000acc:	2e00      	cmp	r6, #0
 8000ace:	d100      	bne.n	8000ad2 <__aeabi_fsub+0x19a>
 8000ad0:	e0b7      	b.n	8000c42 <__aeabi_fsub+0x30a>
 8000ad2:	0002      	movs	r2, r0
 8000ad4:	3a01      	subs	r2, #1
 8000ad6:	2801      	cmp	r0, #1
 8000ad8:	d100      	bne.n	8000adc <__aeabi_fsub+0x1a4>
 8000ada:	e09c      	b.n	8000c16 <__aeabi_fsub+0x2de>
 8000adc:	28ff      	cmp	r0, #255	; 0xff
 8000ade:	d026      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000ae0:	4690      	mov	r8, r2
 8000ae2:	e788      	b.n	80009f6 <__aeabi_fsub+0xbe>
 8000ae4:	22ff      	movs	r2, #255	; 0xff
 8000ae6:	2700      	movs	r7, #0
 8000ae8:	e771      	b.n	80009ce <__aeabi_fsub+0x96>
 8000aea:	20fe      	movs	r0, #254	; 0xfe
 8000aec:	1c6a      	adds	r2, r5, #1
 8000aee:	4210      	tst	r0, r2
 8000af0:	d064      	beq.n	8000bbc <__aeabi_fsub+0x284>
 8000af2:	2aff      	cmp	r2, #255	; 0xff
 8000af4:	d0f6      	beq.n	8000ae4 <__aeabi_fsub+0x1ac>
 8000af6:	0015      	movs	r5, r2
 8000af8:	4466      	add	r6, ip
 8000afa:	0870      	lsrs	r0, r6, #1
 8000afc:	0743      	lsls	r3, r0, #29
 8000afe:	d000      	beq.n	8000b02 <__aeabi_fsub+0x1ca>
 8000b00:	e756      	b.n	80009b0 <__aeabi_fsub+0x78>
 8000b02:	08c3      	lsrs	r3, r0, #3
 8000b04:	2dff      	cmp	r5, #255	; 0xff
 8000b06:	d012      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b08:	025b      	lsls	r3, r3, #9
 8000b0a:	0a5f      	lsrs	r7, r3, #9
 8000b0c:	b2ea      	uxtb	r2, r5
 8000b0e:	e75e      	b.n	80009ce <__aeabi_fsub+0x96>
 8000b10:	4662      	mov	r2, ip
 8000b12:	2a00      	cmp	r2, #0
 8000b14:	d100      	bne.n	8000b18 <__aeabi_fsub+0x1e0>
 8000b16:	e096      	b.n	8000c46 <__aeabi_fsub+0x30e>
 8000b18:	2e00      	cmp	r6, #0
 8000b1a:	d008      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b1c:	2280      	movs	r2, #128	; 0x80
 8000b1e:	03d2      	lsls	r2, r2, #15
 8000b20:	4213      	tst	r3, r2
 8000b22:	d004      	beq.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b24:	4648      	mov	r0, r9
 8000b26:	4210      	tst	r0, r2
 8000b28:	d101      	bne.n	8000b2e <__aeabi_fsub+0x1f6>
 8000b2a:	000c      	movs	r4, r1
 8000b2c:	464b      	mov	r3, r9
 8000b2e:	2b00      	cmp	r3, #0
 8000b30:	d0d8      	beq.n	8000ae4 <__aeabi_fsub+0x1ac>
 8000b32:	2780      	movs	r7, #128	; 0x80
 8000b34:	03ff      	lsls	r7, r7, #15
 8000b36:	431f      	orrs	r7, r3
 8000b38:	027f      	lsls	r7, r7, #9
 8000b3a:	22ff      	movs	r2, #255	; 0xff
 8000b3c:	0a7f      	lsrs	r7, r7, #9
 8000b3e:	e746      	b.n	80009ce <__aeabi_fsub+0x96>
 8000b40:	2320      	movs	r3, #32
 8000b42:	003a      	movs	r2, r7
 8000b44:	1b45      	subs	r5, r0, r5
 8000b46:	0038      	movs	r0, r7
 8000b48:	3501      	adds	r5, #1
 8000b4a:	40ea      	lsrs	r2, r5
 8000b4c:	1b5d      	subs	r5, r3, r5
 8000b4e:	40a8      	lsls	r0, r5
 8000b50:	1e43      	subs	r3, r0, #1
 8000b52:	4198      	sbcs	r0, r3
 8000b54:	2500      	movs	r5, #0
 8000b56:	4310      	orrs	r0, r2
 8000b58:	e728      	b.n	80009ac <__aeabi_fsub+0x74>
 8000b5a:	2320      	movs	r3, #32
 8000b5c:	1a1b      	subs	r3, r3, r0
 8000b5e:	0032      	movs	r2, r6
 8000b60:	409e      	lsls	r6, r3
 8000b62:	40c2      	lsrs	r2, r0
 8000b64:	0030      	movs	r0, r6
 8000b66:	1e43      	subs	r3, r0, #1
 8000b68:	4198      	sbcs	r0, r3
 8000b6a:	4310      	orrs	r0, r2
 8000b6c:	e70c      	b.n	8000988 <__aeabi_fsub+0x50>
 8000b6e:	2aff      	cmp	r2, #255	; 0xff
 8000b70:	d0db      	beq.n	8000b2a <__aeabi_fsub+0x1f2>
 8000b72:	2380      	movs	r3, #128	; 0x80
 8000b74:	4660      	mov	r0, ip
 8000b76:	04db      	lsls	r3, r3, #19
 8000b78:	4318      	orrs	r0, r3
 8000b7a:	4684      	mov	ip, r0
 8000b7c:	2f1b      	cmp	r7, #27
 8000b7e:	dd56      	ble.n	8000c2e <__aeabi_fsub+0x2f6>
 8000b80:	2001      	movs	r0, #1
 8000b82:	000c      	movs	r4, r1
 8000b84:	0015      	movs	r5, r2
 8000b86:	1a30      	subs	r0, r6, r0
 8000b88:	e700      	b.n	800098c <__aeabi_fsub+0x54>
 8000b8a:	4663      	mov	r3, ip
 8000b8c:	1b9f      	subs	r7, r3, r6
 8000b8e:	017b      	lsls	r3, r7, #5
 8000b90:	d43d      	bmi.n	8000c0e <__aeabi_fsub+0x2d6>
 8000b92:	2f00      	cmp	r7, #0
 8000b94:	d000      	beq.n	8000b98 <__aeabi_fsub+0x260>
 8000b96:	e6fe      	b.n	8000996 <__aeabi_fsub+0x5e>
 8000b98:	2400      	movs	r4, #0
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	2700      	movs	r7, #0
 8000b9e:	e716      	b.n	80009ce <__aeabi_fsub+0x96>
 8000ba0:	0005      	movs	r5, r0
 8000ba2:	e7af      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000ba4:	0032      	movs	r2, r6
 8000ba6:	4643      	mov	r3, r8
 8000ba8:	4641      	mov	r1, r8
 8000baa:	40da      	lsrs	r2, r3
 8000bac:	2320      	movs	r3, #32
 8000bae:	1a5b      	subs	r3, r3, r1
 8000bb0:	409e      	lsls	r6, r3
 8000bb2:	0030      	movs	r0, r6
 8000bb4:	1e43      	subs	r3, r0, #1
 8000bb6:	4198      	sbcs	r0, r3
 8000bb8:	4310      	orrs	r0, r2
 8000bba:	e721      	b.n	8000a00 <__aeabi_fsub+0xc8>
 8000bbc:	2d00      	cmp	r5, #0
 8000bbe:	d1a7      	bne.n	8000b10 <__aeabi_fsub+0x1d8>
 8000bc0:	4663      	mov	r3, ip
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d059      	beq.n	8000c7a <__aeabi_fsub+0x342>
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	2e00      	cmp	r6, #0
 8000bca:	d100      	bne.n	8000bce <__aeabi_fsub+0x296>
 8000bcc:	e6ff      	b.n	80009ce <__aeabi_fsub+0x96>
 8000bce:	0030      	movs	r0, r6
 8000bd0:	4460      	add	r0, ip
 8000bd2:	0143      	lsls	r3, r0, #5
 8000bd4:	d592      	bpl.n	8000afc <__aeabi_fsub+0x1c4>
 8000bd6:	4b2a      	ldr	r3, [pc, #168]	; (8000c80 <__aeabi_fsub+0x348>)
 8000bd8:	3501      	adds	r5, #1
 8000bda:	4018      	ands	r0, r3
 8000bdc:	e78e      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000bde:	4663      	mov	r3, ip
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d047      	beq.n	8000c74 <__aeabi_fsub+0x33c>
 8000be4:	1e4b      	subs	r3, r1, #1
 8000be6:	2901      	cmp	r1, #1
 8000be8:	d015      	beq.n	8000c16 <__aeabi_fsub+0x2de>
 8000bea:	29ff      	cmp	r1, #255	; 0xff
 8000bec:	d02b      	beq.n	8000c46 <__aeabi_fsub+0x30e>
 8000bee:	0019      	movs	r1, r3
 8000bf0:	e74e      	b.n	8000a90 <__aeabi_fsub+0x158>
 8000bf2:	000c      	movs	r4, r1
 8000bf4:	464b      	mov	r3, r9
 8000bf6:	003d      	movs	r5, r7
 8000bf8:	e784      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000bfa:	4662      	mov	r2, ip
 8000bfc:	2a00      	cmp	r2, #0
 8000bfe:	d18b      	bne.n	8000b18 <__aeabi_fsub+0x1e0>
 8000c00:	2e00      	cmp	r6, #0
 8000c02:	d192      	bne.n	8000b2a <__aeabi_fsub+0x1f2>
 8000c04:	2780      	movs	r7, #128	; 0x80
 8000c06:	2400      	movs	r4, #0
 8000c08:	22ff      	movs	r2, #255	; 0xff
 8000c0a:	03ff      	lsls	r7, r7, #15
 8000c0c:	e6df      	b.n	80009ce <__aeabi_fsub+0x96>
 8000c0e:	4663      	mov	r3, ip
 8000c10:	000c      	movs	r4, r1
 8000c12:	1af7      	subs	r7, r6, r3
 8000c14:	e6bf      	b.n	8000996 <__aeabi_fsub+0x5e>
 8000c16:	0030      	movs	r0, r6
 8000c18:	4460      	add	r0, ip
 8000c1a:	2501      	movs	r5, #1
 8000c1c:	0143      	lsls	r3, r0, #5
 8000c1e:	d400      	bmi.n	8000c22 <__aeabi_fsub+0x2ea>
 8000c20:	e76c      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000c22:	2502      	movs	r5, #2
 8000c24:	e6f2      	b.n	8000a0c <__aeabi_fsub+0xd4>
 8000c26:	4663      	mov	r3, ip
 8000c28:	2501      	movs	r5, #1
 8000c2a:	1b98      	subs	r0, r3, r6
 8000c2c:	e6ae      	b.n	800098c <__aeabi_fsub+0x54>
 8000c2e:	2320      	movs	r3, #32
 8000c30:	4664      	mov	r4, ip
 8000c32:	4660      	mov	r0, ip
 8000c34:	40fc      	lsrs	r4, r7
 8000c36:	1bdf      	subs	r7, r3, r7
 8000c38:	40b8      	lsls	r0, r7
 8000c3a:	1e43      	subs	r3, r0, #1
 8000c3c:	4198      	sbcs	r0, r3
 8000c3e:	4320      	orrs	r0, r4
 8000c40:	e79f      	b.n	8000b82 <__aeabi_fsub+0x24a>
 8000c42:	0005      	movs	r5, r0
 8000c44:	e75e      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000c46:	464b      	mov	r3, r9
 8000c48:	e771      	b.n	8000b2e <__aeabi_fsub+0x1f6>
 8000c4a:	2320      	movs	r3, #32
 8000c4c:	4665      	mov	r5, ip
 8000c4e:	4660      	mov	r0, ip
 8000c50:	40cd      	lsrs	r5, r1
 8000c52:	1a59      	subs	r1, r3, r1
 8000c54:	4088      	lsls	r0, r1
 8000c56:	1e43      	subs	r3, r0, #1
 8000c58:	4198      	sbcs	r0, r3
 8000c5a:	4328      	orrs	r0, r5
 8000c5c:	e71c      	b.n	8000a98 <__aeabi_fsub+0x160>
 8000c5e:	4663      	mov	r3, ip
 8000c60:	000c      	movs	r4, r1
 8000c62:	2501      	movs	r5, #1
 8000c64:	1af0      	subs	r0, r6, r3
 8000c66:	e691      	b.n	800098c <__aeabi_fsub+0x54>
 8000c68:	2e00      	cmp	r6, #0
 8000c6a:	d095      	beq.n	8000b98 <__aeabi_fsub+0x260>
 8000c6c:	000c      	movs	r4, r1
 8000c6e:	464f      	mov	r7, r9
 8000c70:	2200      	movs	r2, #0
 8000c72:	e6ac      	b.n	80009ce <__aeabi_fsub+0x96>
 8000c74:	464b      	mov	r3, r9
 8000c76:	000d      	movs	r5, r1
 8000c78:	e744      	b.n	8000b04 <__aeabi_fsub+0x1cc>
 8000c7a:	464f      	mov	r7, r9
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	e6a6      	b.n	80009ce <__aeabi_fsub+0x96>
 8000c80:	fbffffff 	.word	0xfbffffff
 8000c84:	7dffffff 	.word	0x7dffffff
 8000c88:	2800      	cmp	r0, #0
 8000c8a:	d000      	beq.n	8000c8e <__aeabi_fsub+0x356>
 8000c8c:	e736      	b.n	8000afc <__aeabi_fsub+0x1c4>
 8000c8e:	2400      	movs	r4, #0
 8000c90:	2700      	movs	r7, #0
 8000c92:	e69c      	b.n	80009ce <__aeabi_fsub+0x96>

08000c94 <__aeabi_f2iz>:
 8000c94:	0241      	lsls	r1, r0, #9
 8000c96:	0042      	lsls	r2, r0, #1
 8000c98:	0fc3      	lsrs	r3, r0, #31
 8000c9a:	0a49      	lsrs	r1, r1, #9
 8000c9c:	2000      	movs	r0, #0
 8000c9e:	0e12      	lsrs	r2, r2, #24
 8000ca0:	2a7e      	cmp	r2, #126	; 0x7e
 8000ca2:	dd03      	ble.n	8000cac <__aeabi_f2iz+0x18>
 8000ca4:	2a9d      	cmp	r2, #157	; 0x9d
 8000ca6:	dd02      	ble.n	8000cae <__aeabi_f2iz+0x1a>
 8000ca8:	4a09      	ldr	r2, [pc, #36]	; (8000cd0 <__aeabi_f2iz+0x3c>)
 8000caa:	1898      	adds	r0, r3, r2
 8000cac:	4770      	bx	lr
 8000cae:	2080      	movs	r0, #128	; 0x80
 8000cb0:	0400      	lsls	r0, r0, #16
 8000cb2:	4301      	orrs	r1, r0
 8000cb4:	2a95      	cmp	r2, #149	; 0x95
 8000cb6:	dc07      	bgt.n	8000cc8 <__aeabi_f2iz+0x34>
 8000cb8:	2096      	movs	r0, #150	; 0x96
 8000cba:	1a82      	subs	r2, r0, r2
 8000cbc:	40d1      	lsrs	r1, r2
 8000cbe:	4248      	negs	r0, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d1f3      	bne.n	8000cac <__aeabi_f2iz+0x18>
 8000cc4:	0008      	movs	r0, r1
 8000cc6:	e7f1      	b.n	8000cac <__aeabi_f2iz+0x18>
 8000cc8:	3a96      	subs	r2, #150	; 0x96
 8000cca:	4091      	lsls	r1, r2
 8000ccc:	e7f7      	b.n	8000cbe <__aeabi_f2iz+0x2a>
 8000cce:	46c0      	nop			; (mov r8, r8)
 8000cd0:	7fffffff 	.word	0x7fffffff

08000cd4 <__aeabi_ui2f>:
 8000cd4:	b570      	push	{r4, r5, r6, lr}
 8000cd6:	1e05      	subs	r5, r0, #0
 8000cd8:	d00e      	beq.n	8000cf8 <__aeabi_ui2f+0x24>
 8000cda:	f000 f877 	bl	8000dcc <__clzsi2>
 8000cde:	239e      	movs	r3, #158	; 0x9e
 8000ce0:	0004      	movs	r4, r0
 8000ce2:	1a1b      	subs	r3, r3, r0
 8000ce4:	2b96      	cmp	r3, #150	; 0x96
 8000ce6:	dc0c      	bgt.n	8000d02 <__aeabi_ui2f+0x2e>
 8000ce8:	2808      	cmp	r0, #8
 8000cea:	dd01      	ble.n	8000cf0 <__aeabi_ui2f+0x1c>
 8000cec:	3c08      	subs	r4, #8
 8000cee:	40a5      	lsls	r5, r4
 8000cf0:	026d      	lsls	r5, r5, #9
 8000cf2:	0a6d      	lsrs	r5, r5, #9
 8000cf4:	b2d8      	uxtb	r0, r3
 8000cf6:	e001      	b.n	8000cfc <__aeabi_ui2f+0x28>
 8000cf8:	2000      	movs	r0, #0
 8000cfa:	2500      	movs	r5, #0
 8000cfc:	05c0      	lsls	r0, r0, #23
 8000cfe:	4328      	orrs	r0, r5
 8000d00:	bd70      	pop	{r4, r5, r6, pc}
 8000d02:	2b99      	cmp	r3, #153	; 0x99
 8000d04:	dd09      	ble.n	8000d1a <__aeabi_ui2f+0x46>
 8000d06:	0002      	movs	r2, r0
 8000d08:	0029      	movs	r1, r5
 8000d0a:	321b      	adds	r2, #27
 8000d0c:	4091      	lsls	r1, r2
 8000d0e:	1e4a      	subs	r2, r1, #1
 8000d10:	4191      	sbcs	r1, r2
 8000d12:	2205      	movs	r2, #5
 8000d14:	1a12      	subs	r2, r2, r0
 8000d16:	40d5      	lsrs	r5, r2
 8000d18:	430d      	orrs	r5, r1
 8000d1a:	2c05      	cmp	r4, #5
 8000d1c:	dc12      	bgt.n	8000d44 <__aeabi_ui2f+0x70>
 8000d1e:	0029      	movs	r1, r5
 8000d20:	4e0c      	ldr	r6, [pc, #48]	; (8000d54 <__aeabi_ui2f+0x80>)
 8000d22:	4031      	ands	r1, r6
 8000d24:	076a      	lsls	r2, r5, #29
 8000d26:	d009      	beq.n	8000d3c <__aeabi_ui2f+0x68>
 8000d28:	200f      	movs	r0, #15
 8000d2a:	4028      	ands	r0, r5
 8000d2c:	2804      	cmp	r0, #4
 8000d2e:	d005      	beq.n	8000d3c <__aeabi_ui2f+0x68>
 8000d30:	3104      	adds	r1, #4
 8000d32:	014a      	lsls	r2, r1, #5
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_ui2f+0x68>
 8000d36:	239f      	movs	r3, #159	; 0x9f
 8000d38:	4031      	ands	r1, r6
 8000d3a:	1b1b      	subs	r3, r3, r4
 8000d3c:	0189      	lsls	r1, r1, #6
 8000d3e:	0a4d      	lsrs	r5, r1, #9
 8000d40:	b2d8      	uxtb	r0, r3
 8000d42:	e7db      	b.n	8000cfc <__aeabi_ui2f+0x28>
 8000d44:	1f62      	subs	r2, r4, #5
 8000d46:	4095      	lsls	r5, r2
 8000d48:	0029      	movs	r1, r5
 8000d4a:	4e02      	ldr	r6, [pc, #8]	; (8000d54 <__aeabi_ui2f+0x80>)
 8000d4c:	4031      	ands	r1, r6
 8000d4e:	076a      	lsls	r2, r5, #29
 8000d50:	d0f4      	beq.n	8000d3c <__aeabi_ui2f+0x68>
 8000d52:	e7e9      	b.n	8000d28 <__aeabi_ui2f+0x54>
 8000d54:	fbffffff 	.word	0xfbffffff

08000d58 <__aeabi_cfrcmple>:
 8000d58:	4684      	mov	ip, r0
 8000d5a:	0008      	movs	r0, r1
 8000d5c:	4661      	mov	r1, ip
 8000d5e:	e7ff      	b.n	8000d60 <__aeabi_cfcmpeq>

08000d60 <__aeabi_cfcmpeq>:
 8000d60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000d62:	f000 f8c9 	bl	8000ef8 <__lesf2>
 8000d66:	2800      	cmp	r0, #0
 8000d68:	d401      	bmi.n	8000d6e <__aeabi_cfcmpeq+0xe>
 8000d6a:	2100      	movs	r1, #0
 8000d6c:	42c8      	cmn	r0, r1
 8000d6e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000d70 <__aeabi_fcmpeq>:
 8000d70:	b510      	push	{r4, lr}
 8000d72:	f000 f855 	bl	8000e20 <__eqsf2>
 8000d76:	4240      	negs	r0, r0
 8000d78:	3001      	adds	r0, #1
 8000d7a:	bd10      	pop	{r4, pc}

08000d7c <__aeabi_fcmplt>:
 8000d7c:	b510      	push	{r4, lr}
 8000d7e:	f000 f8bb 	bl	8000ef8 <__lesf2>
 8000d82:	2800      	cmp	r0, #0
 8000d84:	db01      	blt.n	8000d8a <__aeabi_fcmplt+0xe>
 8000d86:	2000      	movs	r0, #0
 8000d88:	bd10      	pop	{r4, pc}
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	bd10      	pop	{r4, pc}
 8000d8e:	46c0      	nop			; (mov r8, r8)

08000d90 <__aeabi_fcmple>:
 8000d90:	b510      	push	{r4, lr}
 8000d92:	f000 f8b1 	bl	8000ef8 <__lesf2>
 8000d96:	2800      	cmp	r0, #0
 8000d98:	dd01      	ble.n	8000d9e <__aeabi_fcmple+0xe>
 8000d9a:	2000      	movs	r0, #0
 8000d9c:	bd10      	pop	{r4, pc}
 8000d9e:	2001      	movs	r0, #1
 8000da0:	bd10      	pop	{r4, pc}
 8000da2:	46c0      	nop			; (mov r8, r8)

08000da4 <__aeabi_fcmpgt>:
 8000da4:	b510      	push	{r4, lr}
 8000da6:	f000 f861 	bl	8000e6c <__gesf2>
 8000daa:	2800      	cmp	r0, #0
 8000dac:	dc01      	bgt.n	8000db2 <__aeabi_fcmpgt+0xe>
 8000dae:	2000      	movs	r0, #0
 8000db0:	bd10      	pop	{r4, pc}
 8000db2:	2001      	movs	r0, #1
 8000db4:	bd10      	pop	{r4, pc}
 8000db6:	46c0      	nop			; (mov r8, r8)

08000db8 <__aeabi_fcmpge>:
 8000db8:	b510      	push	{r4, lr}
 8000dba:	f000 f857 	bl	8000e6c <__gesf2>
 8000dbe:	2800      	cmp	r0, #0
 8000dc0:	da01      	bge.n	8000dc6 <__aeabi_fcmpge+0xe>
 8000dc2:	2000      	movs	r0, #0
 8000dc4:	bd10      	pop	{r4, pc}
 8000dc6:	2001      	movs	r0, #1
 8000dc8:	bd10      	pop	{r4, pc}
 8000dca:	46c0      	nop			; (mov r8, r8)

08000dcc <__clzsi2>:
 8000dcc:	211c      	movs	r1, #28
 8000dce:	2301      	movs	r3, #1
 8000dd0:	041b      	lsls	r3, r3, #16
 8000dd2:	4298      	cmp	r0, r3
 8000dd4:	d301      	bcc.n	8000dda <__clzsi2+0xe>
 8000dd6:	0c00      	lsrs	r0, r0, #16
 8000dd8:	3910      	subs	r1, #16
 8000dda:	0a1b      	lsrs	r3, r3, #8
 8000ddc:	4298      	cmp	r0, r3
 8000dde:	d301      	bcc.n	8000de4 <__clzsi2+0x18>
 8000de0:	0a00      	lsrs	r0, r0, #8
 8000de2:	3908      	subs	r1, #8
 8000de4:	091b      	lsrs	r3, r3, #4
 8000de6:	4298      	cmp	r0, r3
 8000de8:	d301      	bcc.n	8000dee <__clzsi2+0x22>
 8000dea:	0900      	lsrs	r0, r0, #4
 8000dec:	3904      	subs	r1, #4
 8000dee:	a202      	add	r2, pc, #8	; (adr r2, 8000df8 <__clzsi2+0x2c>)
 8000df0:	5c10      	ldrb	r0, [r2, r0]
 8000df2:	1840      	adds	r0, r0, r1
 8000df4:	4770      	bx	lr
 8000df6:	46c0      	nop			; (mov r8, r8)
 8000df8:	02020304 	.word	0x02020304
 8000dfc:	01010101 	.word	0x01010101
	...

08000e08 <__clzdi2>:
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	2900      	cmp	r1, #0
 8000e0c:	d103      	bne.n	8000e16 <__clzdi2+0xe>
 8000e0e:	f7ff ffdd 	bl	8000dcc <__clzsi2>
 8000e12:	3020      	adds	r0, #32
 8000e14:	e002      	b.n	8000e1c <__clzdi2+0x14>
 8000e16:	0008      	movs	r0, r1
 8000e18:	f7ff ffd8 	bl	8000dcc <__clzsi2>
 8000e1c:	bd10      	pop	{r4, pc}
 8000e1e:	46c0      	nop			; (mov r8, r8)

08000e20 <__eqsf2>:
 8000e20:	b570      	push	{r4, r5, r6, lr}
 8000e22:	0042      	lsls	r2, r0, #1
 8000e24:	0245      	lsls	r5, r0, #9
 8000e26:	024e      	lsls	r6, r1, #9
 8000e28:	004c      	lsls	r4, r1, #1
 8000e2a:	0fc3      	lsrs	r3, r0, #31
 8000e2c:	0a6d      	lsrs	r5, r5, #9
 8000e2e:	2001      	movs	r0, #1
 8000e30:	0e12      	lsrs	r2, r2, #24
 8000e32:	0a76      	lsrs	r6, r6, #9
 8000e34:	0e24      	lsrs	r4, r4, #24
 8000e36:	0fc9      	lsrs	r1, r1, #31
 8000e38:	2aff      	cmp	r2, #255	; 0xff
 8000e3a:	d006      	beq.n	8000e4a <__eqsf2+0x2a>
 8000e3c:	2cff      	cmp	r4, #255	; 0xff
 8000e3e:	d003      	beq.n	8000e48 <__eqsf2+0x28>
 8000e40:	42a2      	cmp	r2, r4
 8000e42:	d101      	bne.n	8000e48 <__eqsf2+0x28>
 8000e44:	42b5      	cmp	r5, r6
 8000e46:	d006      	beq.n	8000e56 <__eqsf2+0x36>
 8000e48:	bd70      	pop	{r4, r5, r6, pc}
 8000e4a:	2d00      	cmp	r5, #0
 8000e4c:	d1fc      	bne.n	8000e48 <__eqsf2+0x28>
 8000e4e:	2cff      	cmp	r4, #255	; 0xff
 8000e50:	d1fa      	bne.n	8000e48 <__eqsf2+0x28>
 8000e52:	2e00      	cmp	r6, #0
 8000e54:	d1f8      	bne.n	8000e48 <__eqsf2+0x28>
 8000e56:	428b      	cmp	r3, r1
 8000e58:	d006      	beq.n	8000e68 <__eqsf2+0x48>
 8000e5a:	2001      	movs	r0, #1
 8000e5c:	2a00      	cmp	r2, #0
 8000e5e:	d1f3      	bne.n	8000e48 <__eqsf2+0x28>
 8000e60:	0028      	movs	r0, r5
 8000e62:	1e43      	subs	r3, r0, #1
 8000e64:	4198      	sbcs	r0, r3
 8000e66:	e7ef      	b.n	8000e48 <__eqsf2+0x28>
 8000e68:	2000      	movs	r0, #0
 8000e6a:	e7ed      	b.n	8000e48 <__eqsf2+0x28>

08000e6c <__gesf2>:
 8000e6c:	b570      	push	{r4, r5, r6, lr}
 8000e6e:	0042      	lsls	r2, r0, #1
 8000e70:	0245      	lsls	r5, r0, #9
 8000e72:	024e      	lsls	r6, r1, #9
 8000e74:	004c      	lsls	r4, r1, #1
 8000e76:	0fc3      	lsrs	r3, r0, #31
 8000e78:	0a6d      	lsrs	r5, r5, #9
 8000e7a:	0e12      	lsrs	r2, r2, #24
 8000e7c:	0a76      	lsrs	r6, r6, #9
 8000e7e:	0e24      	lsrs	r4, r4, #24
 8000e80:	0fc8      	lsrs	r0, r1, #31
 8000e82:	2aff      	cmp	r2, #255	; 0xff
 8000e84:	d01b      	beq.n	8000ebe <__gesf2+0x52>
 8000e86:	2cff      	cmp	r4, #255	; 0xff
 8000e88:	d00e      	beq.n	8000ea8 <__gesf2+0x3c>
 8000e8a:	2a00      	cmp	r2, #0
 8000e8c:	d11b      	bne.n	8000ec6 <__gesf2+0x5a>
 8000e8e:	2c00      	cmp	r4, #0
 8000e90:	d101      	bne.n	8000e96 <__gesf2+0x2a>
 8000e92:	2e00      	cmp	r6, #0
 8000e94:	d01c      	beq.n	8000ed0 <__gesf2+0x64>
 8000e96:	2d00      	cmp	r5, #0
 8000e98:	d00c      	beq.n	8000eb4 <__gesf2+0x48>
 8000e9a:	4283      	cmp	r3, r0
 8000e9c:	d01c      	beq.n	8000ed8 <__gesf2+0x6c>
 8000e9e:	2102      	movs	r1, #2
 8000ea0:	1e58      	subs	r0, r3, #1
 8000ea2:	4008      	ands	r0, r1
 8000ea4:	3801      	subs	r0, #1
 8000ea6:	bd70      	pop	{r4, r5, r6, pc}
 8000ea8:	2e00      	cmp	r6, #0
 8000eaa:	d122      	bne.n	8000ef2 <__gesf2+0x86>
 8000eac:	2a00      	cmp	r2, #0
 8000eae:	d1f4      	bne.n	8000e9a <__gesf2+0x2e>
 8000eb0:	2d00      	cmp	r5, #0
 8000eb2:	d1f2      	bne.n	8000e9a <__gesf2+0x2e>
 8000eb4:	2800      	cmp	r0, #0
 8000eb6:	d1f6      	bne.n	8000ea6 <__gesf2+0x3a>
 8000eb8:	2001      	movs	r0, #1
 8000eba:	4240      	negs	r0, r0
 8000ebc:	e7f3      	b.n	8000ea6 <__gesf2+0x3a>
 8000ebe:	2d00      	cmp	r5, #0
 8000ec0:	d117      	bne.n	8000ef2 <__gesf2+0x86>
 8000ec2:	2cff      	cmp	r4, #255	; 0xff
 8000ec4:	d0f0      	beq.n	8000ea8 <__gesf2+0x3c>
 8000ec6:	2c00      	cmp	r4, #0
 8000ec8:	d1e7      	bne.n	8000e9a <__gesf2+0x2e>
 8000eca:	2e00      	cmp	r6, #0
 8000ecc:	d1e5      	bne.n	8000e9a <__gesf2+0x2e>
 8000ece:	e7e6      	b.n	8000e9e <__gesf2+0x32>
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	2d00      	cmp	r5, #0
 8000ed4:	d0e7      	beq.n	8000ea6 <__gesf2+0x3a>
 8000ed6:	e7e2      	b.n	8000e9e <__gesf2+0x32>
 8000ed8:	42a2      	cmp	r2, r4
 8000eda:	dc05      	bgt.n	8000ee8 <__gesf2+0x7c>
 8000edc:	dbea      	blt.n	8000eb4 <__gesf2+0x48>
 8000ede:	42b5      	cmp	r5, r6
 8000ee0:	d802      	bhi.n	8000ee8 <__gesf2+0x7c>
 8000ee2:	d3e7      	bcc.n	8000eb4 <__gesf2+0x48>
 8000ee4:	2000      	movs	r0, #0
 8000ee6:	e7de      	b.n	8000ea6 <__gesf2+0x3a>
 8000ee8:	4243      	negs	r3, r0
 8000eea:	4158      	adcs	r0, r3
 8000eec:	0040      	lsls	r0, r0, #1
 8000eee:	3801      	subs	r0, #1
 8000ef0:	e7d9      	b.n	8000ea6 <__gesf2+0x3a>
 8000ef2:	2002      	movs	r0, #2
 8000ef4:	4240      	negs	r0, r0
 8000ef6:	e7d6      	b.n	8000ea6 <__gesf2+0x3a>

08000ef8 <__lesf2>:
 8000ef8:	b570      	push	{r4, r5, r6, lr}
 8000efa:	0042      	lsls	r2, r0, #1
 8000efc:	0245      	lsls	r5, r0, #9
 8000efe:	024e      	lsls	r6, r1, #9
 8000f00:	004c      	lsls	r4, r1, #1
 8000f02:	0fc3      	lsrs	r3, r0, #31
 8000f04:	0a6d      	lsrs	r5, r5, #9
 8000f06:	0e12      	lsrs	r2, r2, #24
 8000f08:	0a76      	lsrs	r6, r6, #9
 8000f0a:	0e24      	lsrs	r4, r4, #24
 8000f0c:	0fc8      	lsrs	r0, r1, #31
 8000f0e:	2aff      	cmp	r2, #255	; 0xff
 8000f10:	d00b      	beq.n	8000f2a <__lesf2+0x32>
 8000f12:	2cff      	cmp	r4, #255	; 0xff
 8000f14:	d00d      	beq.n	8000f32 <__lesf2+0x3a>
 8000f16:	2a00      	cmp	r2, #0
 8000f18:	d11f      	bne.n	8000f5a <__lesf2+0x62>
 8000f1a:	2c00      	cmp	r4, #0
 8000f1c:	d116      	bne.n	8000f4c <__lesf2+0x54>
 8000f1e:	2e00      	cmp	r6, #0
 8000f20:	d114      	bne.n	8000f4c <__lesf2+0x54>
 8000f22:	2000      	movs	r0, #0
 8000f24:	2d00      	cmp	r5, #0
 8000f26:	d010      	beq.n	8000f4a <__lesf2+0x52>
 8000f28:	e009      	b.n	8000f3e <__lesf2+0x46>
 8000f2a:	2d00      	cmp	r5, #0
 8000f2c:	d10c      	bne.n	8000f48 <__lesf2+0x50>
 8000f2e:	2cff      	cmp	r4, #255	; 0xff
 8000f30:	d113      	bne.n	8000f5a <__lesf2+0x62>
 8000f32:	2e00      	cmp	r6, #0
 8000f34:	d108      	bne.n	8000f48 <__lesf2+0x50>
 8000f36:	2a00      	cmp	r2, #0
 8000f38:	d008      	beq.n	8000f4c <__lesf2+0x54>
 8000f3a:	4283      	cmp	r3, r0
 8000f3c:	d012      	beq.n	8000f64 <__lesf2+0x6c>
 8000f3e:	2102      	movs	r1, #2
 8000f40:	1e58      	subs	r0, r3, #1
 8000f42:	4008      	ands	r0, r1
 8000f44:	3801      	subs	r0, #1
 8000f46:	e000      	b.n	8000f4a <__lesf2+0x52>
 8000f48:	2002      	movs	r0, #2
 8000f4a:	bd70      	pop	{r4, r5, r6, pc}
 8000f4c:	2d00      	cmp	r5, #0
 8000f4e:	d1f4      	bne.n	8000f3a <__lesf2+0x42>
 8000f50:	2800      	cmp	r0, #0
 8000f52:	d1fa      	bne.n	8000f4a <__lesf2+0x52>
 8000f54:	2001      	movs	r0, #1
 8000f56:	4240      	negs	r0, r0
 8000f58:	e7f7      	b.n	8000f4a <__lesf2+0x52>
 8000f5a:	2c00      	cmp	r4, #0
 8000f5c:	d1ed      	bne.n	8000f3a <__lesf2+0x42>
 8000f5e:	2e00      	cmp	r6, #0
 8000f60:	d1eb      	bne.n	8000f3a <__lesf2+0x42>
 8000f62:	e7ec      	b.n	8000f3e <__lesf2+0x46>
 8000f64:	42a2      	cmp	r2, r4
 8000f66:	dc05      	bgt.n	8000f74 <__lesf2+0x7c>
 8000f68:	dbf2      	blt.n	8000f50 <__lesf2+0x58>
 8000f6a:	42b5      	cmp	r5, r6
 8000f6c:	d802      	bhi.n	8000f74 <__lesf2+0x7c>
 8000f6e:	d3ef      	bcc.n	8000f50 <__lesf2+0x58>
 8000f70:	2000      	movs	r0, #0
 8000f72:	e7ea      	b.n	8000f4a <__lesf2+0x52>
 8000f74:	4243      	negs	r3, r0
 8000f76:	4158      	adcs	r0, r3
 8000f78:	0040      	lsls	r0, r0, #1
 8000f7a:	3801      	subs	r0, #1
 8000f7c:	e7e5      	b.n	8000f4a <__lesf2+0x52>
 8000f7e:	46c0      	nop			; (mov r8, r8)

08000f80 <initDrv8830>:
 8000f80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000f82:	2317      	movs	r3, #23
 8000f84:	2280      	movs	r2, #128	; 0x80
 8000f86:	446b      	add	r3, sp
 8000f88:	701a      	strb	r2, [r3, #0]
 8000f8a:	3a7b      	subs	r2, #123	; 0x7b
 8000f8c:	9202      	str	r2, [sp, #8]
 8000f8e:	3a04      	subs	r2, #4
 8000f90:	9300      	str	r3, [sp, #0]
 8000f92:	21c0      	movs	r1, #192	; 0xc0
 8000f94:	0013      	movs	r3, r2
 8000f96:	9201      	str	r2, [sp, #4]
 8000f98:	4802      	ldr	r0, [pc, #8]	; (8000fa4 <initDrv8830+0x24>)
 8000f9a:	f001 fddd 	bl	8002b58 <HAL_I2C_Mem_Write>
 8000f9e:	b007      	add	sp, #28
 8000fa0:	bd00      	pop	{pc}
 8000fa2:	46c0      	nop			; (mov r8, r8)
 8000fa4:	20000290 	.word	0x20000290

08000fa8 <setMotor>:
 8000fa8:	2216      	movs	r2, #22
 8000faa:	237c      	movs	r3, #124	; 0x7c
 8000fac:	b570      	push	{r4, r5, r6, lr}
 8000fae:	2401      	movs	r4, #1
 8000fb0:	2505      	movs	r5, #5
 8000fb2:	b086      	sub	sp, #24
 8000fb4:	4e0d      	ldr	r6, [pc, #52]	; (8000fec <setMotor+0x44>)
 8000fb6:	446a      	add	r2, sp
 8000fb8:	4303      	orrs	r3, r0
 8000fba:	7013      	strb	r3, [r2, #0]
 8000fbc:	21c0      	movs	r1, #192	; 0xc0
 8000fbe:	0023      	movs	r3, r4
 8000fc0:	9502      	str	r5, [sp, #8]
 8000fc2:	9200      	str	r2, [sp, #0]
 8000fc4:	0030      	movs	r0, r6
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	9401      	str	r4, [sp, #4]
 8000fca:	f001 fdc5 	bl	8002b58 <HAL_I2C_Mem_Write>
 8000fce:	9502      	str	r5, [sp, #8]
 8000fd0:	3512      	adds	r5, #18
 8000fd2:	446d      	add	r5, sp
 8000fd4:	0023      	movs	r3, r4
 8000fd6:	0022      	movs	r2, r4
 8000fd8:	21c0      	movs	r1, #192	; 0xc0
 8000fda:	0030      	movs	r0, r6
 8000fdc:	9401      	str	r4, [sp, #4]
 8000fde:	9500      	str	r5, [sp, #0]
 8000fe0:	f001 fe98 	bl	8002d14 <HAL_I2C_Mem_Read>
 8000fe4:	7828      	ldrb	r0, [r5, #0]
 8000fe6:	b006      	add	sp, #24
 8000fe8:	bd70      	pop	{r4, r5, r6, pc}
 8000fea:	46c0      	nop			; (mov r8, r8)
 8000fec:	20000290 	.word	0x20000290

08000ff0 <initEns160>:
 8000ff0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000ff2:	2217      	movs	r2, #23
 8000ff4:	2302      	movs	r3, #2
 8000ff6:	446a      	add	r2, sp
 8000ff8:	7013      	strb	r3, [r2, #0]
 8000ffa:	3308      	adds	r3, #8
 8000ffc:	9302      	str	r3, [sp, #8]
 8000ffe:	3b09      	subs	r3, #9
 8001000:	9200      	str	r2, [sp, #0]
 8001002:	21a4      	movs	r1, #164	; 0xa4
 8001004:	2210      	movs	r2, #16
 8001006:	9301      	str	r3, [sp, #4]
 8001008:	4802      	ldr	r0, [pc, #8]	; (8001014 <initEns160+0x24>)
 800100a:	f001 fda5 	bl	8002b58 <HAL_I2C_Mem_Write>
 800100e:	b007      	add	sp, #28
 8001010:	bd00      	pop	{pc}
 8001012:	46c0      	nop			; (mov r8, r8)
 8001014:	20000290 	.word	0x20000290

08001018 <getCO2>:
 8001018:	b530      	push	{r4, r5, lr}
 800101a:	4d0a      	ldr	r5, [pc, #40]	; (8001044 <getCO2+0x2c>)
 800101c:	b087      	sub	sp, #28
 800101e:	0028      	movs	r0, r5
 8001020:	f001 fc20 	bl	8002864 <HAL_I2C_Init>
 8001024:	230a      	movs	r3, #10
 8001026:	ac05      	add	r4, sp, #20
 8001028:	9302      	str	r3, [sp, #8]
 800102a:	3b08      	subs	r3, #8
 800102c:	9301      	str	r3, [sp, #4]
 800102e:	2224      	movs	r2, #36	; 0x24
 8001030:	21a4      	movs	r1, #164	; 0xa4
 8001032:	0028      	movs	r0, r5
 8001034:	9400      	str	r4, [sp, #0]
 8001036:	3b01      	subs	r3, #1
 8001038:	f001 fe6c 	bl	8002d14 <HAL_I2C_Mem_Read>
 800103c:	8820      	ldrh	r0, [r4, #0]
 800103e:	b007      	add	sp, #28
 8001040:	bd30      	pop	{r4, r5, pc}
 8001042:	46c0      	nop			; (mov r8, r8)
 8001044:	20000290 	.word	0x20000290

08001048 <motor_set>:

/* Private user code ----------------------------------------------*/
/* USER CODE BEGIN 0 */

/* if you motor run control you set drv8830 memory */
void motor_set(uint8_t voltage, uint8_t control){
 8001048:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	uint8_t set_command = voltage << 2 | control;
 800104a:	2217      	movs	r2, #23
	HAL_I2C_Mem_Write(&hi2c1, DRV8830_DeviceAddress, DRV8830_CONTROL, 1, &set_command, 1, 100);
 800104c:	2364      	movs	r3, #100	; 0x64
	uint8_t set_command = voltage << 2 | control;
 800104e:	0080      	lsls	r0, r0, #2
 8001050:	446a      	add	r2, sp
 8001052:	4308      	orrs	r0, r1
 8001054:	7010      	strb	r0, [r2, #0]
	HAL_I2C_Mem_Write(&hi2c1, DRV8830_DeviceAddress, DRV8830_CONTROL, 1, &set_command, 1, 100);
 8001056:	9302      	str	r3, [sp, #8]
 8001058:	3b63      	subs	r3, #99	; 0x63
 800105a:	9200      	str	r2, [sp, #0]
 800105c:	21c0      	movs	r1, #192	; 0xc0
 800105e:	2200      	movs	r2, #0
 8001060:	9301      	str	r3, [sp, #4]
 8001062:	4802      	ldr	r0, [pc, #8]	; (800106c <motor_set+0x24>)
 8001064:	f001 fd78 	bl	8002b58 <HAL_I2C_Mem_Write>
}
 8001068:	b007      	add	sp, #28
 800106a:	bd00      	pop	{pc}
 800106c:	20000290 	.word	0x20000290

08001070 <BUZ>:

/* BUZZER run function */
void BUZ(BUZ_POWER_Typedef state){
 8001070:	0003      	movs	r3, r0
	if(state == buz_on) HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001072:	2100      	movs	r1, #0
void BUZ(BUZ_POWER_Typedef state){
 8001074:	b510      	push	{r4, lr}
 8001076:	4804      	ldr	r0, [pc, #16]	; (8001088 <BUZ+0x18>)
	if(state == buz_on) HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001078:	2b01      	cmp	r3, #1
 800107a:	d102      	bne.n	8001082 <BUZ+0x12>
 800107c:	f002 fcf6 	bl	8003a6c <HAL_TIM_PWM_Start>
	else                HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_1);
}
 8001080:	bd10      	pop	{r4, pc}
	else                HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_1);
 8001082:	f002 fcf7 	bl	8003a74 <HAL_TIM_PWM_Stop>
}
 8001086:	e7fb      	b.n	8001080 <BUZ+0x10>
 8001088:	200002e4 	.word	0x200002e4

0800108c <get_sensor>:

/* return as memory have a values */
void* get_sensor(GET_SENSOR_Typedef mem){
 800108c:	b537      	push	{r0, r1, r2, r4, r5, lr}
	if(mem == get_sht41){
 800108e:	2800      	cmp	r0, #0
 8001090:	d10c      	bne.n	80010ac <get_sensor+0x20>
		SHT41_t* buf = (SHT41_t*)malloc(sizeof(SHT41_t));
 8001092:	3008      	adds	r0, #8
 8001094:	f003 f93a 	bl	800430c <malloc>
		*buf = getTempSht41();
 8001098:	466d      	mov	r5, sp
		SHT41_t* buf = (SHT41_t*)malloc(sizeof(SHT41_t));
 800109a:	0004      	movs	r4, r0
		*buf = getTempSht41();
 800109c:	0028      	movs	r0, r5
 800109e:	f000 ffb5 	bl	800200c <getTempSht41>
 80010a2:	0023      	movs	r3, r4
 80010a4:	cd06      	ldmia	r5!, {r1, r2}
 80010a6:	c306      	stmia	r3!, {r1, r2}
	}

	int** arr = (int**)malloc(10 * sizeof(int));
	for(uint8_t i = 0 ; i < 10 ; i++)
		arr[i] = (int*)malloc(10 * sizeof(int));
}
 80010a8:	0020      	movs	r0, r4
 80010aa:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
		uint16_t* buf = (uint16_t*)malloc(sizeof(uint16_t));
 80010ac:	2002      	movs	r0, #2
 80010ae:	f003 f92d 	bl	800430c <malloc>
 80010b2:	0004      	movs	r4, r0
		*buf = getCO2();
 80010b4:	f7ff ffb0 	bl	8001018 <getCO2>
 80010b8:	8020      	strh	r0, [r4, #0]
		return buf;
 80010ba:	e7f5      	b.n	80010a8 <get_sensor+0x1c>

080010bc <free_addr>:

/* sensor values memory free and NULL reset */
void free_addr(void** address){
 80010bc:	b510      	push	{r4, lr}
 80010be:	0004      	movs	r4, r0
	free(*address);
 80010c0:	6800      	ldr	r0, [r0, #0]
 80010c2:	f003 f92d 	bl	8004320 <free>
	*address = NULL;
 80010c6:	2300      	movs	r3, #0
 80010c8:	6023      	str	r3, [r4, #0]
}
 80010ca:	bd10      	pop	{r4, pc}

080010cc <nextion_inst_set>:

/* nextion instruction set */
void nextion_inst_set(char* str){
 80010cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
	uint8_t end_cmd[3] = { 0xFF, 0xFF, 0xFF };
 80010ce:	2503      	movs	r5, #3
void nextion_inst_set(char* str){
 80010d0:	0004      	movs	r4, r0
	uint8_t end_cmd[3] = { 0xFF, 0xFF, 0xFF };
 80010d2:	002a      	movs	r2, r5
 80010d4:	490a      	ldr	r1, [pc, #40]	; (8001100 <nextion_inst_set+0x34>)
 80010d6:	a801      	add	r0, sp, #4
 80010d8:	f003 f92c 	bl	8004334 <memcpy>
	HAL_UART_Transmit(&huart1, (uint8_t*)str, strlen(str), 100);
 80010dc:	0020      	movs	r0, r4
 80010de:	f7ff f813 	bl	8000108 <strlen>
 80010e2:	4e08      	ldr	r6, [pc, #32]	; (8001104 <nextion_inst_set+0x38>)
 80010e4:	0021      	movs	r1, r4
 80010e6:	b282      	uxth	r2, r0
 80010e8:	2364      	movs	r3, #100	; 0x64
 80010ea:	0030      	movs	r0, r6
 80010ec:	f002 ff67 	bl	8003fbe <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart1, end_cmd, 3, 100);
 80010f0:	002a      	movs	r2, r5
 80010f2:	0030      	movs	r0, r6
 80010f4:	2364      	movs	r3, #100	; 0x64
 80010f6:	a901      	add	r1, sp, #4
 80010f8:	f002 ff61 	bl	8003fbe <HAL_UART_Transmit>
}
 80010fc:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
 80010fe:	46c0      	nop			; (mov r8, r8)
 8001100:	08004d00 	.word	0x08004d00
 8001104:	20000324 	.word	0x20000324

08001108 <get_touch>:

/* get nextion LCD touch coordinate */
void get_touch(POS_Typedef* buf){
	HAL_StatusTypeDef res = HAL_OK;
	uint8_t rx_dat[8] = { 0, };
 8001108:	2300      	movs	r3, #0
void get_touch(POS_Typedef* buf){
 800110a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800110c:	0004      	movs	r4, r0

	nextion_inst_set("get tch0");
 800110e:	481b      	ldr	r0, [pc, #108]	; (800117c <get_touch+0x74>)
	uint8_t rx_dat[8] = { 0, };
 8001110:	9300      	str	r3, [sp, #0]
 8001112:	9301      	str	r3, [sp, #4]
	nextion_inst_set("get tch0");
 8001114:	f7ff ffda 	bl	80010cc <nextion_inst_set>
	res = HAL_UART_Receive(&huart1, rx_dat, 8, 100);
 8001118:	4d19      	ldr	r5, [pc, #100]	; (8001180 <get_touch+0x78>)
 800111a:	2364      	movs	r3, #100	; 0x64
 800111c:	2208      	movs	r2, #8
 800111e:	4669      	mov	r1, sp
 8001120:	0028      	movs	r0, r5
 8001122:	f002 ffb3 	bl	800408c <HAL_UART_Receive>
	if(res == HAL_OK) { if(rx_dat[0] == 0x71) { buf->x = rx_dat[2] << 8 | rx_dat[1]; } }
 8001126:	2800      	cmp	r0, #0
 8001128:	d109      	bne.n	800113e <get_touch+0x36>
 800112a:	466b      	mov	r3, sp
 800112c:	781b      	ldrb	r3, [r3, #0]
 800112e:	2b71      	cmp	r3, #113	; 0x71
 8001130:	d105      	bne.n	800113e <get_touch+0x36>
 8001132:	466b      	mov	r3, sp
 8001134:	7859      	ldrb	r1, [r3, #1]
 8001136:	789b      	ldrb	r3, [r3, #2]
 8001138:	021b      	lsls	r3, r3, #8
 800113a:	430b      	orrs	r3, r1
 800113c:	8023      	strh	r3, [r4, #0]

	nextion_inst_set("get tch1");
 800113e:	4811      	ldr	r0, [pc, #68]	; (8001184 <get_touch+0x7c>)
 8001140:	f7ff ffc4 	bl	80010cc <nextion_inst_set>
	res = HAL_UART_Receive(&huart1, rx_dat, 8, 100);
 8001144:	2364      	movs	r3, #100	; 0x64
 8001146:	2208      	movs	r2, #8
 8001148:	4669      	mov	r1, sp
 800114a:	0028      	movs	r0, r5
 800114c:	f002 ff9e 	bl	800408c <HAL_UART_Receive>
	if(res == HAL_OK) { if(rx_dat[0] == 0x71) { buf->y = rx_dat[2] << 8 | rx_dat[1]; } }
 8001150:	2800      	cmp	r0, #0
 8001152:	d109      	bne.n	8001168 <get_touch+0x60>
 8001154:	466b      	mov	r3, sp
 8001156:	781b      	ldrb	r3, [r3, #0]
 8001158:	2b71      	cmp	r3, #113	; 0x71
 800115a:	d105      	bne.n	8001168 <get_touch+0x60>
 800115c:	466b      	mov	r3, sp
 800115e:	7859      	ldrb	r1, [r3, #1]
 8001160:	789b      	ldrb	r3, [r3, #2]
 8001162:	021b      	lsls	r3, r3, #8
 8001164:	430b      	orrs	r3, r1
 8001166:	8063      	strh	r3, [r4, #2]

	if(buf->x > 0 && buf->y > 0) buf->touched = 1;
	else buf->touched = 0;
 8001168:	2300      	movs	r3, #0
	if(buf->x > 0 && buf->y > 0) buf->touched = 1;
 800116a:	8822      	ldrh	r2, [r4, #0]
 800116c:	429a      	cmp	r2, r3
 800116e:	d003      	beq.n	8001178 <get_touch+0x70>
 8001170:	8863      	ldrh	r3, [r4, #2]
 8001172:	1e5a      	subs	r2, r3, #1
 8001174:	4193      	sbcs	r3, r2
	else buf->touched = 0;
 8001176:	b2db      	uxtb	r3, r3
 8001178:	7123      	strb	r3, [r4, #4]
}
 800117a:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
 800117c:	08004d04 	.word	0x08004d04
 8001180:	20000324 	.word	0x20000324
 8001184:	08004d0d 	.word	0x08004d0d

08001188 <get_slide>:

/* slide state set */
void get_slide(SLIDE_Typedef* buf, POS_Typedef* xy){
 8001188:	b570      	push	{r4, r5, r6, lr}
 800118a:	0004      	movs	r4, r0
	static POS_Typedef befo_touch       = { 0,0,0 };
	static POS_Typedef touch_coordinate = { 0,0,0 };

	if(befo_touch.touched != xy->touched){
 800118c:	4811      	ldr	r0, [pc, #68]	; (80011d4 <get_slide+0x4c>)
 800118e:	790b      	ldrb	r3, [r1, #4]
 8001190:	7905      	ldrb	r5, [r0, #4]
 8001192:	42ab      	cmp	r3, r5
 8001194:	d01b      	beq.n	80011ce <get_slide+0x46>
		if(befo_touch.touched == 1){
 8001196:	4b10      	ldr	r3, [pc, #64]	; (80011d8 <get_slide+0x50>)
 8001198:	2d01      	cmp	r5, #1
 800119a:	d113      	bne.n	80011c4 <get_slide+0x3c>
			if(touch_coordinate.y > befo_touch.y){
 800119c:	885a      	ldrh	r2, [r3, #2]
 800119e:	8843      	ldrh	r3, [r0, #2]
 80011a0:	429a      	cmp	r2, r3
 80011a2:	d907      	bls.n	80011b4 <get_slide+0x2c>
				if(touch_coordinate.y - befo_touch.y > 30) *buf = up_slide;
 80011a4:	1ad3      	subs	r3, r2, r3
 80011a6:	2b1e      	cmp	r3, #30
 80011a8:	dd00      	ble.n	80011ac <get_slide+0x24>
 80011aa:	7025      	strb	r5, [r4, #0]
			touch_coordinate.x = xy->x;
			touch_coordinate.y = xy->y;
		}
	}
	else *buf = none;
	befo_touch = *xy;
 80011ac:	2206      	movs	r2, #6
 80011ae:	f003 f8c1 	bl	8004334 <memcpy>
}
 80011b2:	bd70      	pop	{r4, r5, r6, pc}
			else if(befo_touch.y > touch_coordinate.y){
 80011b4:	429a      	cmp	r2, r3
 80011b6:	d2f9      	bcs.n	80011ac <get_slide+0x24>
				if(befo_touch.y - touch_coordinate.y > 30) *buf = down_slide;
 80011b8:	1a9b      	subs	r3, r3, r2
 80011ba:	2b1e      	cmp	r3, #30
 80011bc:	ddf6      	ble.n	80011ac <get_slide+0x24>
 80011be:	2302      	movs	r3, #2
	else *buf = none;
 80011c0:	7023      	strb	r3, [r4, #0]
 80011c2:	e7f3      	b.n	80011ac <get_slide+0x24>
			touch_coordinate.x = xy->x;
 80011c4:	880a      	ldrh	r2, [r1, #0]
 80011c6:	801a      	strh	r2, [r3, #0]
			touch_coordinate.y = xy->y;
 80011c8:	884a      	ldrh	r2, [r1, #2]
 80011ca:	805a      	strh	r2, [r3, #2]
 80011cc:	e7ee      	b.n	80011ac <get_slide+0x24>
	else *buf = none;
 80011ce:	2300      	movs	r3, #0
 80011d0:	e7f6      	b.n	80011c0 <get_slide+0x38>
 80011d2:	46c0      	nop			; (mov r8, r8)
 80011d4:	2000021c 	.word	0x2000021c
 80011d8:	200003b0 	.word	0x200003b0

080011dc <area_check>:

/* area touch check */
uint8_t area_check(POS_Typedef* curXY, AREA_Typedef* area){
	if(curXY->x >= area->x0 - 10 && curXY->x <= area->x1 + 10){
 80011dc:	880a      	ldrh	r2, [r1, #0]
uint8_t area_check(POS_Typedef* curXY, AREA_Typedef* area){
 80011de:	b510      	push	{r4, lr}
	if(curXY->x >= area->x0 - 10 && curXY->x <= area->x1 + 10){
 80011e0:	8804      	ldrh	r4, [r0, #0]
 80011e2:	3a0a      	subs	r2, #10
uint8_t area_check(POS_Typedef* curXY, AREA_Typedef* area){
 80011e4:	0003      	movs	r3, r0
		if(curXY->y >= area->y0 - 10 && curXY->y <= area->y1 + 10){
			if(buzM == 0) buzM = 1;
			return 1;
		}
	}
	return 0;
 80011e6:	2000      	movs	r0, #0
	if(curXY->x >= area->x0 - 10 && curXY->x <= area->x1 + 10){
 80011e8:	4294      	cmp	r4, r2
 80011ea:	db12      	blt.n	8001212 <area_check+0x36>
 80011ec:	888a      	ldrh	r2, [r1, #4]
 80011ee:	320a      	adds	r2, #10
 80011f0:	4294      	cmp	r4, r2
 80011f2:	dc0e      	bgt.n	8001212 <area_check+0x36>
		if(curXY->y >= area->y0 - 10 && curXY->y <= area->y1 + 10){
 80011f4:	885a      	ldrh	r2, [r3, #2]
 80011f6:	884b      	ldrh	r3, [r1, #2]
 80011f8:	3b0a      	subs	r3, #10
 80011fa:	429a      	cmp	r2, r3
 80011fc:	db09      	blt.n	8001212 <area_check+0x36>
 80011fe:	88cb      	ldrh	r3, [r1, #6]
 8001200:	330a      	adds	r3, #10
 8001202:	429a      	cmp	r2, r3
 8001204:	dc05      	bgt.n	8001212 <area_check+0x36>
			if(buzM == 0) buzM = 1;
 8001206:	4b03      	ldr	r3, [pc, #12]	; (8001214 <area_check+0x38>)
 8001208:	3001      	adds	r0, #1
 800120a:	781a      	ldrb	r2, [r3, #0]
 800120c:	2a00      	cmp	r2, #0
 800120e:	d100      	bne.n	8001212 <area_check+0x36>
 8001210:	7018      	strb	r0, [r3, #0]
}
 8001212:	bd10      	pop	{r4, pc}
 8001214:	20000286 	.word	0x20000286

08001218 <segment_draw>:

/* segment draw */
void segment_draw(POS_Typedef* xy, uint8_t* data){
 8001218:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* segment 'a' draw */
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y, data[a] == 1 ? "BLACK" : "WHITE");
 800121a:	8802      	ldrh	r2, [r0, #0]
void segment_draw(POS_Typedef* xy, uint8_t* data){
 800121c:	0004      	movs	r4, r0
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y, data[a] == 1 ? "BLACK" : "WHITE");
 800121e:	8843      	ldrh	r3, [r0, #2]
 8001220:	7808      	ldrb	r0, [r1, #0]
void segment_draw(POS_Typedef* xy, uint8_t* data){
 8001222:	000e      	movs	r6, r1
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y, data[a] == 1 ? "BLACK" : "WHITE");
 8001224:	320a      	adds	r2, #10
 8001226:	4939      	ldr	r1, [pc, #228]	; (800130c <segment_draw+0xf4>)
 8001228:	2801      	cmp	r0, #1
 800122a:	d000      	beq.n	800122e <segment_draw+0x16>
 800122c:	4938      	ldr	r1, [pc, #224]	; (8001310 <segment_draw+0xf8>)
 800122e:	4d39      	ldr	r5, [pc, #228]	; (8001314 <segment_draw+0xfc>)
 8001230:	4f39      	ldr	r7, [pc, #228]	; (8001318 <segment_draw+0x100>)
 8001232:	9100      	str	r1, [sp, #0]
 8001234:	0028      	movs	r0, r5
 8001236:	0039      	movs	r1, r7
 8001238:	f003 f982 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 800123c:	0028      	movs	r0, r5
 800123e:	f7ff ff45 	bl	80010cc <nextion_inst_set>

	/* segment 'b' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x + 40, xy->y + 10, data[b] == 1 ? "BLACK" : "WHITE");
 8001242:	8822      	ldrh	r2, [r4, #0]
 8001244:	8863      	ldrh	r3, [r4, #2]
 8001246:	7870      	ldrb	r0, [r6, #1]
 8001248:	4930      	ldr	r1, [pc, #192]	; (800130c <segment_draw+0xf4>)
 800124a:	3228      	adds	r2, #40	; 0x28
 800124c:	330a      	adds	r3, #10
 800124e:	2801      	cmp	r0, #1
 8001250:	d000      	beq.n	8001254 <segment_draw+0x3c>
 8001252:	492f      	ldr	r1, [pc, #188]	; (8001310 <segment_draw+0xf8>)
 8001254:	9100      	str	r1, [sp, #0]
 8001256:	0028      	movs	r0, r5
 8001258:	4930      	ldr	r1, [pc, #192]	; (800131c <segment_draw+0x104>)
 800125a:	f003 f971 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 800125e:	0028      	movs	r0, r5
 8001260:	f7ff ff34 	bl	80010cc <nextion_inst_set>

	/* segment 'c' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x + 40, xy->y + 50, data[c] == 1 ? "BLACK" : "WHITE");
 8001264:	8822      	ldrh	r2, [r4, #0]
 8001266:	8863      	ldrh	r3, [r4, #2]
 8001268:	78b0      	ldrb	r0, [r6, #2]
 800126a:	4928      	ldr	r1, [pc, #160]	; (800130c <segment_draw+0xf4>)
 800126c:	3228      	adds	r2, #40	; 0x28
 800126e:	3332      	adds	r3, #50	; 0x32
 8001270:	2801      	cmp	r0, #1
 8001272:	d000      	beq.n	8001276 <segment_draw+0x5e>
 8001274:	4926      	ldr	r1, [pc, #152]	; (8001310 <segment_draw+0xf8>)
 8001276:	9100      	str	r1, [sp, #0]
 8001278:	0028      	movs	r0, r5
 800127a:	4928      	ldr	r1, [pc, #160]	; (800131c <segment_draw+0x104>)
 800127c:	f003 f960 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001280:	0028      	movs	r0, r5
 8001282:	f7ff ff23 	bl	80010cc <nextion_inst_set>

	/* segment 'd' draw */
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y + 80, data[d] == 1 ? "BLACK" : "WHITE");
 8001286:	8822      	ldrh	r2, [r4, #0]
 8001288:	8863      	ldrh	r3, [r4, #2]
 800128a:	78f0      	ldrb	r0, [r6, #3]
 800128c:	491f      	ldr	r1, [pc, #124]	; (800130c <segment_draw+0xf4>)
 800128e:	320a      	adds	r2, #10
 8001290:	3350      	adds	r3, #80	; 0x50
 8001292:	2801      	cmp	r0, #1
 8001294:	d000      	beq.n	8001298 <segment_draw+0x80>
 8001296:	491e      	ldr	r1, [pc, #120]	; (8001310 <segment_draw+0xf8>)
 8001298:	9100      	str	r1, [sp, #0]
 800129a:	0028      	movs	r0, r5
 800129c:	0039      	movs	r1, r7
 800129e:	f003 f94f 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80012a2:	0028      	movs	r0, r5
 80012a4:	f7ff ff12 	bl	80010cc <nextion_inst_set>

	/* segment 'e' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x, xy->y + 50, data[e] == 1 ? "BLACK" : "WHITE");
 80012a8:	8863      	ldrh	r3, [r4, #2]
 80012aa:	7930      	ldrb	r0, [r6, #4]
 80012ac:	8822      	ldrh	r2, [r4, #0]
 80012ae:	4917      	ldr	r1, [pc, #92]	; (800130c <segment_draw+0xf4>)
 80012b0:	3332      	adds	r3, #50	; 0x32
 80012b2:	2801      	cmp	r0, #1
 80012b4:	d000      	beq.n	80012b8 <segment_draw+0xa0>
 80012b6:	4916      	ldr	r1, [pc, #88]	; (8001310 <segment_draw+0xf8>)
 80012b8:	9100      	str	r1, [sp, #0]
 80012ba:	0028      	movs	r0, r5
 80012bc:	4917      	ldr	r1, [pc, #92]	; (800131c <segment_draw+0x104>)
 80012be:	f003 f93f 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80012c2:	0028      	movs	r0, r5
 80012c4:	f7ff ff02 	bl	80010cc <nextion_inst_set>

	/* segment 'f' draw */
	sprintf(bf, "fill %d,%d,10,30,%s", xy->x, xy->y + 10, data[f] == 1 ? "BLACK" : "WHITE");
 80012c8:	8863      	ldrh	r3, [r4, #2]
 80012ca:	7970      	ldrb	r0, [r6, #5]
 80012cc:	8822      	ldrh	r2, [r4, #0]
 80012ce:	490f      	ldr	r1, [pc, #60]	; (800130c <segment_draw+0xf4>)
 80012d0:	330a      	adds	r3, #10
 80012d2:	2801      	cmp	r0, #1
 80012d4:	d000      	beq.n	80012d8 <segment_draw+0xc0>
 80012d6:	490e      	ldr	r1, [pc, #56]	; (8001310 <segment_draw+0xf8>)
 80012d8:	9100      	str	r1, [sp, #0]
 80012da:	0028      	movs	r0, r5
 80012dc:	490f      	ldr	r1, [pc, #60]	; (800131c <segment_draw+0x104>)
 80012de:	f003 f92f 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80012e2:	0028      	movs	r0, r5
 80012e4:	f7ff fef2 	bl	80010cc <nextion_inst_set>

	/* segment 'g' draw */
	sprintf(bf, "fill %d,%d,30,10,%s", xy->x + 10, xy->y + 40, data[g] == 1 ? "BLACK" : "WHITE");
 80012e8:	8822      	ldrh	r2, [r4, #0]
 80012ea:	8863      	ldrh	r3, [r4, #2]
 80012ec:	79b0      	ldrb	r0, [r6, #6]
 80012ee:	4907      	ldr	r1, [pc, #28]	; (800130c <segment_draw+0xf4>)
 80012f0:	320a      	adds	r2, #10
 80012f2:	3328      	adds	r3, #40	; 0x28
 80012f4:	2801      	cmp	r0, #1
 80012f6:	d000      	beq.n	80012fa <segment_draw+0xe2>
 80012f8:	4905      	ldr	r1, [pc, #20]	; (8001310 <segment_draw+0xf8>)
 80012fa:	0028      	movs	r0, r5
 80012fc:	9100      	str	r1, [sp, #0]
 80012fe:	0039      	movs	r1, r7
 8001300:	f003 f91e 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001304:	0028      	movs	r0, r5
 8001306:	f7ff fee1 	bl	80010cc <nextion_inst_set>
}
 800130a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800130c:	08004ead 	.word	0x08004ead
 8001310:	08005249 	.word	0x08005249
 8001314:	20000222 	.word	0x20000222
 8001318:	08004d16 	.word	0x08004d16
 800131c:	08004d2a 	.word	0x08004d2a

08001320 <value_put>:

/* segment draw all in one */
void value_put(uint8_t* data, DISPLAY_MENU_Typedef menu, POS_Typedef* xy){
 8001320:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001322:	0007      	movs	r7, r0
 8001324:	b085      	sub	sp, #20
	POS_Typedef buf = *xy;
 8001326:	ac02      	add	r4, sp, #8
void value_put(uint8_t* data, DISPLAY_MENU_Typedef menu, POS_Typedef* xy){
 8001328:	000d      	movs	r5, r1
	POS_Typedef buf = *xy;
 800132a:	0020      	movs	r0, r4
void value_put(uint8_t* data, DISPLAY_MENU_Typedef menu, POS_Typedef* xy){
 800132c:	0011      	movs	r1, r2
	POS_Typedef buf = *xy;
 800132e:	2206      	movs	r2, #6
 8001330:	f003 f800 	bl	8004334 <memcpy>

	if(*data / 10 > 0) segment_draw(&buf, (uint8_t*)&segment_data[*data / 10]);
 8001334:	7838      	ldrb	r0, [r7, #0]
 8001336:	4e1b      	ldr	r6, [pc, #108]	; (80013a4 <value_put+0x84>)
 8001338:	2809      	cmp	r0, #9
 800133a:	d92a      	bls.n	8001392 <value_put+0x72>
 800133c:	210a      	movs	r1, #10
 800133e:	f7fe feff 	bl	8000140 <__udivsi3>
 8001342:	2107      	movs	r1, #7
 8001344:	b2c0      	uxtb	r0, r0
 8001346:	4341      	muls	r1, r0
 8001348:	1871      	adds	r1, r6, r1
	else               segment_draw(&buf, (uint8_t*)&segment_data[10]);
 800134a:	0020      	movs	r0, r4
 800134c:	f7ff ff64 	bl	8001218 <segment_draw>
	buf.x += 60;
 8001350:	8823      	ldrh	r3, [r4, #0]
	segment_draw(&buf, (uint8_t*)&segment_data[*data % 10]);
 8001352:	7838      	ldrb	r0, [r7, #0]
	buf.x += 60;
 8001354:	333c      	adds	r3, #60	; 0x3c
 8001356:	8023      	strh	r3, [r4, #0]
	segment_draw(&buf, (uint8_t*)&segment_data[*data % 10]);
 8001358:	210a      	movs	r1, #10
 800135a:	f7fe ff77 	bl	800024c <__aeabi_uidivmod>
 800135e:	b2cb      	uxtb	r3, r1
 8001360:	2107      	movs	r1, #7
 8001362:	4359      	muls	r1, r3
 8001364:	0020      	movs	r0, r4
 8001366:	1871      	adds	r1, r6, r1
 8001368:	f7ff ff56 	bl	8001218 <segment_draw>

	buf.x += 60;
 800136c:	8822      	ldrh	r2, [r4, #0]
 800136e:	8863      	ldrh	r3, [r4, #2]
 8001370:	323c      	adds	r2, #60	; 0x3c
 8001372:	b292      	uxth	r2, r2
 8001374:	8022      	strh	r2, [r4, #0]
	if(menu == temp_display) sprintf(bf, "xstr %d,%d,50,90,0,BLACK,WHITE,0,0,1,\"%cC\"", buf.x, buf.y, 0xb0);
 8001376:	4c0c      	ldr	r4, [pc, #48]	; (80013a8 <value_put+0x88>)
 8001378:	2d00      	cmp	r5, #0
 800137a:	d10d      	bne.n	8001398 <value_put+0x78>
 800137c:	21b0      	movs	r1, #176	; 0xb0
 800137e:	0020      	movs	r0, r4
 8001380:	9100      	str	r1, [sp, #0]
 8001382:	490a      	ldr	r1, [pc, #40]	; (80013ac <value_put+0x8c>)
 8001384:	f003 f8dc 	bl	8004540 <siprintf>
	else                     sprintf(bf, "xstr %d,%d,50,90,0,BLACK,WHITE,0,3,1,\"s later\"", buf.x, buf.y);
	nextion_inst_set(bf);
 8001388:	0020      	movs	r0, r4
 800138a:	f7ff fe9f 	bl	80010cc <nextion_inst_set>
}
 800138e:	b005      	add	sp, #20
 8001390:	bdf0      	pop	{r4, r5, r6, r7, pc}
	else               segment_draw(&buf, (uint8_t*)&segment_data[10]);
 8001392:	0031      	movs	r1, r6
 8001394:	3146      	adds	r1, #70	; 0x46
 8001396:	e7d8      	b.n	800134a <value_put+0x2a>
	else                     sprintf(bf, "xstr %d,%d,50,90,0,BLACK,WHITE,0,3,1,\"s later\"", buf.x, buf.y);
 8001398:	0020      	movs	r0, r4
 800139a:	4905      	ldr	r1, [pc, #20]	; (80013b0 <value_put+0x90>)
 800139c:	f003 f8d0 	bl	8004540 <siprintf>
 80013a0:	e7f2      	b.n	8001388 <value_put+0x68>
 80013a2:	46c0      	nop			; (mov r8, r8)
 80013a4:	20000111 	.word	0x20000111
 80013a8:	20000222 	.word	0x20000222
 80013ac:	08004d3e 	.word	0x08004d3e
 80013b0:	08004d69 	.word	0x08004d69

080013b4 <wind_power_draw>:

/* basic y range 20, 20++ */
/* member to member distance is 20pixcel */
void wind_power_draw(uint8_t* data){
 80013b4:	b570      	push	{r4, r5, r6, lr}
 80013b6:	0006      	movs	r6, r0
	/* sky blue 22271 */

	/* 1. figure */
	sprintf(bf, "fill 320,170-20,10,20,%s", *data >= 0 ? "22271" : "WHITE");
 80013b8:	4c39      	ldr	r4, [pc, #228]	; (80014a0 <wind_power_draw+0xec>)
 80013ba:	4d3a      	ldr	r5, [pc, #232]	; (80014a4 <wind_power_draw+0xf0>)
 80013bc:	493a      	ldr	r1, [pc, #232]	; (80014a8 <wind_power_draw+0xf4>)
 80013be:	002a      	movs	r2, r5
 80013c0:	0020      	movs	r0, r4
 80013c2:	f003 f8bd 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80013c6:	0020      	movs	r0, r4
 80013c8:	f7ff fe80 	bl	80010cc <nextion_inst_set>
	sprintf(bf, "cirs 325,170-20,5,%s",     *data >= 0 ? "22271" : "WHITE");
 80013cc:	002a      	movs	r2, r5
 80013ce:	4937      	ldr	r1, [pc, #220]	; (80014ac <wind_power_draw+0xf8>)
 80013d0:	0020      	movs	r0, r4
 80013d2:	f003 f8b5 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80013d6:	0020      	movs	r0, r4
 80013d8:	f7ff fe78 	bl	80010cc <nextion_inst_set>

	/* 2. figure */
	sprintf(bf, "fill 340,170-30,10,30,%s", *data >= 1 ? "22271" : "WHITE");
 80013dc:	7833      	ldrb	r3, [r6, #0]
 80013de:	002a      	movs	r2, r5
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d100      	bne.n	80013e6 <wind_power_draw+0x32>
 80013e4:	4a32      	ldr	r2, [pc, #200]	; (80014b0 <wind_power_draw+0xfc>)
 80013e6:	4933      	ldr	r1, [pc, #204]	; (80014b4 <wind_power_draw+0x100>)
 80013e8:	0020      	movs	r0, r4
 80013ea:	f003 f8a9 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80013ee:	0020      	movs	r0, r4
 80013f0:	f7ff fe6c 	bl	80010cc <nextion_inst_set>
	sprintf(bf, "cirs 345,170-30,5,%s",     *data >= 1 ? "22271" : "WHITE");
 80013f4:	7833      	ldrb	r3, [r6, #0]
 80013f6:	002a      	movs	r2, r5
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	d100      	bne.n	80013fe <wind_power_draw+0x4a>
 80013fc:	4a2c      	ldr	r2, [pc, #176]	; (80014b0 <wind_power_draw+0xfc>)
 80013fe:	492e      	ldr	r1, [pc, #184]	; (80014b8 <wind_power_draw+0x104>)
 8001400:	0020      	movs	r0, r4
 8001402:	f003 f89d 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001406:	0020      	movs	r0, r4
 8001408:	f7ff fe60 	bl	80010cc <nextion_inst_set>

	/* 3. figure */
	sprintf(bf, "fill 360,170-40,10,40,%s", *data >= 2 ? "22271" : "WHITE");
 800140c:	7833      	ldrb	r3, [r6, #0]
 800140e:	002a      	movs	r2, r5
 8001410:	2b01      	cmp	r3, #1
 8001412:	d800      	bhi.n	8001416 <wind_power_draw+0x62>
 8001414:	4a26      	ldr	r2, [pc, #152]	; (80014b0 <wind_power_draw+0xfc>)
 8001416:	4929      	ldr	r1, [pc, #164]	; (80014bc <wind_power_draw+0x108>)
 8001418:	0020      	movs	r0, r4
 800141a:	f003 f891 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 800141e:	0020      	movs	r0, r4
 8001420:	f7ff fe54 	bl	80010cc <nextion_inst_set>
	sprintf(bf, "cirs 365,170-40,5,%s",     *data >= 2 ? "22271" : "WHITE");
 8001424:	7833      	ldrb	r3, [r6, #0]
 8001426:	002a      	movs	r2, r5
 8001428:	2b01      	cmp	r3, #1
 800142a:	d800      	bhi.n	800142e <wind_power_draw+0x7a>
 800142c:	4a20      	ldr	r2, [pc, #128]	; (80014b0 <wind_power_draw+0xfc>)
 800142e:	4924      	ldr	r1, [pc, #144]	; (80014c0 <wind_power_draw+0x10c>)
 8001430:	0020      	movs	r0, r4
 8001432:	f003 f885 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001436:	0020      	movs	r0, r4
 8001438:	f7ff fe48 	bl	80010cc <nextion_inst_set>

	/* 4. figure */
	sprintf(bf, "fill 380,170-50,10,50,%s", *data >= 3 ? "22271" : "WHITE");
 800143c:	7833      	ldrb	r3, [r6, #0]
 800143e:	002a      	movs	r2, r5
 8001440:	2b02      	cmp	r3, #2
 8001442:	d800      	bhi.n	8001446 <wind_power_draw+0x92>
 8001444:	4a1a      	ldr	r2, [pc, #104]	; (80014b0 <wind_power_draw+0xfc>)
 8001446:	491f      	ldr	r1, [pc, #124]	; (80014c4 <wind_power_draw+0x110>)
 8001448:	0020      	movs	r0, r4
 800144a:	f003 f879 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 800144e:	0020      	movs	r0, r4
 8001450:	f7ff fe3c 	bl	80010cc <nextion_inst_set>
	sprintf(bf, "cirs 385,170-50,5,%s",     *data >= 3 ? "22271" : "WHITE");
 8001454:	7833      	ldrb	r3, [r6, #0]
 8001456:	002a      	movs	r2, r5
 8001458:	2b02      	cmp	r3, #2
 800145a:	d800      	bhi.n	800145e <wind_power_draw+0xaa>
 800145c:	4a14      	ldr	r2, [pc, #80]	; (80014b0 <wind_power_draw+0xfc>)
 800145e:	491a      	ldr	r1, [pc, #104]	; (80014c8 <wind_power_draw+0x114>)
 8001460:	0020      	movs	r0, r4
 8001462:	f003 f86d 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001466:	0020      	movs	r0, r4
 8001468:	f7ff fe30 	bl	80010cc <nextion_inst_set>

	/* 5. figure */
	sprintf(bf, "fill 400,170-60,10,60,%s", *data >= 4 ? "22271" : "WHITE");
 800146c:	7833      	ldrb	r3, [r6, #0]
 800146e:	002a      	movs	r2, r5
 8001470:	2b03      	cmp	r3, #3
 8001472:	d800      	bhi.n	8001476 <wind_power_draw+0xc2>
 8001474:	4a0e      	ldr	r2, [pc, #56]	; (80014b0 <wind_power_draw+0xfc>)
 8001476:	4915      	ldr	r1, [pc, #84]	; (80014cc <wind_power_draw+0x118>)
 8001478:	0020      	movs	r0, r4
 800147a:	f003 f861 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 800147e:	0020      	movs	r0, r4
 8001480:	f7ff fe24 	bl	80010cc <nextion_inst_set>
	sprintf(bf, "cirs 405,170-60,5,%s",     *data >= 4 ? "22271" : "WHITE");
 8001484:	7833      	ldrb	r3, [r6, #0]
 8001486:	002a      	movs	r2, r5
 8001488:	2b03      	cmp	r3, #3
 800148a:	d800      	bhi.n	800148e <wind_power_draw+0xda>
 800148c:	4a08      	ldr	r2, [pc, #32]	; (80014b0 <wind_power_draw+0xfc>)
 800148e:	4910      	ldr	r1, [pc, #64]	; (80014d0 <wind_power_draw+0x11c>)
 8001490:	0020      	movs	r0, r4
 8001492:	f003 f855 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001496:	0020      	movs	r0, r4
 8001498:	f7ff fe18 	bl	80010cc <nextion_inst_set>
}
 800149c:	bd70      	pop	{r4, r5, r6, pc}
 800149e:	46c0      	nop			; (mov r8, r8)
 80014a0:	20000222 	.word	0x20000222
 80014a4:	08004d98 	.word	0x08004d98
 80014a8:	08004d9e 	.word	0x08004d9e
 80014ac:	08004db7 	.word	0x08004db7
 80014b0:	08005249 	.word	0x08005249
 80014b4:	08004dcc 	.word	0x08004dcc
 80014b8:	08004de5 	.word	0x08004de5
 80014bc:	08004dfa 	.word	0x08004dfa
 80014c0:	08004e13 	.word	0x08004e13
 80014c4:	08004e28 	.word	0x08004e28
 80014c8:	08004e41 	.word	0x08004e41
 80014cc:	08004e56 	.word	0x08004e56
 80014d0:	08004e6f 	.word	0x08004e6f

080014d4 <power_switch_draw>:

/* power switch draw */
void power_switch_draw(void){
 80014d4:	b510      	push	{r4, lr}
	nextion_inst_set("fill 180,180,130,92,65093");
 80014d6:	4808      	ldr	r0, [pc, #32]	; (80014f8 <power_switch_draw+0x24>)
 80014d8:	f7ff fdf8 	bl	80010cc <nextion_inst_set>

	nextion_inst_set("cir 245,226,20,BLACK");
 80014dc:	4807      	ldr	r0, [pc, #28]	; (80014fc <power_switch_draw+0x28>)
 80014de:	f7ff fdf5 	bl	80010cc <nextion_inst_set>

	nextion_inst_set("fill 245-10,226-30,20,30,65093");
 80014e2:	4807      	ldr	r0, [pc, #28]	; (8001500 <power_switch_draw+0x2c>)
 80014e4:	f7ff fdf2 	bl	80010cc <nextion_inst_set>
	nextion_inst_set("fill 245-5,226-25,10,25,BLACK");
 80014e8:	4806      	ldr	r0, [pc, #24]	; (8001504 <power_switch_draw+0x30>)
 80014ea:	f7ff fdef 	bl	80010cc <nextion_inst_set>

	nextion_inst_set("draw 180,180,180+130,272,BLACK");
 80014ee:	4806      	ldr	r0, [pc, #24]	; (8001508 <power_switch_draw+0x34>)
 80014f0:	f7ff fdec 	bl	80010cc <nextion_inst_set>
}
 80014f4:	bd10      	pop	{r4, pc}
 80014f6:	46c0      	nop			; (mov r8, r8)
 80014f8:	08004e84 	.word	0x08004e84
 80014fc:	08004e9e 	.word	0x08004e9e
 8001500:	08004eb3 	.word	0x08004eb3
 8001504:	08004ed2 	.word	0x08004ed2
 8001508:	08004ef0 	.word	0x08004ef0

0800150c <button_draw>:

/* button draw merge (lower menu button`s draw) */
void button_draw(BUTTON_DATA_Typedef* data,	LOWER_MENU_Typedef state){
 800150c:	b573      	push	{r0, r1, r4, r5, r6, lr}
	/* have two floor button draw */
	if(state == power_set_state){
		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 800150e:	8802      	ldrh	r2, [r0, #0]
void button_draw(BUTTON_DATA_Typedef* data,	LOWER_MENU_Typedef state){
 8001510:	0004      	movs	r4, r0
		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 8001512:	8843      	ldrh	r3, [r0, #2]
 8001514:	4d47      	ldr	r5, [pc, #284]	; (8001634 <button_draw+0x128>)
	if(state == power_set_state){
 8001516:	2900      	cmp	r1, #0
 8001518:	d127      	bne.n	800156a <button_draw+0x5e>
		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 800151a:	6981      	ldr	r1, [r0, #24]
 800151c:	4e46      	ldr	r6, [pc, #280]	; (8001638 <button_draw+0x12c>)
 800151e:	9101      	str	r1, [sp, #4]
 8001520:	6a01      	ldr	r1, [r0, #32]
 8001522:	0028      	movs	r0, r5
 8001524:	9100      	str	r1, [sp, #0]
 8001526:	0031      	movs	r1, r6
 8001528:	f003 f80a 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 800152c:	0028      	movs	r0, r5
 800152e:	f7ff fdcd 	bl	80010cc <nextion_inst_set>

		sprintf(bf, "xstr %d,%d,80,20,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0 + 20, data->color, data->second_string);
 8001532:	69e1      	ldr	r1, [r4, #28]
 8001534:	8863      	ldrh	r3, [r4, #2]
 8001536:	9101      	str	r1, [sp, #4]
 8001538:	6a21      	ldr	r1, [r4, #32]
 800153a:	8822      	ldrh	r2, [r4, #0]
 800153c:	3314      	adds	r3, #20
 800153e:	9100      	str	r1, [sp, #0]
		nextion_inst_set(bf);

		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y1, data->right_area.x1, (data->right_area.y0 + data->right_area.y1) / 2);
		nextion_inst_set(bf);

		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y0, data->right_area.x0, data->right_area.y1);
 8001540:	0031      	movs	r1, r6
		nextion_inst_set(bf);
	}
	/* basic button draw */
	else if(state == alarm_set_state){
		sprintf(bf, "xstr %d,%d,100,40,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 8001542:	0028      	movs	r0, r5
 8001544:	f002 fffc 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 8001548:	0028      	movs	r0, r5
 800154a:	f7ff fdbf 	bl	80010cc <nextion_inst_set>
	}

	sprintf(bf, "draw %d,%d,%d,%d,BLACK", data->area.x0, data->area.y0, data->area.x1, data->area.y1);
 800154e:	88e1      	ldrh	r1, [r4, #6]
 8001550:	0028      	movs	r0, r5
 8001552:	9101      	str	r1, [sp, #4]
 8001554:	88a1      	ldrh	r1, [r4, #4]
 8001556:	8863      	ldrh	r3, [r4, #2]
 8001558:	8822      	ldrh	r2, [r4, #0]
 800155a:	9100      	str	r1, [sp, #0]
 800155c:	4937      	ldr	r1, [pc, #220]	; (800163c <button_draw+0x130>)
 800155e:	f002 ffef 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001562:	0028      	movs	r0, r5
 8001564:	f7ff fdb2 	bl	80010cc <nextion_inst_set>
}
 8001568:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
	else if(state == temp_set_state){
 800156a:	2901      	cmp	r1, #1
 800156c:	d159      	bne.n	8001622 <button_draw+0x116>
		sprintf(bf, "xstr %d,%d,140,40,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 800156e:	6981      	ldr	r1, [r0, #24]
 8001570:	9101      	str	r1, [sp, #4]
 8001572:	6a01      	ldr	r1, [r0, #32]
 8001574:	0028      	movs	r0, r5
 8001576:	9100      	str	r1, [sp, #0]
 8001578:	4931      	ldr	r1, [pc, #196]	; (8001640 <button_draw+0x134>)
 800157a:	f002 ffe1 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 800157e:	0028      	movs	r0, r5
 8001580:	f7ff fda4 	bl	80010cc <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->left_area.x0, (data->left_area.y0 + data->left_area.y1) / 2, data->left_area.x1, data->left_area.y0);
 8001584:	8961      	ldrh	r1, [r4, #10]
 8001586:	89e3      	ldrh	r3, [r4, #14]
 8001588:	4e2e      	ldr	r6, [pc, #184]	; (8001644 <button_draw+0x138>)
 800158a:	185b      	adds	r3, r3, r1
 800158c:	9101      	str	r1, [sp, #4]
 800158e:	89a1      	ldrh	r1, [r4, #12]
 8001590:	8922      	ldrh	r2, [r4, #8]
 8001592:	105b      	asrs	r3, r3, #1
 8001594:	9100      	str	r1, [sp, #0]
 8001596:	0028      	movs	r0, r5
 8001598:	0031      	movs	r1, r6
 800159a:	f002 ffd1 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 800159e:	0028      	movs	r0, r5
 80015a0:	f7ff fd94 	bl	80010cc <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->left_area.x0, (data->left_area.y0 + data->left_area.y1) / 2, data->left_area.x1, data->left_area.y1);
 80015a4:	89e1      	ldrh	r1, [r4, #14]
 80015a6:	8963      	ldrh	r3, [r4, #10]
 80015a8:	9101      	str	r1, [sp, #4]
 80015aa:	185b      	adds	r3, r3, r1
 80015ac:	89a1      	ldrh	r1, [r4, #12]
 80015ae:	8922      	ldrh	r2, [r4, #8]
 80015b0:	105b      	asrs	r3, r3, #1
 80015b2:	9100      	str	r1, [sp, #0]
 80015b4:	0028      	movs	r0, r5
 80015b6:	0031      	movs	r1, r6
 80015b8:	f002 ffc2 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 80015bc:	0028      	movs	r0, r5
 80015be:	f7ff fd85 	bl	80010cc <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->left_area.x1, data->left_area.y0, data->left_area.x1, data->left_area.y1);
 80015c2:	89a2      	ldrh	r2, [r4, #12]
 80015c4:	89e1      	ldrh	r1, [r4, #14]
 80015c6:	8963      	ldrh	r3, [r4, #10]
 80015c8:	9200      	str	r2, [sp, #0]
 80015ca:	9101      	str	r1, [sp, #4]
 80015cc:	0028      	movs	r0, r5
 80015ce:	0031      	movs	r1, r6
 80015d0:	f002 ffb6 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 80015d4:	0028      	movs	r0, r5
 80015d6:	f7ff fd79 	bl	80010cc <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y0, data->right_area.x1, (data->right_area.y0 + data->right_area.y1) / 2);
 80015da:	8a63      	ldrh	r3, [r4, #18]
 80015dc:	8ae1      	ldrh	r1, [r4, #22]
 80015de:	8a22      	ldrh	r2, [r4, #16]
 80015e0:	18c9      	adds	r1, r1, r3
 80015e2:	1049      	asrs	r1, r1, #1
 80015e4:	9101      	str	r1, [sp, #4]
 80015e6:	8aa1      	ldrh	r1, [r4, #20]
 80015e8:	0028      	movs	r0, r5
 80015ea:	9100      	str	r1, [sp, #0]
 80015ec:	0031      	movs	r1, r6
 80015ee:	f002 ffa7 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 80015f2:	0028      	movs	r0, r5
 80015f4:	f7ff fd6a 	bl	80010cc <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y1, data->right_area.x1, (data->right_area.y0 + data->right_area.y1) / 2);
 80015f8:	8ae3      	ldrh	r3, [r4, #22]
 80015fa:	8a61      	ldrh	r1, [r4, #18]
 80015fc:	8a22      	ldrh	r2, [r4, #16]
 80015fe:	18c9      	adds	r1, r1, r3
 8001600:	1049      	asrs	r1, r1, #1
 8001602:	9101      	str	r1, [sp, #4]
 8001604:	8aa1      	ldrh	r1, [r4, #20]
 8001606:	0028      	movs	r0, r5
 8001608:	9100      	str	r1, [sp, #0]
 800160a:	0031      	movs	r1, r6
 800160c:	f002 ff98 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 8001610:	0028      	movs	r0, r5
 8001612:	f7ff fd5b 	bl	80010cc <nextion_inst_set>
		sprintf(bf, "line %d,%d,%d,%d,BLACK", data->right_area.x0, data->right_area.y0, data->right_area.x0, data->right_area.y1);
 8001616:	8a22      	ldrh	r2, [r4, #16]
 8001618:	8ae1      	ldrh	r1, [r4, #22]
 800161a:	8a63      	ldrh	r3, [r4, #18]
 800161c:	9101      	str	r1, [sp, #4]
 800161e:	9200      	str	r2, [sp, #0]
 8001620:	e78e      	b.n	8001540 <button_draw+0x34>
	else if(state == alarm_set_state){
 8001622:	2902      	cmp	r1, #2
 8001624:	d000      	beq.n	8001628 <button_draw+0x11c>
 8001626:	e792      	b.n	800154e <button_draw+0x42>
		sprintf(bf, "xstr %d,%d,100,40,0,BLACK,%s,1,1,1,\"%s\"", data->area.x0, data->area.y0, data->color, data->first_stirng);
 8001628:	6981      	ldr	r1, [r0, #24]
 800162a:	9101      	str	r1, [sp, #4]
 800162c:	6a01      	ldr	r1, [r0, #32]
 800162e:	9100      	str	r1, [sp, #0]
 8001630:	4905      	ldr	r1, [pc, #20]	; (8001648 <button_draw+0x13c>)
 8001632:	e786      	b.n	8001542 <button_draw+0x36>
 8001634:	20000222 	.word	0x20000222
 8001638:	08004f0f 	.word	0x08004f0f
 800163c:	08004f9d 	.word	0x08004f9d
 8001640:	08004f36 	.word	0x08004f36
 8001644:	08004f5e 	.word	0x08004f5e
 8001648:	08004f75 	.word	0x08004f75

0800164c <lower_power>:

/* power state button */
void lower_power(void){
 800164c:	b510      	push	{r4, lr}
	power_switch_draw();
 800164e:	f7ff ff41 	bl	80014d4 <power_switch_draw>
	button_draw(&button[buz_button],    lower_menu);
 8001652:	4c05      	ldr	r4, [pc, #20]	; (8001668 <lower_power+0x1c>)
 8001654:	4805      	ldr	r0, [pc, #20]	; (800166c <lower_power+0x20>)
 8001656:	7821      	ldrb	r1, [r4, #0]
 8001658:	f7ff ff58 	bl	800150c <button_draw>
	button_draw(&button[select_button], lower_menu);
 800165c:	7821      	ldrb	r1, [r4, #0]
 800165e:	4804      	ldr	r0, [pc, #16]	; (8001670 <lower_power+0x24>)
 8001660:	f7ff ff54 	bl	800150c <button_draw>
}
 8001664:	bd10      	pop	{r4, pc}
 8001666:	46c0      	nop			; (mov r8, r8)
 8001668:	200003ac 	.word	0x200003ac
 800166c:	20000000 	.word	0x20000000
 8001670:	20000024 	.word	0x20000024

08001674 <lower_temp>:

/* arrow state button */
void lower_temp(void){
 8001674:	b510      	push	{r4, lr}
	button_draw(&button[temp_button], lower_menu);
 8001676:	4c05      	ldr	r4, [pc, #20]	; (800168c <lower_temp+0x18>)
 8001678:	4805      	ldr	r0, [pc, #20]	; (8001690 <lower_temp+0x1c>)
 800167a:	7821      	ldrb	r1, [r4, #0]
 800167c:	f7ff ff46 	bl	800150c <button_draw>
	button_draw(&button[wind_button], lower_menu);
 8001680:	7821      	ldrb	r1, [r4, #0]
 8001682:	4804      	ldr	r0, [pc, #16]	; (8001694 <lower_temp+0x20>)
 8001684:	f7ff ff42 	bl	800150c <button_draw>
}
 8001688:	bd10      	pop	{r4, pc}
 800168a:	46c0      	nop			; (mov r8, r8)
 800168c:	200003ac 	.word	0x200003ac
 8001690:	20000048 	.word	0x20000048
 8001694:	2000006c 	.word	0x2000006c

08001698 <lower_alarm>:

/* basic state button */
void lower_alarm(void){
 8001698:	b510      	push	{r4, lr}
	button_draw(&button[alarm_on_button],  lower_menu);
 800169a:	4c07      	ldr	r4, [pc, #28]	; (80016b8 <lower_alarm+0x20>)
 800169c:	4807      	ldr	r0, [pc, #28]	; (80016bc <lower_alarm+0x24>)
 800169e:	7821      	ldrb	r1, [r4, #0]
 80016a0:	f7ff ff34 	bl	800150c <button_draw>
	button_draw(&button[alarm_off_button], lower_menu);
 80016a4:	7821      	ldrb	r1, [r4, #0]
 80016a6:	4806      	ldr	r0, [pc, #24]	; (80016c0 <lower_alarm+0x28>)
 80016a8:	f7ff ff30 	bl	800150c <button_draw>
	button_draw(&button[alarm_ok_button],  lower_menu);
 80016ac:	7821      	ldrb	r1, [r4, #0]
 80016ae:	4805      	ldr	r0, [pc, #20]	; (80016c4 <lower_alarm+0x2c>)
 80016b0:	f7ff ff2c 	bl	800150c <button_draw>
}
 80016b4:	bd10      	pop	{r4, pc}
 80016b6:	46c0      	nop			; (mov r8, r8)
 80016b8:	200003ac 	.word	0x200003ac
 80016bc:	20000090 	.word	0x20000090
 80016c0:	200000b4 	.word	0x200000b4
 80016c4:	200000d8 	.word	0x200000d8

080016c8 <basic_screen>:

/* button function merge */
void (*lower_menu_fuc[3])(void) = { lower_power, lower_temp, lower_alarm };

/* merge all display function */
void basic_screen(MODE_Typedef* alarm, MODE_Typedef* color, uint8_t* data, uint8_t* wind_data){
 80016c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016ca:	b08f      	sub	sp, #60	; 0x3c
 80016cc:	9307      	str	r3, [sp, #28]
	/* mode title display */
	sprintf(bf, "xstr 0,0,120,30,0,%s,WHITE,1,1,1,\"cooling\"",       *color == cooling     ? "RED" : "BLACK");
 80016ce:	780b      	ldrb	r3, [r1, #0]
void basic_screen(MODE_Typedef* alarm, MODE_Typedef* color, uint8_t* data, uint8_t* wind_data){
 80016d0:	9206      	str	r2, [sp, #24]
 80016d2:	000d      	movs	r5, r1
	sprintf(bf, "xstr 0,0,120,30,0,%s,WHITE,1,1,1,\"cooling\"",       *color == cooling     ? "RED" : "BLACK");
 80016d4:	4a8d      	ldr	r2, [pc, #564]	; (800190c <basic_screen+0x244>)
void basic_screen(MODE_Typedef* alarm, MODE_Typedef* color, uint8_t* data, uint8_t* wind_data){
 80016d6:	9005      	str	r0, [sp, #20]
	sprintf(bf, "xstr 0,0,120,30,0,%s,WHITE,1,1,1,\"cooling\"",       *color == cooling     ? "RED" : "BLACK");
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d000      	beq.n	80016de <basic_screen+0x16>
 80016dc:	4a8c      	ldr	r2, [pc, #560]	; (8001910 <basic_screen+0x248>)
 80016de:	4c8d      	ldr	r4, [pc, #564]	; (8001914 <basic_screen+0x24c>)
 80016e0:	498d      	ldr	r1, [pc, #564]	; (8001918 <basic_screen+0x250>)
 80016e2:	0020      	movs	r0, r4
 80016e4:	f002 ff2c 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 80016e8:	0020      	movs	r0, r4
 80016ea:	f7ff fcef 	bl	80010cc <nextion_inst_set>

	sprintf(bf, "xstr 120,0,120,30,0,%s,WHITE,1,1,1,\"Dehumidify\"",  *color == dehumidity  ? "RED" : "BLACK");
 80016ee:	782b      	ldrb	r3, [r5, #0]
 80016f0:	4a86      	ldr	r2, [pc, #536]	; (800190c <basic_screen+0x244>)
 80016f2:	2b01      	cmp	r3, #1
 80016f4:	d000      	beq.n	80016f8 <basic_screen+0x30>
 80016f6:	4a86      	ldr	r2, [pc, #536]	; (8001910 <basic_screen+0x248>)
 80016f8:	4988      	ldr	r1, [pc, #544]	; (800191c <basic_screen+0x254>)
 80016fa:	0020      	movs	r0, r4
 80016fc:	f002 ff20 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001700:	0020      	movs	r0, r4
 8001702:	f7ff fce3 	bl	80010cc <nextion_inst_set>

	sprintf(bf, "xstr 240,0,120,30,0,%s,WHITE,1,1,1,\"ventilation\"", *color == ventilation ? "RED" : "BLACK");
 8001706:	782b      	ldrb	r3, [r5, #0]
 8001708:	4a80      	ldr	r2, [pc, #512]	; (800190c <basic_screen+0x244>)
 800170a:	2b02      	cmp	r3, #2
 800170c:	d000      	beq.n	8001710 <basic_screen+0x48>
 800170e:	4a80      	ldr	r2, [pc, #512]	; (8001910 <basic_screen+0x248>)
 8001710:	4983      	ldr	r1, [pc, #524]	; (8001920 <basic_screen+0x258>)
 8001712:	0020      	movs	r0, r4
 8001714:	f002 ff14 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001718:	0020      	movs	r0, r4
 800171a:	f7ff fcd7 	bl	80010cc <nextion_inst_set>

	sprintf(bf, "xstr 360,0,120,30,0,%s,WHITE,1,1,1,\"heating\"",     *color == heating     ? "RED" : "BLACK");
 800171e:	782b      	ldrb	r3, [r5, #0]
 8001720:	4a7a      	ldr	r2, [pc, #488]	; (800190c <basic_screen+0x244>)
 8001722:	2b03      	cmp	r3, #3
 8001724:	d000      	beq.n	8001728 <basic_screen+0x60>
 8001726:	4a7a      	ldr	r2, [pc, #488]	; (8001910 <basic_screen+0x248>)
 8001728:	497e      	ldr	r1, [pc, #504]	; (8001924 <basic_screen+0x25c>)
 800172a:	0020      	movs	r0, r4
 800172c:	f002 ff08 	bl	8004540 <siprintf>
	nextion_inst_set(bf);
 8001730:	0020      	movs	r0, r4
 8001732:	f7ff fccb 	bl	80010cc <nextion_inst_set>

	if(power == off) nextion_inst_set("fill 0,0,480,30,WHITE");
 8001736:	4b7c      	ldr	r3, [pc, #496]	; (8001928 <basic_screen+0x260>)
 8001738:	781b      	ldrb	r3, [r3, #0]
 800173a:	2b00      	cmp	r3, #0
 800173c:	d102      	bne.n	8001744 <basic_screen+0x7c>
 800173e:	487b      	ldr	r0, [pc, #492]	; (800192c <basic_screen+0x264>)
 8001740:	f7ff fcc4 	bl	80010cc <nextion_inst_set>
		SHT41_t* buf = (SHT41_t*)malloc(sizeof(SHT41_t));
 8001744:	2008      	movs	r0, #8
 8001746:	f002 fde1 	bl	800430c <malloc>
 800174a:	0004      	movs	r4, r0
		*buf = getTempSht41();
 800174c:	ad08      	add	r5, sp, #32
 800174e:	0028      	movs	r0, r5
 8001750:	f000 fc5c 	bl	800200c <getTempSht41>
 8001754:	0023      	movs	r3, r4

	/* get sensor value */
	SHT41_t*  sht41_value  = get_sensor(get_sht41);
	uint16_t* ens160_value = get_sensor(get_ens160);
 8001756:	2001      	movs	r0, #1
		*buf = getTempSht41();
 8001758:	cd06      	ldmia	r5!, {r1, r2}
 800175a:	c306      	stmia	r3!, {r1, r2}
	SHT41_t*  sht41_value  = get_sensor(get_sht41);
 800175c:	940a      	str	r4, [sp, #40]	; 0x28
	uint16_t* ens160_value = get_sensor(get_ens160);
 800175e:	f7ff fc95 	bl	800108c <get_sensor>

	sensor[sht41_temp].data = (uint16_t)sht41_value->temperature;
 8001762:	9f0a      	ldr	r7, [sp, #40]	; 0x28
	uint16_t* ens160_value = get_sensor(get_ens160);
 8001764:	0005      	movs	r5, r0
 8001766:	900b      	str	r0, [sp, #44]	; 0x2c
	sensor[sht41_temp].data = (uint16_t)sht41_value->temperature;
 8001768:	6838      	ldr	r0, [r7, #0]
 800176a:	f7fe fdc3 	bl	80002f4 <__aeabi_f2uiz>
 800176e:	4c70      	ldr	r4, [pc, #448]	; (8001930 <basic_screen+0x268>)
 8001770:	8120      	strh	r0, [r4, #8]
	sensor[sht41_hum].data  = (uint16_t)sht41_value->humidity;
 8001772:	6878      	ldr	r0, [r7, #4]
 8001774:	f7fe fdbe 	bl	80002f4 <__aeabi_f2uiz>
 8001778:	8320      	strh	r0, [r4, #24]
	sensor[ens160_co2].data = *ens160_value;
 800177a:	882b      	ldrh	r3, [r5, #0]

	free_addr((void*)&sht41_value);
 800177c:	a80a      	add	r0, sp, #40	; 0x28
	sensor[ens160_co2].data = *ens160_value;
 800177e:	8523      	strh	r3, [r4, #40]	; 0x28
	free_addr((void*)&sht41_value);
 8001780:	f7ff fc9c 	bl	80010bc <free_addr>
	free_addr((void*)&ens160_value);
 8001784:	a80b      	add	r0, sp, #44	; 0x2c
 8001786:	f7ff fc99 	bl	80010bc <free_addr>

	/* sensor value display */
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 800178a:	2500      	movs	r5, #0
		if(i == sht41_temp){
 800178c:	4968      	ldr	r1, [pc, #416]	; (8001930 <basic_screen+0x268>)
 800178e:	2d00      	cmp	r5, #0
 8001790:	d000      	beq.n	8001794 <basic_screen+0xcc>
 8001792:	e086      	b.n	80018a2 <basic_screen+0x1da>
			/* sensor value draw (temperature) */
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%d%cC\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data, 0xb0);
 8001794:	4864      	ldr	r0, [pc, #400]	; (8001928 <basic_screen+0x260>)
 8001796:	880a      	ldrh	r2, [r1, #0]
 8001798:	7800      	ldrb	r0, [r0, #0]
 800179a:	884b      	ldrh	r3, [r1, #2]
 800179c:	4684      	mov	ip, r0
 800179e:	4666      	mov	r6, ip
 80017a0:	68cf      	ldr	r7, [r1, #12]
 80017a2:	485c      	ldr	r0, [pc, #368]	; (8001914 <basic_screen+0x24c>)
 80017a4:	2e01      	cmp	r6, #1
 80017a6:	d000      	beq.n	80017aa <basic_screen+0xe2>
 80017a8:	e09a      	b.n	80018e0 <basic_screen+0x218>
 80017aa:	36af      	adds	r6, #175	; 0xaf
 80017ac:	9602      	str	r6, [sp, #8]
 80017ae:	8909      	ldrh	r1, [r1, #8]
 80017b0:	9700      	str	r7, [sp, #0]
 80017b2:	9101      	str	r1, [sp, #4]
 80017b4:	495f      	ldr	r1, [pc, #380]	; (8001934 <basic_screen+0x26c>)
 80017b6:	f002 fec3 	bl	8004540 <siprintf>
		/* sensor value draw (co2) */
		else if(i == ens160_co2){
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%dppm\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data);
			else            sprintf(bf, "fill %d,%d,160,30,%s", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color);
		}
		nextion_inst_set(bf);
 80017ba:	4f56      	ldr	r7, [pc, #344]	; (8001914 <basic_screen+0x24c>)
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 80017bc:	3501      	adds	r5, #1
		nextion_inst_set(bf);
 80017be:	0038      	movs	r0, r7
 80017c0:	f7ff fc84 	bl	80010cc <nextion_inst_set>

		/* sensor outline draw */
		sprintf(bf, "draw %d,%d,%d,%d,BLACK", sensor[i].area.x0, sensor[i].area.y0, sensor[i].area.x1, sensor[i].area.y1);
 80017c4:	88e1      	ldrh	r1, [r4, #6]
 80017c6:	8863      	ldrh	r3, [r4, #2]
 80017c8:	8822      	ldrh	r2, [r4, #0]
 80017ca:	9101      	str	r1, [sp, #4]
 80017cc:	88a1      	ldrh	r1, [r4, #4]
 80017ce:	0038      	movs	r0, r7
 80017d0:	9100      	str	r1, [sp, #0]
 80017d2:	4959      	ldr	r1, [pc, #356]	; (8001938 <basic_screen+0x270>)
 80017d4:	f002 feb4 	bl	8004540 <siprintf>
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 80017d8:	b2ed      	uxtb	r5, r5
		nextion_inst_set(bf);
 80017da:	0038      	movs	r0, r7
 80017dc:	f7ff fc76 	bl	80010cc <nextion_inst_set>
	for(SENSOR_ADDR_Typedef i = sht41_temp ; i < max_addr ; i++){
 80017e0:	3410      	adds	r4, #16
 80017e2:	2d03      	cmp	r5, #3
 80017e4:	d1d2      	bne.n	800178c <basic_screen+0xc4>
	}

	/* middle menu draw */
	POS_Typedef draw_pos = { 150, 80, 0 };
 80017e6:	2206      	movs	r2, #6
 80017e8:	4954      	ldr	r1, [pc, #336]	; (800193c <basic_screen+0x274>)
 80017ea:	a80c      	add	r0, sp, #48	; 0x30
 80017ec:	f002 fda2 	bl	8004334 <memcpy>
	if(power == on) {
 80017f0:	4c4d      	ldr	r4, [pc, #308]	; (8001928 <basic_screen+0x260>)
		if(*alarm != ventilation) value_put(data, *alarm == on_alarm || *alarm == off_alarm ? alarm_display : temp_display, &draw_pos);
 80017f2:	9b05      	ldr	r3, [sp, #20]
	if(power == on) {
 80017f4:	7822      	ldrb	r2, [r4, #0]
		if(*alarm != ventilation) value_put(data, *alarm == on_alarm || *alarm == off_alarm ? alarm_display : temp_display, &draw_pos);
 80017f6:	781b      	ldrb	r3, [r3, #0]
	if(power == on) {
 80017f8:	2a01      	cmp	r2, #1
 80017fa:	d000      	beq.n	80017fe <basic_screen+0x136>
 80017fc:	e079      	b.n	80018f2 <basic_screen+0x22a>
		if(*alarm != ventilation) value_put(data, *alarm == on_alarm || *alarm == off_alarm ? alarm_display : temp_display, &draw_pos);
 80017fe:	2b02      	cmp	r3, #2
 8001800:	d100      	bne.n	8001804 <basic_screen+0x13c>
 8001802:	e072      	b.n	80018ea <basic_screen+0x222>
 8001804:	2100      	movs	r1, #0
 8001806:	3b04      	subs	r3, #4
 8001808:	b2db      	uxtb	r3, r3
 800180a:	429a      	cmp	r2, r3
 800180c:	4149      	adcs	r1, r1
 800180e:	9806      	ldr	r0, [sp, #24]
 8001810:	b2c9      	uxtb	r1, r1
 8001812:	aa0c      	add	r2, sp, #48	; 0x30
 8001814:	f7ff fd84 	bl	8001320 <value_put>
		else                      nextion_inst_set("fill 150,61,169,118,WHITE");
		wind_power_draw(wind_data);
 8001818:	9807      	ldr	r0, [sp, #28]
 800181a:	f7ff fdcb 	bl	80013b4 <wind_power_draw>
	}
	else if(*alarm == on_alarm || *alarm == off_alarm) value_put(data, alarm_display, &draw_pos);
	else nextion_inst_set("fill 0,61,480,118,WHITE");

	/* left middle menu */
	if(power == on || *alarm == on_alarm || *alarm == off_alarm){
 800181e:	7823      	ldrb	r3, [r4, #0]
 8001820:	2b01      	cmp	r3, #1
 8001822:	d004      	beq.n	800182e <basic_screen+0x166>
 8001824:	9b05      	ldr	r3, [sp, #20]
 8001826:	781b      	ldrb	r3, [r3, #0]
 8001828:	3b04      	subs	r3, #4
 800182a:	2b01      	cmp	r3, #1
 800182c:	d82b      	bhi.n	8001886 <basic_screen+0x1be>
		nextion_inst_set("xstr 0,60,90,40,0,WHITE,BLACK,1,1,1,\"desired\"");
 800182e:	4844      	ldr	r0, [pc, #272]	; (8001940 <basic_screen+0x278>)
 8001830:	f7ff fc4c 	bl	80010cc <nextion_inst_set>
		nextion_inst_set("draw 0,60,90,60+40,BLACK");
 8001834:	4843      	ldr	r0, [pc, #268]	; (8001944 <basic_screen+0x27c>)
 8001836:	f7ff fc49 	bl	80010cc <nextion_inst_set>

		sprintf(bf, "xstr 0,100,90,40,0,%s,%s,1,1,1,\"on\"", *alarm == on_alarm ? "WHITE" : "BLACK", *alarm == on_alarm ? "BLACK" : "WHITE");
 800183a:	9b05      	ldr	r3, [sp, #20]
 800183c:	4d34      	ldr	r5, [pc, #208]	; (8001910 <basic_screen+0x248>)
 800183e:	7819      	ldrb	r1, [r3, #0]
 8001840:	4c41      	ldr	r4, [pc, #260]	; (8001948 <basic_screen+0x280>)
 8001842:	002b      	movs	r3, r5
 8001844:	0022      	movs	r2, r4
 8001846:	2904      	cmp	r1, #4
 8001848:	d001      	beq.n	800184e <basic_screen+0x186>
 800184a:	002a      	movs	r2, r5
 800184c:	0023      	movs	r3, r4
 800184e:	493f      	ldr	r1, [pc, #252]	; (800194c <basic_screen+0x284>)
 8001850:	0038      	movs	r0, r7
 8001852:	f002 fe75 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 8001856:	0038      	movs	r0, r7
 8001858:	f7ff fc38 	bl	80010cc <nextion_inst_set>
		nextion_inst_set("draw 0,100,90,100+40,BLACK");
 800185c:	483c      	ldr	r0, [pc, #240]	; (8001950 <basic_screen+0x288>)
 800185e:	f7ff fc35 	bl	80010cc <nextion_inst_set>

		sprintf(bf, "xstr 0,140,90,40,0,%s,%s,1,1,1,\"off\"", *alarm == off_alarm ? "WHITE" : "BLACK", *alarm == off_alarm ? "BLACK" : "WHITE");
 8001862:	9b05      	ldr	r3, [sp, #20]
 8001864:	002a      	movs	r2, r5
 8001866:	7819      	ldrb	r1, [r3, #0]
 8001868:	0023      	movs	r3, r4
 800186a:	2905      	cmp	r1, #5
 800186c:	d101      	bne.n	8001872 <basic_screen+0x1aa>
 800186e:	0022      	movs	r2, r4
 8001870:	002b      	movs	r3, r5
 8001872:	4938      	ldr	r1, [pc, #224]	; (8001954 <basic_screen+0x28c>)
 8001874:	0038      	movs	r0, r7
 8001876:	f002 fe63 	bl	8004540 <siprintf>
		nextion_inst_set(bf);
 800187a:	0038      	movs	r0, r7
 800187c:	f7ff fc26 	bl	80010cc <nextion_inst_set>
		nextion_inst_set("draw 0,140,90,140+40,BLACK");
 8001880:	4835      	ldr	r0, [pc, #212]	; (8001958 <basic_screen+0x290>)
 8001882:	f7ff fc23 	bl	80010cc <nextion_inst_set>
	}

	/* lower menu draw */
	nextion_inst_set("fill 0,180,480,92,WHITE");
 8001886:	4835      	ldr	r0, [pc, #212]	; (800195c <basic_screen+0x294>)
 8001888:	f7ff fc20 	bl	80010cc <nextion_inst_set>
	nextion_inst_set("line 0,180,480,180,BLACK");
 800188c:	4834      	ldr	r0, [pc, #208]	; (8001960 <basic_screen+0x298>)
 800188e:	f7ff fc1d 	bl	80010cc <nextion_inst_set>
	lower_menu_fuc[lower_menu]();
 8001892:	4b34      	ldr	r3, [pc, #208]	; (8001964 <basic_screen+0x29c>)
 8001894:	4a34      	ldr	r2, [pc, #208]	; (8001968 <basic_screen+0x2a0>)
 8001896:	781b      	ldrb	r3, [r3, #0]
 8001898:	009b      	lsls	r3, r3, #2
 800189a:	589b      	ldr	r3, [r3, r2]
 800189c:	4798      	blx	r3
}
 800189e:	b00f      	add	sp, #60	; 0x3c
 80018a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%d%cC\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data, 0xb0);
 80018a2:	4b21      	ldr	r3, [pc, #132]	; (8001928 <basic_screen+0x260>)
 80018a4:	781b      	ldrb	r3, [r3, #0]
 80018a6:	469c      	mov	ip, r3
		else if(i == sht41_hum){
 80018a8:	2d01      	cmp	r5, #1
 80018aa:	d10d      	bne.n	80018c8 <basic_screen+0x200>
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%d%%\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data);
 80018ac:	4666      	mov	r6, ip
 80018ae:	8a0a      	ldrh	r2, [r1, #16]
 80018b0:	8a4b      	ldrh	r3, [r1, #18]
 80018b2:	69cf      	ldr	r7, [r1, #28]
 80018b4:	4817      	ldr	r0, [pc, #92]	; (8001914 <basic_screen+0x24c>)
 80018b6:	2e01      	cmp	r6, #1
 80018b8:	d112      	bne.n	80018e0 <basic_screen+0x218>
 80018ba:	8b09      	ldrh	r1, [r1, #24]
 80018bc:	9700      	str	r7, [sp, #0]
 80018be:	9101      	str	r1, [sp, #4]
 80018c0:	492a      	ldr	r1, [pc, #168]	; (800196c <basic_screen+0x2a4>)
			if(power == on) sprintf(bf, "xstr %d,%d,160,30,0,BLACK,%s,1,1,1,\"%dppm\"", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color, sensor[i].data);
 80018c2:	f002 fe3d 	bl	8004540 <siprintf>
 80018c6:	e778      	b.n	80017ba <basic_screen+0xf2>
 80018c8:	4666      	mov	r6, ip
 80018ca:	8c0a      	ldrh	r2, [r1, #32]
 80018cc:	8c4b      	ldrh	r3, [r1, #34]	; 0x22
 80018ce:	6acf      	ldr	r7, [r1, #44]	; 0x2c
 80018d0:	4810      	ldr	r0, [pc, #64]	; (8001914 <basic_screen+0x24c>)
 80018d2:	2e01      	cmp	r6, #1
 80018d4:	d104      	bne.n	80018e0 <basic_screen+0x218>
 80018d6:	8d09      	ldrh	r1, [r1, #40]	; 0x28
 80018d8:	9700      	str	r7, [sp, #0]
 80018da:	9101      	str	r1, [sp, #4]
 80018dc:	4924      	ldr	r1, [pc, #144]	; (8001970 <basic_screen+0x2a8>)
 80018de:	e7f0      	b.n	80018c2 <basic_screen+0x1fa>
			else            sprintf(bf, "fill %d,%d,160,30,%s", sensor[i].area.x0, sensor[i].area.y0, sensor[i].color);
 80018e0:	4924      	ldr	r1, [pc, #144]	; (8001974 <basic_screen+0x2ac>)
 80018e2:	9700      	str	r7, [sp, #0]
 80018e4:	f002 fe2c 	bl	8004540 <siprintf>
 80018e8:	e767      	b.n	80017ba <basic_screen+0xf2>
		else                      nextion_inst_set("fill 150,61,169,118,WHITE");
 80018ea:	4823      	ldr	r0, [pc, #140]	; (8001978 <basic_screen+0x2b0>)
 80018ec:	f7ff fbee 	bl	80010cc <nextion_inst_set>
 80018f0:	e792      	b.n	8001818 <basic_screen+0x150>
	else if(*alarm == on_alarm || *alarm == off_alarm) value_put(data, alarm_display, &draw_pos);
 80018f2:	3b04      	subs	r3, #4
 80018f4:	2b01      	cmp	r3, #1
 80018f6:	d805      	bhi.n	8001904 <basic_screen+0x23c>
 80018f8:	2101      	movs	r1, #1
 80018fa:	9806      	ldr	r0, [sp, #24]
 80018fc:	aa0c      	add	r2, sp, #48	; 0x30
 80018fe:	f7ff fd0f 	bl	8001320 <value_put>
 8001902:	e78c      	b.n	800181e <basic_screen+0x156>
	else nextion_inst_set("fill 0,61,480,118,WHITE");
 8001904:	481d      	ldr	r0, [pc, #116]	; (800197c <basic_screen+0x2b4>)
 8001906:	f7ff fbe1 	bl	80010cc <nextion_inst_set>
 800190a:	e788      	b.n	800181e <basic_screen+0x156>
 800190c:	08004fb4 	.word	0x08004fb4
 8001910:	08004ead 	.word	0x08004ead
 8001914:	20000222 	.word	0x20000222
 8001918:	08004fb8 	.word	0x08004fb8
 800191c:	08004fe3 	.word	0x08004fe3
 8001920:	08005013 	.word	0x08005013
 8001924:	08005044 	.word	0x08005044
 8001928:	200003ad 	.word	0x200003ad
 800192c:	08005071 	.word	0x08005071
 8001930:	20000160 	.word	0x20000160
 8001934:	08005087 	.word	0x08005087
 8001938:	08004f9d 	.word	0x08004f9d
 800193c:	08004c30 	.word	0x08004c30
 8001940:	0800514e 	.word	0x0800514e
 8001944:	0800517c 	.word	0x0800517c
 8001948:	08005249 	.word	0x08005249
 800194c:	08005195 	.word	0x08005195
 8001950:	080051b9 	.word	0x080051b9
 8001954:	080051d4 	.word	0x080051d4
 8001958:	080051f9 	.word	0x080051f9
 800195c:	08005214 	.word	0x08005214
 8001960:	0800522c 	.word	0x0800522c
 8001964:	200003ac 	.word	0x200003ac
 8001968:	20000100 	.word	0x20000100
 800196c:	080050c7 	.word	0x080050c7
 8001970:	080050f1 	.word	0x080050f1
 8001974:	080050b2 	.word	0x080050b2
 8001978:	0800511c 	.word	0x0800511c
 800197c:	08005136 	.word	0x08005136

08001980 <task_fuc>:

/* all task function */
/* all display function is merge in this function */
void task_fuc(void){
 8001980:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t tick = 0;
	uint32_t buz_tick = 0;
	uint32_t alarm_tick = 0;

	MODE_Typedef mode      = cooling;
 8001982:	2400      	movs	r4, #0
	MODE_Typedef befo_mode = mode;

	uint8_t befo_touch = 0;

	uint8_t set_temp = 18;
 8001984:	2212      	movs	r2, #18
void task_fuc(void){
 8001986:	b089      	sub	sp, #36	; 0x24
	MODE_Typedef mode      = cooling;
 8001988:	ab04      	add	r3, sp, #16
	uint8_t wind_power = 0;

	AREA_Typedef power_area = { 180, 180, 180+130, 180+92 };
 800198a:	49cc      	ldr	r1, [pc, #816]	; (8001cbc <task_fuc+0x33c>)
	MODE_Typedef mode      = cooling;
 800198c:	701c      	strb	r4, [r3, #0]
	MODE_Typedef befo_mode = mode;
 800198e:	705c      	strb	r4, [r3, #1]
	uint8_t set_temp = 18;
 8001990:	ab04      	add	r3, sp, #16
	AREA_Typedef power_area = { 180, 180, 180+130, 180+92 };
 8001992:	3106      	adds	r1, #6
	uint8_t set_temp = 18;
 8001994:	709a      	strb	r2, [r3, #2]
	AREA_Typedef power_area = { 180, 180, 180+130, 180+92 };
 8001996:	a806      	add	r0, sp, #24
	uint8_t wind_power = 0;
 8001998:	ab04      	add	r3, sp, #16
	AREA_Typedef power_area = { 180, 180, 180+130, 180+92 };
 800199a:	3a0a      	subs	r2, #10
	uint8_t wind_power = 0;
 800199c:	70dc      	strb	r4, [r3, #3]
	AREA_Typedef power_area = { 180, 180, 180+130, 180+92 };
 800199e:	f002 fcc9 	bl	8004334 <memcpy>
	ALARM_Typedef alarm_time = { 1, 1 };
 80019a2:	aa04      	add	r2, sp, #16
 80019a4:	80d4      	strh	r4, [r2, #6]
 80019a6:	2201      	movs	r2, #1

	nextion_inst_set("cls WHITE");
 80019a8:	4dc5      	ldr	r5, [pc, #788]	; (8001cc0 <task_fuc+0x340>)
	ALARM_Typedef alarm_time = { 1, 1 };
 80019aa:	ab05      	add	r3, sp, #20
	nextion_inst_set("cls WHITE");
 80019ac:	0028      	movs	r0, r5
	ALARM_Typedef alarm_time = { 1, 1 };
 80019ae:	701a      	strb	r2, [r3, #0]
 80019b0:	705a      	strb	r2, [r3, #1]
	nextion_inst_set("cls WHITE");
 80019b2:	f7ff fb8b 	bl	80010cc <nextion_inst_set>
	nextion_inst_set("cls WHITE");
 80019b6:	0028      	movs	r0, r5
 80019b8:	f7ff fb88 	bl	80010cc <nextion_inst_set>
	nextion_inst_set("cls WHITE");
 80019bc:	0028      	movs	r0, r5
 80019be:	f7ff fb85 	bl	80010cc <nextion_inst_set>
	uint32_t alarm_tick = 0;
 80019c2:	9401      	str	r4, [sp, #4]
	uint32_t buz_tick = 0;
 80019c4:	9403      	str	r4, [sp, #12]
	uint32_t tick = 0;
 80019c6:	9402      	str	r4, [sp, #8]

	while(1){
		/* get touch coordinate */
		get_touch(&curXY);
 80019c8:	4fbe      	ldr	r7, [pc, #760]	; (8001cc4 <task_fuc+0x344>)
 80019ca:	0038      	movs	r0, r7
 80019cc:	f7ff fb9c 	bl	8001108 <get_touch>

		/* get slide state */
		get_slide(&slide_state, &curXY);
 80019d0:	0039      	movs	r1, r7
 80019d2:	48bd      	ldr	r0, [pc, #756]	; (8001cc8 <task_fuc+0x348>)
 80019d4:	f7ff fbd8 	bl	8001188 <get_slide>

		if(mode != on_alarm && mode != off_alarm) befo_mode = mode;
 80019d8:	ab04      	add	r3, sp, #16
 80019da:	781b      	ldrb	r3, [r3, #0]
 80019dc:	1f1a      	subs	r2, r3, #4
 80019de:	2a01      	cmp	r2, #1
 80019e0:	d901      	bls.n	80019e6 <task_fuc+0x66>
 80019e2:	aa04      	add	r2, sp, #16
 80019e4:	7053      	strb	r3, [r2, #1]

		/* screen update */
		if(screen_update == 0){
 80019e6:	4ab9      	ldr	r2, [pc, #740]	; (8001ccc <task_fuc+0x34c>)
 80019e8:	7812      	ldrb	r2, [r2, #0]
 80019ea:	2a00      	cmp	r2, #0
 80019ec:	d112      	bne.n	8001a14 <task_fuc+0x94>
			screen_update = 1;
 80019ee:	2101      	movs	r1, #1
 80019f0:	4ab6      	ldr	r2, [pc, #728]	; (8001ccc <task_fuc+0x34c>)
 80019f2:	7011      	strb	r1, [r2, #0]

			basic_screen(&mode, &befo_mode, mode == on_alarm ? &alarm_time.on_time : mode == off_alarm ? &alarm_time.off_time : &set_temp, &wind_power);
 80019f4:	aa05      	add	r2, sp, #20
 80019f6:	2b04      	cmp	r3, #4
 80019f8:	d005      	beq.n	8001a06 <task_fuc+0x86>
 80019fa:	aa04      	add	r2, sp, #16
 80019fc:	3205      	adds	r2, #5
 80019fe:	2b05      	cmp	r3, #5
 8001a00:	d001      	beq.n	8001a06 <task_fuc+0x86>
 8001a02:	ab04      	add	r3, sp, #16
 8001a04:	1c9a      	adds	r2, r3, #2
 8001a06:	ab04      	add	r3, sp, #16
 8001a08:	a904      	add	r1, sp, #16
 8001a0a:	3303      	adds	r3, #3
 8001a0c:	3101      	adds	r1, #1
 8001a0e:	a804      	add	r0, sp, #16
 8001a10:	f7ff fe5a 	bl	80016c8 <basic_screen>
		}

		/* when this function run if you touched lcd */
		if(curXY.touched != befo_touch && curXY.touched == 1){
 8001a14:	4eab      	ldr	r6, [pc, #684]	; (8001cc4 <task_fuc+0x344>)
 8001a16:	7935      	ldrb	r5, [r6, #4]
 8001a18:	42a5      	cmp	r5, r4
 8001a1a:	d016      	beq.n	8001a4a <task_fuc+0xca>
 8001a1c:	2d01      	cmp	r5, #1
 8001a1e:	d114      	bne.n	8001a4a <task_fuc+0xca>
			/*  */
			if(lower_menu == power_set_state){
 8001a20:	4bab      	ldr	r3, [pc, #684]	; (8001cd0 <task_fuc+0x350>)
 8001a22:	781c      	ldrb	r4, [r3, #0]
 8001a24:	2c00      	cmp	r4, #0
 8001a26:	d000      	beq.n	8001a2a <task_fuc+0xaa>
 8001a28:	e09f      	b.n	8001b6a <task_fuc+0x1ea>
				if(area_check(&curXY, &power_area)){
 8001a2a:	0030      	movs	r0, r6
 8001a2c:	a906      	add	r1, sp, #24
 8001a2e:	f7ff fbd5 	bl	80011dc <area_check>
 8001a32:	2800      	cmp	r0, #0
 8001a34:	d07a      	beq.n	8001b2c <task_fuc+0x1ac>
					screen_update = 0;
 8001a36:	4ba5      	ldr	r3, [pc, #660]	; (8001ccc <task_fuc+0x34c>)
					power = power == off ? on : off;
 8001a38:	4aa6      	ldr	r2, [pc, #664]	; (8001cd4 <task_fuc+0x354>)
					screen_update = 0;
 8001a3a:	701c      	strb	r4, [r3, #0]
					power = power == off ? on : off;
 8001a3c:	7813      	ldrb	r3, [r2, #0]
 8001a3e:	4259      	negs	r1, r3
 8001a40:	414b      	adcs	r3, r1
 8001a42:	7013      	strb	r3, [r2, #0]
					mode = cooling;
 8001a44:	ab04      	add	r3, sp, #16
 8001a46:	701c      	strb	r4, [r3, #0]
					wind_power = 0;
 8001a48:	70dc      	strb	r4, [r3, #3]
				}
			}
		}

		/* slide function */
		if(slide_state == up_slide){
 8001a4a:	4b9f      	ldr	r3, [pc, #636]	; (8001cc8 <task_fuc+0x348>)
 8001a4c:	781b      	ldrb	r3, [r3, #0]
 8001a4e:	2b01      	cmp	r3, #1
 8001a50:	d000      	beq.n	8001a54 <task_fuc+0xd4>
 8001a52:	e117      	b.n	8001c84 <task_fuc+0x304>
			screen_update = 0;
 8001a54:	2300      	movs	r3, #0
 8001a56:	4a9d      	ldr	r2, [pc, #628]	; (8001ccc <task_fuc+0x34c>)

			lower_menu = lower_menu == alarm_set_state ? power_set_state : lower_menu + 1;
 8001a58:	499d      	ldr	r1, [pc, #628]	; (8001cd0 <task_fuc+0x350>)
			screen_update = 0;
 8001a5a:	7013      	strb	r3, [r2, #0]
			lower_menu = lower_menu == alarm_set_state ? power_set_state : lower_menu + 1;
 8001a5c:	780a      	ldrb	r2, [r1, #0]
 8001a5e:	2a02      	cmp	r2, #2
 8001a60:	d001      	beq.n	8001a66 <task_fuc+0xe6>
 8001a62:	3201      	adds	r2, #1
		}
		else if(slide_state == down_slide){
			screen_update = 0;

			lower_menu = lower_menu == power_set_state ? alarm_set_state : lower_menu - 1;
 8001a64:	b2d3      	uxtb	r3, r2
 8001a66:	700b      	strb	r3, [r1, #0]
		}

		/* run motor function */
		if(power == on){
 8001a68:	4c9a      	ldr	r4, [pc, #616]	; (8001cd4 <task_fuc+0x354>)
			if(mode == cooling){
 8001a6a:	ab04      	add	r3, sp, #16
		if(power == on){
 8001a6c:	7822      	ldrb	r2, [r4, #0]
 8001a6e:	2a01      	cmp	r2, #1
 8001a70:	d000      	beq.n	8001a74 <task_fuc+0xf4>
 8001a72:	e16d      	b.n	8001d50 <task_fuc+0x3d0>
			if(mode == cooling){
 8001a74:	7819      	ldrb	r1, [r3, #0]
 8001a76:	2900      	cmp	r1, #0
 8001a78:	d000      	beq.n	8001a7c <task_fuc+0xfc>
 8001a7a:	e110      	b.n	8001c9e <task_fuc+0x31e>
				if(sensor[sht41_temp].data > set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
 8001a7c:	3303      	adds	r3, #3
 8001a7e:	781b      	ldrb	r3, [r3, #0]
 8001a80:	4a95      	ldr	r2, [pc, #596]	; (8001cd8 <task_fuc+0x358>)
 8001a82:	5cd0      	ldrb	r0, [r2, r3]
 8001a84:	4b95      	ldr	r3, [pc, #596]	; (8001cdc <task_fuc+0x35c>)
 8001a86:	891a      	ldrh	r2, [r3, #8]
 8001a88:	ab04      	add	r3, sp, #16
 8001a8a:	3302      	adds	r3, #2
 8001a8c:	781b      	ldrb	r3, [r3, #0]
 8001a8e:	429a      	cmp	r2, r3
 8001a90:	d900      	bls.n	8001a94 <task_fuc+0x114>
 8001a92:	3101      	adds	r1, #1
			else if(mode == heating){
				if(sensor[sht41_temp].data < set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
				else                                   motor_set(motor_power[wind_power], DRV8830_STOP);
			}
		}
		else motor_set(motor_power[wind_power], DRV8830_STOP);
 8001a94:	f7ff fad8 	bl	8001048 <motor_set>

		/* using time function */
		if(HAL_GetTick() - tick >= 500){
 8001a98:	f000 fc40 	bl	800231c <HAL_GetTick>
 8001a9c:	9b02      	ldr	r3, [sp, #8]
 8001a9e:	1ac0      	subs	r0, r0, r3
 8001aa0:	23fa      	movs	r3, #250	; 0xfa
 8001aa2:	005b      	lsls	r3, r3, #1
 8001aa4:	4298      	cmp	r0, r3
 8001aa6:	d305      	bcc.n	8001ab4 <task_fuc+0x134>
			tick = HAL_GetTick();
 8001aa8:	f000 fc38 	bl	800231c <HAL_GetTick>
			screen_update = 0;
 8001aac:	2200      	movs	r2, #0
 8001aae:	4b87      	ldr	r3, [pc, #540]	; (8001ccc <task_fuc+0x34c>)
			tick = HAL_GetTick();
 8001ab0:	9002      	str	r0, [sp, #8]
			screen_update = 0;
 8001ab2:	701a      	strb	r2, [r3, #0]
		}

		if(buzM == 1){
 8001ab4:	4d8a      	ldr	r5, [pc, #552]	; (8001ce0 <task_fuc+0x360>)
 8001ab6:	782b      	ldrb	r3, [r5, #0]
 8001ab8:	2b01      	cmp	r3, #1
 8001aba:	d000      	beq.n	8001abe <task_fuc+0x13e>
 8001abc:	e153      	b.n	8001d66 <task_fuc+0x3e6>
			if(HAL_GetTick() - buz_tick < 100){
 8001abe:	f000 fc2d 	bl	800231c <HAL_GetTick>
 8001ac2:	9b03      	ldr	r3, [sp, #12]
 8001ac4:	1ac0      	subs	r0, r0, r3
 8001ac6:	2863      	cmp	r0, #99	; 0x63
 8001ac8:	d900      	bls.n	8001acc <task_fuc+0x14c>
 8001aca:	e146      	b.n	8001d5a <task_fuc+0x3da>
				BUZ(buz_state);
 8001acc:	4b85      	ldr	r3, [pc, #532]	; (8001ce4 <task_fuc+0x364>)
 8001ace:	7818      	ldrb	r0, [r3, #0]
 8001ad0:	f7ff face 	bl	8001070 <BUZ>
			}
			else { BUZ(0); buzM = 0; }
		}
		else buz_tick = HAL_GetTick();

		if(mode != on_alarm && mode != off_alarm){
 8001ad4:	ab04      	add	r3, sp, #16
 8001ad6:	781b      	ldrb	r3, [r3, #0]
 8001ad8:	3b04      	subs	r3, #4
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d800      	bhi.n	8001ae0 <task_fuc+0x160>
 8001ade:	e152      	b.n	8001d86 <task_fuc+0x406>
			if(HAL_GetTick() - alarm_tick > 1000){
 8001ae0:	f000 fc1c 	bl	800231c <HAL_GetTick>
 8001ae4:	9b01      	ldr	r3, [sp, #4]
 8001ae6:	1ac0      	subs	r0, r0, r3
 8001ae8:	23fa      	movs	r3, #250	; 0xfa
 8001aea:	009b      	lsls	r3, r3, #2
 8001aec:	4298      	cmp	r0, r3
 8001aee:	d91a      	bls.n	8001b26 <task_fuc+0x1a6>
				alarm_tick = HAL_GetTick();
 8001af0:	f000 fc14 	bl	800231c <HAL_GetTick>

				alarm_time.on_time  = alarm_time.on_time  > 0 ? alarm_time.on_time  - 1 : alarm_time.on_time;
 8001af4:	a905      	add	r1, sp, #20
 8001af6:	780a      	ldrb	r2, [r1, #0]
				alarm_tick = HAL_GetTick();
 8001af8:	9001      	str	r0, [sp, #4]
				alarm_time.on_time  = alarm_time.on_time  > 0 ? alarm_time.on_time  - 1 : alarm_time.on_time;
 8001afa:	2a00      	cmp	r2, #0
 8001afc:	d001      	beq.n	8001b02 <task_fuc+0x182>
 8001afe:	3a01      	subs	r2, #1
 8001b00:	b2d2      	uxtb	r2, r2
				alarm_time.off_time = alarm_time.off_time > 0 ? alarm_time.off_time - 1 : alarm_time.off_time;
 8001b02:	784b      	ldrb	r3, [r1, #1]
				alarm_time.on_time  = alarm_time.on_time  > 0 ? alarm_time.on_time  - 1 : alarm_time.on_time;
 8001b04:	700a      	strb	r2, [r1, #0]
				alarm_time.off_time = alarm_time.off_time > 0 ? alarm_time.off_time - 1 : alarm_time.off_time;
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d001      	beq.n	8001b0e <task_fuc+0x18e>
 8001b0a:	3b01      	subs	r3, #1
 8001b0c:	b2db      	uxtb	r3, r3
 8001b0e:	704b      	strb	r3, [r1, #1]

				if(alarm_time.on_time == 0 && alarm_time.alarm_on_f == 1)        { power = on;  alarm_time.alarm_on_f  = 0; screen_update = 0; }
 8001b10:	2a00      	cmp	r2, #0
 8001b12:	d000      	beq.n	8001b16 <task_fuc+0x196>
 8001b14:	e12b      	b.n	8001d6e <task_fuc+0x3ee>
 8001b16:	7888      	ldrb	r0, [r1, #2]
 8001b18:	2801      	cmp	r0, #1
 8001b1a:	d000      	beq.n	8001b1e <task_fuc+0x19e>
 8001b1c:	e127      	b.n	8001d6e <task_fuc+0x3ee>
 8001b1e:	4b6b      	ldr	r3, [pc, #428]	; (8001ccc <task_fuc+0x34c>)
 8001b20:	7020      	strb	r0, [r4, #0]
 8001b22:	708a      	strb	r2, [r1, #2]
 8001b24:	701a      	strb	r2, [r3, #0]
				else if(alarm_time.off_time == 0 && alarm_time.alarm_off_f == 1) { power = off; alarm_time.alarm_off_f = 0; screen_update = 0; }
			}
		}
		else alarm_tick = HAL_GetTick();

		befo_touch = curXY.touched;
 8001b26:	4b67      	ldr	r3, [pc, #412]	; (8001cc4 <task_fuc+0x344>)
 8001b28:	791c      	ldrb	r4, [r3, #4]
		get_touch(&curXY);
 8001b2a:	e74d      	b.n	80019c8 <task_fuc+0x48>
				else if(area_check(&curXY, &button[buz_button].area)){
 8001b2c:	0030      	movs	r0, r6
 8001b2e:	496e      	ldr	r1, [pc, #440]	; (8001ce8 <task_fuc+0x368>)
 8001b30:	f7ff fb54 	bl	80011dc <area_check>
 8001b34:	1e04      	subs	r4, r0, #0
 8001b36:	d006      	beq.n	8001b46 <task_fuc+0x1c6>
					buz_state = buz_state == buz_on ? buz_off : buz_on;
 8001b38:	4a6a      	ldr	r2, [pc, #424]	; (8001ce4 <task_fuc+0x364>)
 8001b3a:	7813      	ldrb	r3, [r2, #0]
 8001b3c:	3b01      	subs	r3, #1
 8001b3e:	1e59      	subs	r1, r3, #1
 8001b40:	418b      	sbcs	r3, r1
					mode = befo_mode;
 8001b42:	7013      	strb	r3, [r2, #0]
 8001b44:	e781      	b.n	8001a4a <task_fuc+0xca>
				else if(area_check(&curXY, &button[select_button].area)){
 8001b46:	0030      	movs	r0, r6
 8001b48:	4968      	ldr	r1, [pc, #416]	; (8001cec <task_fuc+0x36c>)
 8001b4a:	f7ff fb47 	bl	80011dc <area_check>
 8001b4e:	2800      	cmp	r0, #0
 8001b50:	d100      	bne.n	8001b54 <task_fuc+0x1d4>
 8001b52:	e77a      	b.n	8001a4a <task_fuc+0xca>
					screen_update = 0;
 8001b54:	4b5d      	ldr	r3, [pc, #372]	; (8001ccc <task_fuc+0x34c>)
 8001b56:	701c      	strb	r4, [r3, #0]
					mode = mode == heating ? 0 : mode + 1;
 8001b58:	ab04      	add	r3, sp, #16
 8001b5a:	7818      	ldrb	r0, [r3, #0]
 8001b5c:	2803      	cmp	r0, #3
 8001b5e:	d001      	beq.n	8001b64 <task_fuc+0x1e4>
 8001b60:	3001      	adds	r0, #1
 8001b62:	b2c4      	uxtb	r4, r0
 8001b64:	ab04      	add	r3, sp, #16
 8001b66:	701c      	strb	r4, [r3, #0]
 8001b68:	e76f      	b.n	8001a4a <task_fuc+0xca>
			else if(lower_menu == temp_set_state){
 8001b6a:	2c01      	cmp	r4, #1
 8001b6c:	d140      	bne.n	8001bf0 <task_fuc+0x270>
				if(area_check(&curXY, &button[temp_button].left_area)){
 8001b6e:	0030      	movs	r0, r6
 8001b70:	495f      	ldr	r1, [pc, #380]	; (8001cf0 <task_fuc+0x370>)
 8001b72:	f7ff fb33 	bl	80011dc <area_check>
 8001b76:	1e04      	subs	r4, r0, #0
 8001b78:	d01a      	beq.n	8001bb0 <task_fuc+0x230>
					screen_update = 0;
 8001b7a:	2200      	movs	r2, #0
 8001b7c:	4b53      	ldr	r3, [pc, #332]	; (8001ccc <task_fuc+0x34c>)
 8001b7e:	701a      	strb	r2, [r3, #0]
					if(set_temp > 18) set_temp--;
 8001b80:	ab04      	add	r3, sp, #16
 8001b82:	1c9a      	adds	r2, r3, #2
 8001b84:	789b      	ldrb	r3, [r3, #2]
 8001b86:	2b12      	cmp	r3, #18
 8001b88:	d901      	bls.n	8001b8e <task_fuc+0x20e>
 8001b8a:	3b01      	subs	r3, #1
					if(set_temp < 30) set_temp++;
 8001b8c:	7013      	strb	r3, [r2, #0]
				if(area_check(&curXY, &button[wind_button].left_area)){
 8001b8e:	0038      	movs	r0, r7
 8001b90:	4958      	ldr	r1, [pc, #352]	; (8001cf4 <task_fuc+0x374>)
 8001b92:	f7ff fb23 	bl	80011dc <area_check>
 8001b96:	1e04      	subs	r4, r0, #0
 8001b98:	d019      	beq.n	8001bce <task_fuc+0x24e>
					screen_update = 0;
 8001b9a:	2200      	movs	r2, #0
 8001b9c:	4b4b      	ldr	r3, [pc, #300]	; (8001ccc <task_fuc+0x34c>)
 8001b9e:	701a      	strb	r2, [r3, #0]
					if(wind_power > 0) wind_power--;
 8001ba0:	ab04      	add	r3, sp, #16
 8001ba2:	1cda      	adds	r2, r3, #3
 8001ba4:	78db      	ldrb	r3, [r3, #3]
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d100      	bne.n	8001bac <task_fuc+0x22c>
 8001baa:	e74e      	b.n	8001a4a <task_fuc+0xca>
 8001bac:	3b01      	subs	r3, #1
 8001bae:	e7c8      	b.n	8001b42 <task_fuc+0x1c2>
				else if(area_check(&curXY, &button[temp_button].right_area)){
 8001bb0:	0030      	movs	r0, r6
 8001bb2:	4951      	ldr	r1, [pc, #324]	; (8001cf8 <task_fuc+0x378>)
 8001bb4:	f7ff fb12 	bl	80011dc <area_check>
 8001bb8:	2800      	cmp	r0, #0
 8001bba:	d0e8      	beq.n	8001b8e <task_fuc+0x20e>
					screen_update = 0;
 8001bbc:	4b43      	ldr	r3, [pc, #268]	; (8001ccc <task_fuc+0x34c>)
 8001bbe:	701c      	strb	r4, [r3, #0]
					if(set_temp < 30) set_temp++;
 8001bc0:	ab04      	add	r3, sp, #16
 8001bc2:	1c9a      	adds	r2, r3, #2
 8001bc4:	789b      	ldrb	r3, [r3, #2]
 8001bc6:	2b1d      	cmp	r3, #29
 8001bc8:	d8e1      	bhi.n	8001b8e <task_fuc+0x20e>
 8001bca:	3301      	adds	r3, #1
 8001bcc:	e7de      	b.n	8001b8c <task_fuc+0x20c>
				else if(area_check(&curXY, &button[wind_button].right_area)){
 8001bce:	0038      	movs	r0, r7
 8001bd0:	494a      	ldr	r1, [pc, #296]	; (8001cfc <task_fuc+0x37c>)
 8001bd2:	f7ff fb03 	bl	80011dc <area_check>
 8001bd6:	2800      	cmp	r0, #0
 8001bd8:	d100      	bne.n	8001bdc <task_fuc+0x25c>
 8001bda:	e736      	b.n	8001a4a <task_fuc+0xca>
					screen_update = 0;
 8001bdc:	4b3b      	ldr	r3, [pc, #236]	; (8001ccc <task_fuc+0x34c>)
 8001bde:	701c      	strb	r4, [r3, #0]
					if(wind_power < 4) wind_power++;
 8001be0:	ab04      	add	r3, sp, #16
 8001be2:	1cda      	adds	r2, r3, #3
 8001be4:	78db      	ldrb	r3, [r3, #3]
 8001be6:	2b03      	cmp	r3, #3
 8001be8:	d900      	bls.n	8001bec <task_fuc+0x26c>
 8001bea:	e72e      	b.n	8001a4a <task_fuc+0xca>
 8001bec:	3301      	adds	r3, #1
 8001bee:	e7a8      	b.n	8001b42 <task_fuc+0x1c2>
			else if(lower_menu == alarm_set_state){
 8001bf0:	2c02      	cmp	r4, #2
 8001bf2:	d000      	beq.n	8001bf6 <task_fuc+0x276>
 8001bf4:	e729      	b.n	8001a4a <task_fuc+0xca>
				if(area_check(&curXY, &button[alarm_on_button].area)){
 8001bf6:	0030      	movs	r0, r6
 8001bf8:	4941      	ldr	r1, [pc, #260]	; (8001d00 <task_fuc+0x380>)
 8001bfa:	f7ff faef 	bl	80011dc <area_check>
 8001bfe:	1e07      	subs	r7, r0, #0
 8001c00:	d016      	beq.n	8001c30 <task_fuc+0x2b0>
					screen_update = 0;
 8001c02:	2200      	movs	r2, #0
 8001c04:	4b31      	ldr	r3, [pc, #196]	; (8001ccc <task_fuc+0x34c>)
 8001c06:	701a      	strb	r2, [r3, #0]
					if(mode != on_alarm) {
 8001c08:	ab04      	add	r3, sp, #16
 8001c0a:	781a      	ldrb	r2, [r3, #0]
 8001c0c:	ab05      	add	r3, sp, #20
 8001c0e:	2a04      	cmp	r2, #4
 8001c10:	d007      	beq.n	8001c22 <task_fuc+0x2a2>
						if(alarm_time.alarm_on_f == 0) { alarm_time.alarm_on_f = 1; alarm_time.on_time = 1; }
 8001c12:	789a      	ldrb	r2, [r3, #2]
 8001c14:	2a00      	cmp	r2, #0
 8001c16:	d101      	bne.n	8001c1c <task_fuc+0x29c>
 8001c18:	709d      	strb	r5, [r3, #2]
 8001c1a:	701d      	strb	r5, [r3, #0]
						mode = on_alarm;
 8001c1c:	2304      	movs	r3, #4
					mode = befo_mode;
 8001c1e:	aa04      	add	r2, sp, #16
 8001c20:	e78f      	b.n	8001b42 <task_fuc+0x1c2>
						alarm_time.on_time = alarm_time.on_time < 20 ? alarm_time.on_time + 1 : 1;
 8001c22:	781a      	ldrb	r2, [r3, #0]
 8001c24:	2a13      	cmp	r2, #19
 8001c26:	d801      	bhi.n	8001c2c <task_fuc+0x2ac>
 8001c28:	3201      	adds	r2, #1
 8001c2a:	b2d5      	uxtb	r5, r2
 8001c2c:	701d      	strb	r5, [r3, #0]
 8001c2e:	e70c      	b.n	8001a4a <task_fuc+0xca>
				else if(area_check(&curXY, &button[alarm_off_button].area)){
 8001c30:	0030      	movs	r0, r6
 8001c32:	4934      	ldr	r1, [pc, #208]	; (8001d04 <task_fuc+0x384>)
 8001c34:	f7ff fad2 	bl	80011dc <area_check>
 8001c38:	1e04      	subs	r4, r0, #0
 8001c3a:	d016      	beq.n	8001c6a <task_fuc+0x2ea>
					screen_update = 0;
 8001c3c:	4b23      	ldr	r3, [pc, #140]	; (8001ccc <task_fuc+0x34c>)
 8001c3e:	701f      	strb	r7, [r3, #0]
					if(mode != off_alarm) {
 8001c40:	ab04      	add	r3, sp, #16
 8001c42:	781a      	ldrb	r2, [r3, #0]
 8001c44:	ab05      	add	r3, sp, #20
 8001c46:	2a05      	cmp	r2, #5
 8001c48:	d008      	beq.n	8001c5c <task_fuc+0x2dc>
						if(alarm_time.alarm_off_f == 0) { alarm_time.alarm_off_f = 1; alarm_time.off_time = 1; }
 8001c4a:	78da      	ldrb	r2, [r3, #3]
 8001c4c:	2a00      	cmp	r2, #0
 8001c4e:	d101      	bne.n	8001c54 <task_fuc+0x2d4>
 8001c50:	70dd      	strb	r5, [r3, #3]
 8001c52:	705d      	strb	r5, [r3, #1]
						mode = off_alarm;
 8001c54:	2205      	movs	r2, #5
 8001c56:	ab04      	add	r3, sp, #16
 8001c58:	701a      	strb	r2, [r3, #0]
 8001c5a:	e6f6      	b.n	8001a4a <task_fuc+0xca>
						alarm_time.off_time = alarm_time.off_time < 20 ? alarm_time.off_time + 1 : 1;
 8001c5c:	785a      	ldrb	r2, [r3, #1]
 8001c5e:	2a13      	cmp	r2, #19
 8001c60:	d801      	bhi.n	8001c66 <task_fuc+0x2e6>
 8001c62:	3201      	adds	r2, #1
 8001c64:	b2d5      	uxtb	r5, r2
 8001c66:	705d      	strb	r5, [r3, #1]
 8001c68:	e6ef      	b.n	8001a4a <task_fuc+0xca>
				else if(area_check(&curXY, &button[alarm_ok_button].area)){
 8001c6a:	0030      	movs	r0, r6
 8001c6c:	4926      	ldr	r1, [pc, #152]	; (8001d08 <task_fuc+0x388>)
 8001c6e:	f7ff fab5 	bl	80011dc <area_check>
 8001c72:	2800      	cmp	r0, #0
 8001c74:	d100      	bne.n	8001c78 <task_fuc+0x2f8>
 8001c76:	e6e8      	b.n	8001a4a <task_fuc+0xca>
					screen_update = 0;
 8001c78:	4b14      	ldr	r3, [pc, #80]	; (8001ccc <task_fuc+0x34c>)
 8001c7a:	701c      	strb	r4, [r3, #0]
					mode = befo_mode;
 8001c7c:	ab04      	add	r3, sp, #16
 8001c7e:	3301      	adds	r3, #1
 8001c80:	781b      	ldrb	r3, [r3, #0]
 8001c82:	e7cc      	b.n	8001c1e <task_fuc+0x29e>
		else if(slide_state == down_slide){
 8001c84:	2b02      	cmp	r3, #2
 8001c86:	d000      	beq.n	8001c8a <task_fuc+0x30a>
 8001c88:	e6ee      	b.n	8001a68 <task_fuc+0xe8>
			screen_update = 0;
 8001c8a:	2100      	movs	r1, #0
 8001c8c:	4a0f      	ldr	r2, [pc, #60]	; (8001ccc <task_fuc+0x34c>)
 8001c8e:	7011      	strb	r1, [r2, #0]
			lower_menu = lower_menu == power_set_state ? alarm_set_state : lower_menu - 1;
 8001c90:	490f      	ldr	r1, [pc, #60]	; (8001cd0 <task_fuc+0x350>)
 8001c92:	780a      	ldrb	r2, [r1, #0]
 8001c94:	2a00      	cmp	r2, #0
 8001c96:	d100      	bne.n	8001c9a <task_fuc+0x31a>
 8001c98:	e6e5      	b.n	8001a66 <task_fuc+0xe6>
 8001c9a:	3a01      	subs	r2, #1
 8001c9c:	e6e2      	b.n	8001a64 <task_fuc+0xe4>
			else if(mode == dehumidity){
 8001c9e:	2901      	cmp	r1, #1
 8001ca0:	d134      	bne.n	8001d0c <task_fuc+0x38c>
				if(sensor[sht41_temp].data > set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
 8001ca2:	ab04      	add	r3, sp, #16
 8001ca4:	3303      	adds	r3, #3
 8001ca6:	781b      	ldrb	r3, [r3, #0]
 8001ca8:	4a0b      	ldr	r2, [pc, #44]	; (8001cd8 <task_fuc+0x358>)
 8001caa:	5cd0      	ldrb	r0, [r2, r3]
				if(sensor[sht41_hum].data >= 70) motor_set(motor_power[wind_power], DRV8830_CW);
 8001cac:	4b0b      	ldr	r3, [pc, #44]	; (8001cdc <task_fuc+0x35c>)
 8001cae:	8b1b      	ldrh	r3, [r3, #24]
 8001cb0:	2b45      	cmp	r3, #69	; 0x45
 8001cb2:	d900      	bls.n	8001cb6 <task_fuc+0x336>
 8001cb4:	e6ee      	b.n	8001a94 <task_fuc+0x114>
		else motor_set(motor_power[wind_power], DRV8830_STOP);
 8001cb6:	2100      	movs	r1, #0
 8001cb8:	e6ec      	b.n	8001a94 <task_fuc+0x114>
 8001cba:	46c0      	nop			; (mov r8, r8)
 8001cbc:	08004c30 	.word	0x08004c30
 8001cc0:	08005245 	.word	0x08005245
 8001cc4:	20000288 	.word	0x20000288
 8001cc8:	200003af 	.word	0x200003af
 8001ccc:	200003ae 	.word	0x200003ae
 8001cd0:	200003ac 	.word	0x200003ac
 8001cd4:	200003ad 	.word	0x200003ad
 8001cd8:	2000010c 	.word	0x2000010c
 8001cdc:	20000160 	.word	0x20000160
 8001ce0:	20000286 	.word	0x20000286
 8001ce4:	200000fc 	.word	0x200000fc
 8001ce8:	20000000 	.word	0x20000000
 8001cec:	20000024 	.word	0x20000024
 8001cf0:	20000050 	.word	0x20000050
 8001cf4:	20000074 	.word	0x20000074
 8001cf8:	20000058 	.word	0x20000058
 8001cfc:	2000007c 	.word	0x2000007c
 8001d00:	20000090 	.word	0x20000090
 8001d04:	200000b4 	.word	0x200000b4
 8001d08:	200000d8 	.word	0x200000d8
			else if(mode == ventilation){
 8001d0c:	2902      	cmp	r1, #2
 8001d0e:	d10d      	bne.n	8001d2c <task_fuc+0x3ac>
				if(wind_power != 1) { wind_power = 1; screen_update = 0; }
 8001d10:	ab04      	add	r3, sp, #16
 8001d12:	78d9      	ldrb	r1, [r3, #3]
 8001d14:	3303      	adds	r3, #3
 8001d16:	2901      	cmp	r1, #1
 8001d18:	d003      	beq.n	8001d22 <task_fuc+0x3a2>
 8001d1a:	2100      	movs	r1, #0
 8001d1c:	701a      	strb	r2, [r3, #0]
 8001d1e:	4a1c      	ldr	r2, [pc, #112]	; (8001d90 <task_fuc+0x410>)
 8001d20:	7011      	strb	r1, [r2, #0]
				motor_set(motor_power[wind_power], DRV8830_CW);
 8001d22:	781b      	ldrb	r3, [r3, #0]
 8001d24:	4a1b      	ldr	r2, [pc, #108]	; (8001d94 <task_fuc+0x414>)
 8001d26:	2101      	movs	r1, #1
 8001d28:	5cd0      	ldrb	r0, [r2, r3]
 8001d2a:	e6b3      	b.n	8001a94 <task_fuc+0x114>
			else if(mode == heating){
 8001d2c:	2903      	cmp	r1, #3
 8001d2e:	d000      	beq.n	8001d32 <task_fuc+0x3b2>
 8001d30:	e6b2      	b.n	8001a98 <task_fuc+0x118>
				if(sensor[sht41_temp].data > set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
 8001d32:	ab04      	add	r3, sp, #16
 8001d34:	3303      	adds	r3, #3
 8001d36:	781b      	ldrb	r3, [r3, #0]
 8001d38:	4a16      	ldr	r2, [pc, #88]	; (8001d94 <task_fuc+0x414>)
				if(sensor[sht41_temp].data < set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
 8001d3a:	3902      	subs	r1, #2
				if(sensor[sht41_temp].data > set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
 8001d3c:	5cd0      	ldrb	r0, [r2, r3]
				if(sensor[sht41_temp].data < set_temp) motor_set(motor_power[wind_power], DRV8830_CW);
 8001d3e:	4b16      	ldr	r3, [pc, #88]	; (8001d98 <task_fuc+0x418>)
 8001d40:	891a      	ldrh	r2, [r3, #8]
 8001d42:	ab04      	add	r3, sp, #16
 8001d44:	3302      	adds	r3, #2
 8001d46:	781b      	ldrb	r3, [r3, #0]
 8001d48:	429a      	cmp	r2, r3
 8001d4a:	d200      	bcs.n	8001d4e <task_fuc+0x3ce>
 8001d4c:	e6a2      	b.n	8001a94 <task_fuc+0x114>
 8001d4e:	e7b2      	b.n	8001cb6 <task_fuc+0x336>
		else motor_set(motor_power[wind_power], DRV8830_STOP);
 8001d50:	3303      	adds	r3, #3
 8001d52:	781b      	ldrb	r3, [r3, #0]
 8001d54:	4a0f      	ldr	r2, [pc, #60]	; (8001d94 <task_fuc+0x414>)
 8001d56:	5cd0      	ldrb	r0, [r2, r3]
 8001d58:	e7ad      	b.n	8001cb6 <task_fuc+0x336>
			else { BUZ(0); buzM = 0; }
 8001d5a:	2000      	movs	r0, #0
 8001d5c:	f7ff f988 	bl	8001070 <BUZ>
 8001d60:	2300      	movs	r3, #0
 8001d62:	702b      	strb	r3, [r5, #0]
 8001d64:	e6b6      	b.n	8001ad4 <task_fuc+0x154>
		else buz_tick = HAL_GetTick();
 8001d66:	f000 fad9 	bl	800231c <HAL_GetTick>
 8001d6a:	9003      	str	r0, [sp, #12]
 8001d6c:	e6b2      	b.n	8001ad4 <task_fuc+0x154>
				else if(alarm_time.off_time == 0 && alarm_time.alarm_off_f == 1) { power = off; alarm_time.alarm_off_f = 0; screen_update = 0; }
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	d000      	beq.n	8001d74 <task_fuc+0x3f4>
 8001d72:	e6d8      	b.n	8001b26 <task_fuc+0x1a6>
 8001d74:	78ca      	ldrb	r2, [r1, #3]
 8001d76:	2a01      	cmp	r2, #1
 8001d78:	d000      	beq.n	8001d7c <task_fuc+0x3fc>
 8001d7a:	e6d4      	b.n	8001b26 <task_fuc+0x1a6>
 8001d7c:	4a04      	ldr	r2, [pc, #16]	; (8001d90 <task_fuc+0x410>)
 8001d7e:	7023      	strb	r3, [r4, #0]
 8001d80:	70cb      	strb	r3, [r1, #3]
 8001d82:	7013      	strb	r3, [r2, #0]
 8001d84:	e6cf      	b.n	8001b26 <task_fuc+0x1a6>
		else alarm_tick = HAL_GetTick();
 8001d86:	f000 fac9 	bl	800231c <HAL_GetTick>
 8001d8a:	9001      	str	r0, [sp, #4]
 8001d8c:	e6cb      	b.n	8001b26 <task_fuc+0x1a6>
 8001d8e:	46c0      	nop			; (mov r8, r8)
 8001d90:	200003ae 	.word	0x200003ae
 8001d94:	2000010c 	.word	0x2000010c
 8001d98:	20000160 	.word	0x20000160

08001d9c <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8001d9c:	b510      	push	{r4, lr}
 8001d9e:	b09c      	sub	sp, #112	; 0x70
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001da0:	2224      	movs	r2, #36	; 0x24
 8001da2:	2100      	movs	r1, #0
 8001da4:	a80f      	add	r0, sp, #60	; 0x3c
 8001da6:	f002 face 	bl	8004346 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001daa:	2214      	movs	r2, #20
 8001dac:	2100      	movs	r1, #0
 8001dae:	a801      	add	r0, sp, #4
 8001db0:	f002 fac9 	bl	8004346 <memset>
	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001db4:	2220      	movs	r2, #32
 8001db6:	2100      	movs	r1, #0
 8001db8:	a806      	add	r0, sp, #24
 8001dba:	f002 fac4 	bl	8004346 <memset>

	/** Configure the main internal regulator output voltage
	 */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001dbe:	491d      	ldr	r1, [pc, #116]	; (8001e34 <SystemClock_Config+0x98>)
 8001dc0:	4a1d      	ldr	r2, [pc, #116]	; (8001e38 <SystemClock_Config+0x9c>)
 8001dc2:	680b      	ldr	r3, [r1, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001dc4:	2401      	movs	r4, #1
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001dc6:	401a      	ands	r2, r3
 8001dc8:	2380      	movs	r3, #128	; 0x80
 8001dca:	011b      	lsls	r3, r3, #4
 8001dcc:	4313      	orrs	r3, r2
 8001dce:	600b      	str	r3, [r1, #0]
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001dd0:	2302      	movs	r3, #2
 8001dd2:	930e      	str	r3, [sp, #56]	; 0x38
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001dd4:	9318      	str	r3, [sp, #96]	; 0x60
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	9319      	str	r3, [sp, #100]	; 0x64
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 8001dda:	2380      	movs	r3, #128	; 0x80
 8001ddc:	02db      	lsls	r3, r3, #11
 8001dde:	931a      	str	r3, [sp, #104]	; 0x68
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001de0:	2380      	movs	r3, #128	; 0x80
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001de2:	2210      	movs	r2, #16
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001de4:	03db      	lsls	r3, r3, #15
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001de6:	a80e      	add	r0, sp, #56	; 0x38
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001de8:	9411      	str	r4, [sp, #68]	; 0x44
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001dea:	9212      	str	r2, [sp, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8001dec:	931b      	str	r3, [sp, #108]	; 0x6c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001dee:	f001 f905 	bl	8002ffc <HAL_RCC_OscConfig>
 8001df2:	2800      	cmp	r0, #0
 8001df4:	d001      	beq.n	8001dfa <SystemClock_Config+0x5e>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001df6:	b672      	cpsid	i
void Error_Handler(void)
{
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001df8:	e7fe      	b.n	8001df8 <SystemClock_Config+0x5c>
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001dfa:	230f      	movs	r3, #15
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001dfc:	9003      	str	r0, [sp, #12]
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001dfe:	9301      	str	r3, [sp, #4]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001e00:	9004      	str	r0, [sp, #16]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e02:	3b0c      	subs	r3, #12
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001e04:	9005      	str	r0, [sp, #20]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001e06:	0021      	movs	r1, r4
 8001e08:	a801      	add	r0, sp, #4
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e0a:	9302      	str	r3, [sp, #8]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001e0c:	f001 fb78 	bl	8003500 <HAL_RCC_ClockConfig>
 8001e10:	2800      	cmp	r0, #0
 8001e12:	d001      	beq.n	8001e18 <SystemClock_Config+0x7c>
 8001e14:	b672      	cpsid	i
	while (1)
 8001e16:	e7fe      	b.n	8001e16 <SystemClock_Config+0x7a>
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 8001e18:	2309      	movs	r3, #9
	PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8001e1a:	9008      	str	r0, [sp, #32]
	PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8001e1c:	900b      	str	r0, [sp, #44]	; 0x2c
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001e1e:	a806      	add	r0, sp, #24
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 8001e20:	9306      	str	r3, [sp, #24]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001e22:	f001 fc5b 	bl	80036dc <HAL_RCCEx_PeriphCLKConfig>
 8001e26:	2800      	cmp	r0, #0
 8001e28:	d001      	beq.n	8001e2e <SystemClock_Config+0x92>
 8001e2a:	b672      	cpsid	i
	while (1)
 8001e2c:	e7fe      	b.n	8001e2c <SystemClock_Config+0x90>
}
 8001e2e:	b01c      	add	sp, #112	; 0x70
 8001e30:	bd10      	pop	{r4, pc}
 8001e32:	46c0      	nop			; (mov r8, r8)
 8001e34:	40007000 	.word	0x40007000
 8001e38:	ffffe7ff 	.word	0xffffe7ff

08001e3c <main>:
{
 8001e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e3e:	2501      	movs	r5, #1
{
 8001e40:	b08b      	sub	sp, #44	; 0x2c
	HAL_Init();
 8001e42:	f000 fa4b 	bl	80022dc <HAL_Init>
	SystemClock_Config();
 8001e46:	f7ff ffa9 	bl	8001d9c <SystemClock_Config>
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e4a:	2214      	movs	r2, #20
 8001e4c:	2100      	movs	r1, #0
 8001e4e:	a805      	add	r0, sp, #20
 8001e50:	f002 fa79 	bl	8004346 <memset>
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e54:	2102      	movs	r1, #2
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e56:	27a0      	movs	r7, #160	; 0xa0
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e58:	4b63      	ldr	r3, [pc, #396]	; (8001fe8 <main+0x1ac>)
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e5a:	05ff      	lsls	r7, r7, #23
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e5c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e5e:	0038      	movs	r0, r7
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e60:	432a      	orrs	r2, r5
 8001e62:	62da      	str	r2, [r3, #44]	; 0x2c
 8001e64:	6ada      	ldr	r2, [r3, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e66:	2400      	movs	r4, #0
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001e68:	402a      	ands	r2, r5
 8001e6a:	9201      	str	r2, [sp, #4]
 8001e6c:	9a01      	ldr	r2, [sp, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
	huart1.Instance = USART1;
 8001e70:	4e5e      	ldr	r6, [pc, #376]	; (8001fec <main+0x1b0>)
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e72:	430a      	orrs	r2, r1
 8001e74:	62da      	str	r2, [r3, #44]	; 0x2c
 8001e76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e78:	2200      	movs	r2, #0
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e7a:	400b      	ands	r3, r1
 8001e7c:	9302      	str	r3, [sp, #8]
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e7e:	3136      	adds	r1, #54	; 0x36
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001e80:	9b02      	ldr	r3, [sp, #8]
	HAL_GPIO_WritePin(GPIOA, LED1_Pin|LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8001e82:	f000 fb67 	bl	8002554 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin;
 8001e86:	2307      	movs	r3, #7
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e88:	0038      	movs	r0, r7
 8001e8a:	a905      	add	r1, sp, #20
	GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin|SW3_Pin;
 8001e8c:	9305      	str	r3, [sp, #20]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001e8e:	9507      	str	r5, [sp, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e90:	9406      	str	r4, [sp, #24]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e92:	f000 fa9f 	bl	80023d4 <HAL_GPIO_Init>
	GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin;
 8001e96:	2338      	movs	r3, #56	; 0x38
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e98:	0038      	movs	r0, r7
 8001e9a:	a905      	add	r1, sp, #20
	GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin;
 8001e9c:	9305      	str	r3, [sp, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e9e:	9506      	str	r5, [sp, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ea0:	9407      	str	r4, [sp, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ea2:	9408      	str	r4, [sp, #32]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ea4:	f000 fa96 	bl	80023d4 <HAL_GPIO_Init>
	GPIO_InitStruct.Pin = LEFT_Pin|RIGHT_Pin;
 8001ea8:	230a      	movs	r3, #10
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eaa:	4851      	ldr	r0, [pc, #324]	; (8001ff0 <main+0x1b4>)
 8001eac:	a905      	add	r1, sp, #20
	GPIO_InitStruct.Pin = LEFT_Pin|RIGHT_Pin;
 8001eae:	9305      	str	r3, [sp, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001eb0:	9406      	str	r4, [sp, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001eb2:	9407      	str	r4, [sp, #28]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eb4:	f000 fa8e 	bl	80023d4 <HAL_GPIO_Init>
	huart1.Init.BaudRate = 9600;
 8001eb8:	2396      	movs	r3, #150	; 0x96
	huart1.Instance = USART1;
 8001eba:	484e      	ldr	r0, [pc, #312]	; (8001ff4 <main+0x1b8>)
	huart1.Init.BaudRate = 9600;
 8001ebc:	019b      	lsls	r3, r3, #6
 8001ebe:	6043      	str	r3, [r0, #4]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8001ec0:	230c      	movs	r3, #12
	huart1.Instance = USART1;
 8001ec2:	6006      	str	r6, [r0, #0]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001ec4:	6084      	str	r4, [r0, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 8001ec6:	60c4      	str	r4, [r0, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 8001ec8:	6104      	str	r4, [r0, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8001eca:	6143      	str	r3, [r0, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001ecc:	6184      	str	r4, [r0, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001ece:	61c4      	str	r4, [r0, #28]
	huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001ed0:	6204      	str	r4, [r0, #32]
	huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001ed2:	6244      	str	r4, [r0, #36]	; 0x24
	if (HAL_UART_Init(&huart1) != HAL_OK)
 8001ed4:	f002 f9be 	bl	8004254 <HAL_UART_Init>
 8001ed8:	0005      	movs	r5, r0
 8001eda:	42a0      	cmp	r0, r4
 8001edc:	d001      	beq.n	8001ee2 <main+0xa6>
 8001ede:	b672      	cpsid	i
	while (1)
 8001ee0:	e7fe      	b.n	8001ee0 <main+0xa4>
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ee2:	0001      	movs	r1, r0
 8001ee4:	2208      	movs	r2, #8
 8001ee6:	a803      	add	r0, sp, #12
 8001ee8:	f002 fa2d 	bl	8004346 <memset>
	TIM_OC_InitTypeDef sConfigOC = {0};
 8001eec:	2210      	movs	r2, #16
 8001eee:	0029      	movs	r1, r5
 8001ef0:	a805      	add	r0, sp, #20
 8001ef2:	f002 fa28 	bl	8004346 <memset>
	htim2.Instance = TIM2;
 8001ef6:	2380      	movs	r3, #128	; 0x80
 8001ef8:	4c3f      	ldr	r4, [pc, #252]	; (8001ff8 <main+0x1bc>)
 8001efa:	05db      	lsls	r3, r3, #23
 8001efc:	6023      	str	r3, [r4, #0]
	htim2.Init.Prescaler = 32-1;
 8001efe:	231f      	movs	r3, #31
	if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001f00:	0020      	movs	r0, r4
	htim2.Init.Prescaler = 32-1;
 8001f02:	6063      	str	r3, [r4, #4]
	htim2.Init.Period = 250-1;
 8001f04:	33da      	adds	r3, #218	; 0xda
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f06:	60a5      	str	r5, [r4, #8]
	htim2.Init.Period = 250-1;
 8001f08:	60e3      	str	r3, [r4, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f0a:	6125      	str	r5, [r4, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f0c:	6165      	str	r5, [r4, #20]
	if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001f0e:	f001 fd89 	bl	8003a24 <HAL_TIM_PWM_Init>
 8001f12:	2800      	cmp	r0, #0
 8001f14:	d001      	beq.n	8001f1a <main+0xde>
 8001f16:	b672      	cpsid	i
	while (1)
 8001f18:	e7fe      	b.n	8001f18 <main+0xdc>
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001f1a:	9003      	str	r0, [sp, #12]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f1c:	9004      	str	r0, [sp, #16]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001f1e:	a903      	add	r1, sp, #12
 8001f20:	0020      	movs	r0, r4
 8001f22:	f001 fe39 	bl	8003b98 <HAL_TIMEx_MasterConfigSynchronization>
 8001f26:	1e02      	subs	r2, r0, #0
 8001f28:	d001      	beq.n	8001f2e <main+0xf2>
 8001f2a:	b672      	cpsid	i
	while (1)
 8001f2c:	e7fe      	b.n	8001f2c <main+0xf0>
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001f2e:	2360      	movs	r3, #96	; 0x60
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f30:	9007      	str	r0, [sp, #28]
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001f32:	9305      	str	r3, [sp, #20]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f34:	9008      	str	r0, [sp, #32]
	sConfigOC.Pulse = 125-1;
 8001f36:	331c      	adds	r3, #28
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f38:	0020      	movs	r0, r4
 8001f3a:	a905      	add	r1, sp, #20
	sConfigOC.Pulse = 125-1;
 8001f3c:	9306      	str	r3, [sp, #24]
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f3e:	f001 fd9d 	bl	8003a7c <HAL_TIM_PWM_ConfigChannel>
 8001f42:	1e05      	subs	r5, r0, #0
 8001f44:	d001      	beq.n	8001f4a <main+0x10e>
 8001f46:	b672      	cpsid	i
	while (1)
 8001f48:	e7fe      	b.n	8001f48 <main+0x10c>
	HAL_TIM_MspPostInit(&htim2);
 8001f4a:	0020      	movs	r0, r4
 8001f4c:	f000 f8fa 	bl	8002144 <HAL_TIM_MspPostInit>
	hi2c1.Instance = I2C1;
 8001f50:	4c2a      	ldr	r4, [pc, #168]	; (8001ffc <main+0x1c0>)
 8001f52:	4b2b      	ldr	r3, [pc, #172]	; (8002000 <main+0x1c4>)
	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001f54:	0020      	movs	r0, r4
	hi2c1.Instance = I2C1;
 8001f56:	6023      	str	r3, [r4, #0]
	hi2c1.Init.Timing = 0x00300F38;
 8001f58:	4b2a      	ldr	r3, [pc, #168]	; (8002004 <main+0x1c8>)
	hi2c1.Init.OwnAddress1 = 0;
 8001f5a:	60a5      	str	r5, [r4, #8]
	hi2c1.Init.Timing = 0x00300F38;
 8001f5c:	6063      	str	r3, [r4, #4]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f5e:	2301      	movs	r3, #1
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001f60:	6125      	str	r5, [r4, #16]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f62:	60e3      	str	r3, [r4, #12]
	hi2c1.Init.OwnAddress2 = 0;
 8001f64:	6165      	str	r5, [r4, #20]
	hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001f66:	61a5      	str	r5, [r4, #24]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001f68:	61e5      	str	r5, [r4, #28]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001f6a:	6225      	str	r5, [r4, #32]
	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001f6c:	f000 fc7a 	bl	8002864 <HAL_I2C_Init>
 8001f70:	1e01      	subs	r1, r0, #0
 8001f72:	d001      	beq.n	8001f78 <main+0x13c>
 8001f74:	b672      	cpsid	i
	while (1)
 8001f76:	e7fe      	b.n	8001f76 <main+0x13a>
	if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001f78:	0020      	movs	r0, r4
 8001f7a:	f000 ffad 	bl	8002ed8 <HAL_I2CEx_ConfigAnalogFilter>
 8001f7e:	1e01      	subs	r1, r0, #0
 8001f80:	d001      	beq.n	8001f86 <main+0x14a>
 8001f82:	b672      	cpsid	i
	while (1)
 8001f84:	e7fe      	b.n	8001f84 <main+0x148>
	if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001f86:	0020      	movs	r0, r4
 8001f88:	f000 ffcc 	bl	8002f24 <HAL_I2CEx_ConfigDigitalFilter>
 8001f8c:	1e04      	subs	r4, r0, #0
 8001f8e:	d001      	beq.n	8001f94 <main+0x158>
 8001f90:	b672      	cpsid	i
	while (1)
 8001f92:	e7fe      	b.n	8001f92 <main+0x156>
	initEns160();
 8001f94:	f7ff f82c 	bl	8000ff0 <initEns160>
	initDrv8830();
 8001f98:	f7fe fff2 	bl	8000f80 <initDrv8830>
	LED(1,0);
 8001f9c:	2308      	movs	r3, #8
	nextion_inst_set("baud=921600");
 8001f9e:	4d1a      	ldr	r5, [pc, #104]	; (8002008 <main+0x1cc>)
	LED(1,0);
 8001fa0:	61bb      	str	r3, [r7, #24]
	LED(2,0);
 8001fa2:	18db      	adds	r3, r3, r3
 8001fa4:	61bb      	str	r3, [r7, #24]
	LED(3,0);
 8001fa6:	3310      	adds	r3, #16
 8001fa8:	61bb      	str	r3, [r7, #24]
	nextion_inst_set("baud=921600");
 8001faa:	0028      	movs	r0, r5
 8001fac:	f7ff f88e 	bl	80010cc <nextion_inst_set>
	nextion_inst_set("baud=921600");
 8001fb0:	0028      	movs	r0, r5
 8001fb2:	f7ff f88b 	bl	80010cc <nextion_inst_set>
	nextion_inst_set("baud=921600");
 8001fb6:	0028      	movs	r0, r5
 8001fb8:	f7ff f888 	bl	80010cc <nextion_inst_set>
	HAL_Delay(50);
 8001fbc:	2032      	movs	r0, #50	; 0x32
 8001fbe:	f000 f9b3 	bl	8002328 <HAL_Delay>
	USART1->CR1 &= (~USART_CR1_UE);
 8001fc2:	2201      	movs	r2, #1
 8001fc4:	6833      	ldr	r3, [r6, #0]
	HAL_Delay(1000);
 8001fc6:	20fa      	movs	r0, #250	; 0xfa
	USART1->CR1 &= (~USART_CR1_UE);
 8001fc8:	4393      	bics	r3, r2
 8001fca:	6033      	str	r3, [r6, #0]
	USART1->BRR = 0x23;
 8001fcc:	2323      	movs	r3, #35	; 0x23
 8001fce:	60f3      	str	r3, [r6, #12]
	USART1->CR1 |= USART_CR1_UE;
 8001fd0:	6833      	ldr	r3, [r6, #0]
	HAL_Delay(1000);
 8001fd2:	0080      	lsls	r0, r0, #2
	USART1->CR1 |= USART_CR1_UE;
 8001fd4:	4313      	orrs	r3, r2
 8001fd6:	6033      	str	r3, [r6, #0]
	HAL_Delay(1000);
 8001fd8:	f000 f9a6 	bl	8002328 <HAL_Delay>
	setMotor(DRV8830_STOP);
 8001fdc:	0020      	movs	r0, r4
 8001fde:	f7fe ffe3 	bl	8000fa8 <setMotor>
	task_fuc();
 8001fe2:	f7ff fccd 	bl	8001980 <task_fuc>
 8001fe6:	46c0      	nop			; (mov r8, r8)
 8001fe8:	40021000 	.word	0x40021000
 8001fec:	40013800 	.word	0x40013800
 8001ff0:	50000400 	.word	0x50000400
 8001ff4:	20000324 	.word	0x20000324
 8001ff8:	200002e4 	.word	0x200002e4
 8001ffc:	20000290 	.word	0x20000290
 8002000:	40005400 	.word	0x40005400
 8002004:	00300f38 	.word	0x00300f38
 8002008:	0800524f 	.word	0x0800524f

0800200c <getTempSht41>:
 800200c:	b570      	push	{r4, r5, r6, lr}
 800200e:	250f      	movs	r5, #15
 8002010:	23fd      	movs	r3, #253	; 0xfd
 8002012:	4e21      	ldr	r6, [pc, #132]	; (8002098 <getTempSht41+0x8c>)
 8002014:	b086      	sub	sp, #24
 8002016:	0004      	movs	r4, r0
 8002018:	446d      	add	r5, sp
 800201a:	0030      	movs	r0, r6
 800201c:	702b      	strb	r3, [r5, #0]
 800201e:	f000 fc21 	bl	8002864 <HAL_I2C_Init>
 8002022:	2301      	movs	r3, #1
 8002024:	002a      	movs	r2, r5
 8002026:	9300      	str	r3, [sp, #0]
 8002028:	2189      	movs	r1, #137	; 0x89
 800202a:	0030      	movs	r0, r6
 800202c:	f000 fc70 	bl	8002910 <HAL_I2C_Master_Transmit>
 8002030:	2014      	movs	r0, #20
 8002032:	f000 f979 	bl	8002328 <HAL_Delay>
 8002036:	230a      	movs	r3, #10
 8002038:	ad04      	add	r5, sp, #16
 800203a:	002a      	movs	r2, r5
 800203c:	2189      	movs	r1, #137	; 0x89
 800203e:	9300      	str	r3, [sp, #0]
 8002040:	0030      	movs	r0, r6
 8002042:	3b04      	subs	r3, #4
 8002044:	f000 fcf6 	bl	8002a34 <HAL_I2C_Master_Receive>
 8002048:	2213      	movs	r2, #19
 800204a:	446a      	add	r2, sp
 800204c:	7850      	ldrb	r0, [r2, #1]
 800204e:	7813      	ldrb	r3, [r2, #0]
 8002050:	0200      	lsls	r0, r0, #8
 8002052:	4318      	orrs	r0, r3
 8002054:	ba40      	rev16	r0, r0
 8002056:	b280      	uxth	r0, r0
 8002058:	f7fe fe3c 	bl	8000cd4 <__aeabi_ui2f>
 800205c:	490f      	ldr	r1, [pc, #60]	; (800209c <getTempSht41+0x90>)
 800205e:	f7fe fa2d 	bl	80004bc <__aeabi_fdiv>
 8002062:	490f      	ldr	r1, [pc, #60]	; (80020a0 <getTempSht41+0x94>)
 8002064:	f7fe fb42 	bl	80006ec <__aeabi_fmul>
 8002068:	490e      	ldr	r1, [pc, #56]	; (80020a4 <getTempSht41+0x98>)
 800206a:	f7fe fc65 	bl	8000938 <__aeabi_fsub>
 800206e:	1c06      	adds	r6, r0, #0
 8002070:	8828      	ldrh	r0, [r5, #0]
 8002072:	ba40      	rev16	r0, r0
 8002074:	b280      	uxth	r0, r0
 8002076:	f7fe fe2d 	bl	8000cd4 <__aeabi_ui2f>
 800207a:	4908      	ldr	r1, [pc, #32]	; (800209c <getTempSht41+0x90>)
 800207c:	f7fe fa1e 	bl	80004bc <__aeabi_fdiv>
 8002080:	4909      	ldr	r1, [pc, #36]	; (80020a8 <getTempSht41+0x9c>)
 8002082:	f7fe fb33 	bl	80006ec <__aeabi_fmul>
 8002086:	4909      	ldr	r1, [pc, #36]	; (80020ac <getTempSht41+0xa0>)
 8002088:	f7fe fc56 	bl	8000938 <__aeabi_fsub>
 800208c:	6020      	str	r0, [r4, #0]
 800208e:	0020      	movs	r0, r4
 8002090:	6066      	str	r6, [r4, #4]
 8002092:	b006      	add	sp, #24
 8002094:	bd70      	pop	{r4, r5, r6, pc}
 8002096:	46c0      	nop			; (mov r8, r8)
 8002098:	20000290 	.word	0x20000290
 800209c:	477fff00 	.word	0x477fff00
 80020a0:	42fa0000 	.word	0x42fa0000
 80020a4:	40c00000 	.word	0x40c00000
 80020a8:	432f0000 	.word	0x432f0000
 80020ac:	42340000 	.word	0x42340000

080020b0 <HAL_MspInit>:
 80020b0:	2201      	movs	r2, #1
 80020b2:	4b05      	ldr	r3, [pc, #20]	; (80020c8 <HAL_MspInit+0x18>)
 80020b4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80020b6:	430a      	orrs	r2, r1
 80020b8:	635a      	str	r2, [r3, #52]	; 0x34
 80020ba:	2280      	movs	r2, #128	; 0x80
 80020bc:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80020be:	0552      	lsls	r2, r2, #21
 80020c0:	430a      	orrs	r2, r1
 80020c2:	639a      	str	r2, [r3, #56]	; 0x38
 80020c4:	4770      	bx	lr
 80020c6:	46c0      	nop			; (mov r8, r8)
 80020c8:	40021000 	.word	0x40021000

080020cc <HAL_I2C_MspInit>:
 80020cc:	b510      	push	{r4, lr}
 80020ce:	0004      	movs	r4, r0
 80020d0:	b086      	sub	sp, #24
 80020d2:	2214      	movs	r2, #20
 80020d4:	2100      	movs	r1, #0
 80020d6:	a801      	add	r0, sp, #4
 80020d8:	f002 f935 	bl	8004346 <memset>
 80020dc:	4b0f      	ldr	r3, [pc, #60]	; (800211c <HAL_I2C_MspInit+0x50>)
 80020de:	6822      	ldr	r2, [r4, #0]
 80020e0:	429a      	cmp	r2, r3
 80020e2:	d119      	bne.n	8002118 <HAL_I2C_MspInit+0x4c>
 80020e4:	2102      	movs	r1, #2
 80020e6:	4c0e      	ldr	r4, [pc, #56]	; (8002120 <HAL_I2C_MspInit+0x54>)
 80020e8:	480e      	ldr	r0, [pc, #56]	; (8002124 <HAL_I2C_MspInit+0x58>)
 80020ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80020ec:	430a      	orrs	r2, r1
 80020ee:	62e2      	str	r2, [r4, #44]	; 0x2c
 80020f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80020f2:	400b      	ands	r3, r1
 80020f4:	9300      	str	r3, [sp, #0]
 80020f6:	9b00      	ldr	r3, [sp, #0]
 80020f8:	23c0      	movs	r3, #192	; 0xc0
 80020fa:	9301      	str	r3, [sp, #4]
 80020fc:	3bae      	subs	r3, #174	; 0xae
 80020fe:	9302      	str	r3, [sp, #8]
 8002100:	3b0f      	subs	r3, #15
 8002102:	9304      	str	r3, [sp, #16]
 8002104:	a901      	add	r1, sp, #4
 8002106:	3b02      	subs	r3, #2
 8002108:	9305      	str	r3, [sp, #20]
 800210a:	f000 f963 	bl	80023d4 <HAL_GPIO_Init>
 800210e:	2380      	movs	r3, #128	; 0x80
 8002110:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002112:	039b      	lsls	r3, r3, #14
 8002114:	4313      	orrs	r3, r2
 8002116:	63a3      	str	r3, [r4, #56]	; 0x38
 8002118:	b006      	add	sp, #24
 800211a:	bd10      	pop	{r4, pc}
 800211c:	40005400 	.word	0x40005400
 8002120:	40021000 	.word	0x40021000
 8002124:	50000400 	.word	0x50000400

08002128 <HAL_TIM_PWM_MspInit>:
 8002128:	2380      	movs	r3, #128	; 0x80
 800212a:	6802      	ldr	r2, [r0, #0]
 800212c:	05db      	lsls	r3, r3, #23
 800212e:	429a      	cmp	r2, r3
 8002130:	d104      	bne.n	800213c <HAL_TIM_PWM_MspInit+0x14>
 8002132:	2301      	movs	r3, #1
 8002134:	4a02      	ldr	r2, [pc, #8]	; (8002140 <HAL_TIM_PWM_MspInit+0x18>)
 8002136:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8002138:	430b      	orrs	r3, r1
 800213a:	6393      	str	r3, [r2, #56]	; 0x38
 800213c:	4770      	bx	lr
 800213e:	46c0      	nop			; (mov r8, r8)
 8002140:	40021000 	.word	0x40021000

08002144 <HAL_TIM_MspPostInit>:
 8002144:	b510      	push	{r4, lr}
 8002146:	0004      	movs	r4, r0
 8002148:	b086      	sub	sp, #24
 800214a:	2214      	movs	r2, #20
 800214c:	2100      	movs	r1, #0
 800214e:	a801      	add	r0, sp, #4
 8002150:	f002 f8f9 	bl	8004346 <memset>
 8002154:	2380      	movs	r3, #128	; 0x80
 8002156:	6822      	ldr	r2, [r4, #0]
 8002158:	05db      	lsls	r3, r3, #23
 800215a:	429a      	cmp	r2, r3
 800215c:	d114      	bne.n	8002188 <HAL_TIM_MspPostInit+0x44>
 800215e:	2001      	movs	r0, #1
 8002160:	4a0a      	ldr	r2, [pc, #40]	; (800218c <HAL_TIM_MspPostInit+0x48>)
 8002162:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8002164:	4301      	orrs	r1, r0
 8002166:	62d1      	str	r1, [r2, #44]	; 0x2c
 8002168:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800216a:	a901      	add	r1, sp, #4
 800216c:	4003      	ands	r3, r0
 800216e:	9300      	str	r3, [sp, #0]
 8002170:	9b00      	ldr	r3, [sp, #0]
 8002172:	2380      	movs	r3, #128	; 0x80
 8002174:	021b      	lsls	r3, r3, #8
 8002176:	20a0      	movs	r0, #160	; 0xa0
 8002178:	9301      	str	r3, [sp, #4]
 800217a:	2302      	movs	r3, #2
 800217c:	05c0      	lsls	r0, r0, #23
 800217e:	9302      	str	r3, [sp, #8]
 8002180:	3303      	adds	r3, #3
 8002182:	9305      	str	r3, [sp, #20]
 8002184:	f000 f926 	bl	80023d4 <HAL_GPIO_Init>
 8002188:	b006      	add	sp, #24
 800218a:	bd10      	pop	{r4, pc}
 800218c:	40021000 	.word	0x40021000

08002190 <HAL_UART_MspInit>:
 8002190:	b510      	push	{r4, lr}
 8002192:	0004      	movs	r4, r0
 8002194:	b086      	sub	sp, #24
 8002196:	2214      	movs	r2, #20
 8002198:	2100      	movs	r1, #0
 800219a:	a801      	add	r0, sp, #4
 800219c:	f002 f8d3 	bl	8004346 <memset>
 80021a0:	4b10      	ldr	r3, [pc, #64]	; (80021e4 <HAL_UART_MspInit+0x54>)
 80021a2:	6822      	ldr	r2, [r4, #0]
 80021a4:	429a      	cmp	r2, r3
 80021a6:	d11b      	bne.n	80021e0 <HAL_UART_MspInit+0x50>
 80021a8:	2280      	movs	r2, #128	; 0x80
 80021aa:	4b0f      	ldr	r3, [pc, #60]	; (80021e8 <HAL_UART_MspInit+0x58>)
 80021ac:	01d2      	lsls	r2, r2, #7
 80021ae:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80021b0:	20a0      	movs	r0, #160	; 0xa0
 80021b2:	430a      	orrs	r2, r1
 80021b4:	2101      	movs	r1, #1
 80021b6:	635a      	str	r2, [r3, #52]	; 0x34
 80021b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80021ba:	05c0      	lsls	r0, r0, #23
 80021bc:	430a      	orrs	r2, r1
 80021be:	62da      	str	r2, [r3, #44]	; 0x2c
 80021c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80021c2:	400b      	ands	r3, r1
 80021c4:	9300      	str	r3, [sp, #0]
 80021c6:	9b00      	ldr	r3, [sp, #0]
 80021c8:	23c0      	movs	r3, #192	; 0xc0
 80021ca:	00db      	lsls	r3, r3, #3
 80021cc:	9301      	str	r3, [sp, #4]
 80021ce:	2302      	movs	r3, #2
 80021d0:	9302      	str	r3, [sp, #8]
 80021d2:	185b      	adds	r3, r3, r1
 80021d4:	9304      	str	r3, [sp, #16]
 80021d6:	185b      	adds	r3, r3, r1
 80021d8:	a901      	add	r1, sp, #4
 80021da:	9305      	str	r3, [sp, #20]
 80021dc:	f000 f8fa 	bl	80023d4 <HAL_GPIO_Init>
 80021e0:	b006      	add	sp, #24
 80021e2:	bd10      	pop	{r4, pc}
 80021e4:	40013800 	.word	0x40013800
 80021e8:	40021000 	.word	0x40021000

080021ec <NMI_Handler>:
 80021ec:	e7fe      	b.n	80021ec <NMI_Handler>

080021ee <HardFault_Handler>:
 80021ee:	e7fe      	b.n	80021ee <HardFault_Handler>

080021f0 <SVC_Handler>:
 80021f0:	4770      	bx	lr

080021f2 <PendSV_Handler>:
 80021f2:	4770      	bx	lr

080021f4 <SysTick_Handler>:
 80021f4:	b510      	push	{r4, lr}
 80021f6:	f000 f885 	bl	8002304 <HAL_IncTick>
 80021fa:	bd10      	pop	{r4, pc}

080021fc <_sbrk>:
 80021fc:	4a0b      	ldr	r2, [pc, #44]	; (800222c <_sbrk+0x30>)
 80021fe:	490c      	ldr	r1, [pc, #48]	; (8002230 <_sbrk+0x34>)
 8002200:	0003      	movs	r3, r0
 8002202:	1a89      	subs	r1, r1, r2
 8002204:	4a0b      	ldr	r2, [pc, #44]	; (8002234 <_sbrk+0x38>)
 8002206:	b510      	push	{r4, lr}
 8002208:	6810      	ldr	r0, [r2, #0]
 800220a:	2800      	cmp	r0, #0
 800220c:	d101      	bne.n	8002212 <_sbrk+0x16>
 800220e:	480a      	ldr	r0, [pc, #40]	; (8002238 <_sbrk+0x3c>)
 8002210:	6010      	str	r0, [r2, #0]
 8002212:	6810      	ldr	r0, [r2, #0]
 8002214:	18c3      	adds	r3, r0, r3
 8002216:	428b      	cmp	r3, r1
 8002218:	d906      	bls.n	8002228 <_sbrk+0x2c>
 800221a:	f002 f84d 	bl	80042b8 <__errno>
 800221e:	230c      	movs	r3, #12
 8002220:	6003      	str	r3, [r0, #0]
 8002222:	2001      	movs	r0, #1
 8002224:	4240      	negs	r0, r0
 8002226:	bd10      	pop	{r4, pc}
 8002228:	6013      	str	r3, [r2, #0]
 800222a:	e7fc      	b.n	8002226 <_sbrk+0x2a>
 800222c:	00000400 	.word	0x00000400
 8002230:	20002000 	.word	0x20002000
 8002234:	200003b8 	.word	0x200003b8
 8002238:	200003d0 	.word	0x200003d0

0800223c <SystemInit>:
 800223c:	4770      	bx	lr
	...

08002240 <Reset_Handler>:
 8002240:	480d      	ldr	r0, [pc, #52]	; (8002278 <LoopForever+0x2>)
 8002242:	4685      	mov	sp, r0
 8002244:	f7ff fffa 	bl	800223c <SystemInit>
 8002248:	480c      	ldr	r0, [pc, #48]	; (800227c <LoopForever+0x6>)
 800224a:	490d      	ldr	r1, [pc, #52]	; (8002280 <LoopForever+0xa>)
 800224c:	4a0d      	ldr	r2, [pc, #52]	; (8002284 <LoopForever+0xe>)
 800224e:	2300      	movs	r3, #0
 8002250:	e002      	b.n	8002258 <LoopCopyDataInit>

08002252 <CopyDataInit>:
 8002252:	58d4      	ldr	r4, [r2, r3]
 8002254:	50c4      	str	r4, [r0, r3]
 8002256:	3304      	adds	r3, #4

08002258 <LoopCopyDataInit>:
 8002258:	18c4      	adds	r4, r0, r3
 800225a:	428c      	cmp	r4, r1
 800225c:	d3f9      	bcc.n	8002252 <CopyDataInit>
 800225e:	4a0a      	ldr	r2, [pc, #40]	; (8002288 <LoopForever+0x12>)
 8002260:	4c0a      	ldr	r4, [pc, #40]	; (800228c <LoopForever+0x16>)
 8002262:	2300      	movs	r3, #0
 8002264:	e001      	b.n	800226a <LoopFillZerobss>

08002266 <FillZerobss>:
 8002266:	6013      	str	r3, [r2, #0]
 8002268:	3204      	adds	r2, #4

0800226a <LoopFillZerobss>:
 800226a:	42a2      	cmp	r2, r4
 800226c:	d3fb      	bcc.n	8002266 <FillZerobss>
 800226e:	f002 f829 	bl	80042c4 <__libc_init_array>
 8002272:	f7ff fde3 	bl	8001e3c <main>

08002276 <LoopForever>:
 8002276:	e7fe      	b.n	8002276 <LoopForever>
 8002278:	20002000 	.word	0x20002000
 800227c:	20000000 	.word	0x20000000
 8002280:	20000200 	.word	0x20000200
 8002284:	08005320 	.word	0x08005320
 8002288:	20000200 	.word	0x20000200
 800228c:	200003d0 	.word	0x200003d0

08002290 <ADC1_COMP_IRQHandler>:
 8002290:	e7fe      	b.n	8002290 <ADC1_COMP_IRQHandler>
	...

08002294 <HAL_InitTick>:
 8002294:	b570      	push	{r4, r5, r6, lr}
 8002296:	0005      	movs	r5, r0
 8002298:	20fa      	movs	r0, #250	; 0xfa
 800229a:	4b0d      	ldr	r3, [pc, #52]	; (80022d0 <HAL_InitTick+0x3c>)
 800229c:	0080      	lsls	r0, r0, #2
 800229e:	7819      	ldrb	r1, [r3, #0]
 80022a0:	f7fd ff4e 	bl	8000140 <__udivsi3>
 80022a4:	4b0b      	ldr	r3, [pc, #44]	; (80022d4 <HAL_InitTick+0x40>)
 80022a6:	0001      	movs	r1, r0
 80022a8:	6818      	ldr	r0, [r3, #0]
 80022aa:	f7fd ff49 	bl	8000140 <__udivsi3>
 80022ae:	f000 f877 	bl	80023a0 <HAL_SYSTICK_Config>
 80022b2:	0004      	movs	r4, r0
 80022b4:	2001      	movs	r0, #1
 80022b6:	2c00      	cmp	r4, #0
 80022b8:	d109      	bne.n	80022ce <HAL_InitTick+0x3a>
 80022ba:	2d03      	cmp	r5, #3
 80022bc:	d807      	bhi.n	80022ce <HAL_InitTick+0x3a>
 80022be:	3802      	subs	r0, #2
 80022c0:	0022      	movs	r2, r4
 80022c2:	0029      	movs	r1, r5
 80022c4:	f000 f842 	bl	800234c <HAL_NVIC_SetPriority>
 80022c8:	0020      	movs	r0, r4
 80022ca:	4b03      	ldr	r3, [pc, #12]	; (80022d8 <HAL_InitTick+0x44>)
 80022cc:	601d      	str	r5, [r3, #0]
 80022ce:	bd70      	pop	{r4, r5, r6, pc}
 80022d0:	20000194 	.word	0x20000194
 80022d4:	20000190 	.word	0x20000190
 80022d8:	20000198 	.word	0x20000198

080022dc <HAL_Init>:
 80022dc:	2340      	movs	r3, #64	; 0x40
 80022de:	4a08      	ldr	r2, [pc, #32]	; (8002300 <HAL_Init+0x24>)
 80022e0:	b510      	push	{r4, lr}
 80022e2:	6811      	ldr	r1, [r2, #0]
 80022e4:	2003      	movs	r0, #3
 80022e6:	430b      	orrs	r3, r1
 80022e8:	6013      	str	r3, [r2, #0]
 80022ea:	f7ff ffd3 	bl	8002294 <HAL_InitTick>
 80022ee:	1e04      	subs	r4, r0, #0
 80022f0:	d103      	bne.n	80022fa <HAL_Init+0x1e>
 80022f2:	f7ff fedd 	bl	80020b0 <HAL_MspInit>
 80022f6:	0020      	movs	r0, r4
 80022f8:	bd10      	pop	{r4, pc}
 80022fa:	2401      	movs	r4, #1
 80022fc:	e7fb      	b.n	80022f6 <HAL_Init+0x1a>
 80022fe:	46c0      	nop			; (mov r8, r8)
 8002300:	40022000 	.word	0x40022000

08002304 <HAL_IncTick>:
 8002304:	4a03      	ldr	r2, [pc, #12]	; (8002314 <HAL_IncTick+0x10>)
 8002306:	4b04      	ldr	r3, [pc, #16]	; (8002318 <HAL_IncTick+0x14>)
 8002308:	6811      	ldr	r1, [r2, #0]
 800230a:	781b      	ldrb	r3, [r3, #0]
 800230c:	185b      	adds	r3, r3, r1
 800230e:	6013      	str	r3, [r2, #0]
 8002310:	4770      	bx	lr
 8002312:	46c0      	nop			; (mov r8, r8)
 8002314:	200003bc 	.word	0x200003bc
 8002318:	20000194 	.word	0x20000194

0800231c <HAL_GetTick>:
 800231c:	4b01      	ldr	r3, [pc, #4]	; (8002324 <HAL_GetTick+0x8>)
 800231e:	6818      	ldr	r0, [r3, #0]
 8002320:	4770      	bx	lr
 8002322:	46c0      	nop			; (mov r8, r8)
 8002324:	200003bc 	.word	0x200003bc

08002328 <HAL_Delay>:
 8002328:	b570      	push	{r4, r5, r6, lr}
 800232a:	0004      	movs	r4, r0
 800232c:	f7ff fff6 	bl	800231c <HAL_GetTick>
 8002330:	0005      	movs	r5, r0
 8002332:	1c63      	adds	r3, r4, #1
 8002334:	d002      	beq.n	800233c <HAL_Delay+0x14>
 8002336:	4b04      	ldr	r3, [pc, #16]	; (8002348 <HAL_Delay+0x20>)
 8002338:	781b      	ldrb	r3, [r3, #0]
 800233a:	18e4      	adds	r4, r4, r3
 800233c:	f7ff ffee 	bl	800231c <HAL_GetTick>
 8002340:	1b40      	subs	r0, r0, r5
 8002342:	42a0      	cmp	r0, r4
 8002344:	d3fa      	bcc.n	800233c <HAL_Delay+0x14>
 8002346:	bd70      	pop	{r4, r5, r6, pc}
 8002348:	20000194 	.word	0x20000194

0800234c <HAL_NVIC_SetPriority>:
 800234c:	b530      	push	{r4, r5, lr}
 800234e:	25ff      	movs	r5, #255	; 0xff
 8002350:	2403      	movs	r4, #3
 8002352:	002a      	movs	r2, r5
 8002354:	4004      	ands	r4, r0
 8002356:	00e4      	lsls	r4, r4, #3
 8002358:	40a2      	lsls	r2, r4
 800235a:	0189      	lsls	r1, r1, #6
 800235c:	4029      	ands	r1, r5
 800235e:	43d2      	mvns	r2, r2
 8002360:	40a1      	lsls	r1, r4
 8002362:	b2c3      	uxtb	r3, r0
 8002364:	2800      	cmp	r0, #0
 8002366:	db0a      	blt.n	800237e <HAL_NVIC_SetPriority+0x32>
 8002368:	24c0      	movs	r4, #192	; 0xc0
 800236a:	4b0b      	ldr	r3, [pc, #44]	; (8002398 <HAL_NVIC_SetPriority+0x4c>)
 800236c:	0880      	lsrs	r0, r0, #2
 800236e:	0080      	lsls	r0, r0, #2
 8002370:	18c0      	adds	r0, r0, r3
 8002372:	00a4      	lsls	r4, r4, #2
 8002374:	5903      	ldr	r3, [r0, r4]
 8002376:	401a      	ands	r2, r3
 8002378:	4311      	orrs	r1, r2
 800237a:	5101      	str	r1, [r0, r4]
 800237c:	bd30      	pop	{r4, r5, pc}
 800237e:	200f      	movs	r0, #15
 8002380:	4003      	ands	r3, r0
 8002382:	3b08      	subs	r3, #8
 8002384:	4805      	ldr	r0, [pc, #20]	; (800239c <HAL_NVIC_SetPriority+0x50>)
 8002386:	089b      	lsrs	r3, r3, #2
 8002388:	009b      	lsls	r3, r3, #2
 800238a:	181b      	adds	r3, r3, r0
 800238c:	69d8      	ldr	r0, [r3, #28]
 800238e:	4002      	ands	r2, r0
 8002390:	4311      	orrs	r1, r2
 8002392:	61d9      	str	r1, [r3, #28]
 8002394:	e7f2      	b.n	800237c <HAL_NVIC_SetPriority+0x30>
 8002396:	46c0      	nop			; (mov r8, r8)
 8002398:	e000e100 	.word	0xe000e100
 800239c:	e000ed00 	.word	0xe000ed00

080023a0 <HAL_SYSTICK_Config>:
 80023a0:	2280      	movs	r2, #128	; 0x80
 80023a2:	1e43      	subs	r3, r0, #1
 80023a4:	0452      	lsls	r2, r2, #17
 80023a6:	2001      	movs	r0, #1
 80023a8:	4293      	cmp	r3, r2
 80023aa:	d20d      	bcs.n	80023c8 <HAL_SYSTICK_Config+0x28>
 80023ac:	21c0      	movs	r1, #192	; 0xc0
 80023ae:	4a07      	ldr	r2, [pc, #28]	; (80023cc <HAL_SYSTICK_Config+0x2c>)
 80023b0:	4807      	ldr	r0, [pc, #28]	; (80023d0 <HAL_SYSTICK_Config+0x30>)
 80023b2:	6053      	str	r3, [r2, #4]
 80023b4:	6a03      	ldr	r3, [r0, #32]
 80023b6:	0609      	lsls	r1, r1, #24
 80023b8:	021b      	lsls	r3, r3, #8
 80023ba:	0a1b      	lsrs	r3, r3, #8
 80023bc:	430b      	orrs	r3, r1
 80023be:	6203      	str	r3, [r0, #32]
 80023c0:	2000      	movs	r0, #0
 80023c2:	2307      	movs	r3, #7
 80023c4:	6090      	str	r0, [r2, #8]
 80023c6:	6013      	str	r3, [r2, #0]
 80023c8:	4770      	bx	lr
 80023ca:	46c0      	nop			; (mov r8, r8)
 80023cc:	e000e010 	.word	0xe000e010
 80023d0:	e000ed00 	.word	0xe000ed00

080023d4 <HAL_GPIO_Init>:
 80023d4:	4a58      	ldr	r2, [pc, #352]	; (8002538 <HAL_GPIO_Init+0x164>)
 80023d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023d8:	1882      	adds	r2, r0, r2
 80023da:	1e54      	subs	r4, r2, #1
 80023dc:	41a2      	sbcs	r2, r4
 80023de:	2300      	movs	r3, #0
 80023e0:	b087      	sub	sp, #28
 80023e2:	3205      	adds	r2, #5
 80023e4:	9103      	str	r1, [sp, #12]
 80023e6:	9205      	str	r2, [sp, #20]
 80023e8:	9a03      	ldr	r2, [sp, #12]
 80023ea:	6812      	ldr	r2, [r2, #0]
 80023ec:	0014      	movs	r4, r2
 80023ee:	40dc      	lsrs	r4, r3
 80023f0:	d101      	bne.n	80023f6 <HAL_GPIO_Init+0x22>
 80023f2:	b007      	add	sp, #28
 80023f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023f6:	2101      	movs	r1, #1
 80023f8:	000d      	movs	r5, r1
 80023fa:	0014      	movs	r4, r2
 80023fc:	409d      	lsls	r5, r3
 80023fe:	402c      	ands	r4, r5
 8002400:	468c      	mov	ip, r1
 8002402:	9402      	str	r4, [sp, #8]
 8002404:	422a      	tst	r2, r5
 8002406:	d100      	bne.n	800240a <HAL_GPIO_Init+0x36>
 8002408:	e094      	b.n	8002534 <HAL_GPIO_Init+0x160>
 800240a:	2403      	movs	r4, #3
 800240c:	9a03      	ldr	r2, [sp, #12]
 800240e:	005e      	lsls	r6, r3, #1
 8002410:	6852      	ldr	r2, [r2, #4]
 8002412:	9201      	str	r2, [sp, #4]
 8002414:	4022      	ands	r2, r4
 8002416:	40b4      	lsls	r4, r6
 8002418:	43e1      	mvns	r1, r4
 800241a:	1e54      	subs	r4, r2, #1
 800241c:	9104      	str	r1, [sp, #16]
 800241e:	4564      	cmp	r4, ip
 8002420:	d82a      	bhi.n	8002478 <HAL_GPIO_Init+0xa4>
 8002422:	6887      	ldr	r7, [r0, #8]
 8002424:	400f      	ands	r7, r1
 8002426:	9903      	ldr	r1, [sp, #12]
 8002428:	68cc      	ldr	r4, [r1, #12]
 800242a:	9901      	ldr	r1, [sp, #4]
 800242c:	40b4      	lsls	r4, r6
 800242e:	433c      	orrs	r4, r7
 8002430:	6084      	str	r4, [r0, #8]
 8002432:	6844      	ldr	r4, [r0, #4]
 8002434:	43ac      	bics	r4, r5
 8002436:	0025      	movs	r5, r4
 8002438:	090c      	lsrs	r4, r1, #4
 800243a:	4661      	mov	r1, ip
 800243c:	400c      	ands	r4, r1
 800243e:	409c      	lsls	r4, r3
 8002440:	432c      	orrs	r4, r5
 8002442:	6044      	str	r4, [r0, #4]
 8002444:	68c5      	ldr	r5, [r0, #12]
 8002446:	9904      	ldr	r1, [sp, #16]
 8002448:	400d      	ands	r5, r1
 800244a:	9903      	ldr	r1, [sp, #12]
 800244c:	688c      	ldr	r4, [r1, #8]
 800244e:	40b4      	lsls	r4, r6
 8002450:	432c      	orrs	r4, r5
 8002452:	60c4      	str	r4, [r0, #12]
 8002454:	2a02      	cmp	r2, #2
 8002456:	d111      	bne.n	800247c <HAL_GPIO_Init+0xa8>
 8002458:	2507      	movs	r5, #7
 800245a:	210f      	movs	r1, #15
 800245c:	401d      	ands	r5, r3
 800245e:	00ad      	lsls	r5, r5, #2
 8002460:	40a9      	lsls	r1, r5
 8002462:	08dc      	lsrs	r4, r3, #3
 8002464:	00a4      	lsls	r4, r4, #2
 8002466:	1904      	adds	r4, r0, r4
 8002468:	6a27      	ldr	r7, [r4, #32]
 800246a:	438f      	bics	r7, r1
 800246c:	9903      	ldr	r1, [sp, #12]
 800246e:	6909      	ldr	r1, [r1, #16]
 8002470:	40a9      	lsls	r1, r5
 8002472:	430f      	orrs	r7, r1
 8002474:	6227      	str	r7, [r4, #32]
 8002476:	e001      	b.n	800247c <HAL_GPIO_Init+0xa8>
 8002478:	2a03      	cmp	r2, #3
 800247a:	d1e3      	bne.n	8002444 <HAL_GPIO_Init+0x70>
 800247c:	40b2      	lsls	r2, r6
 800247e:	6804      	ldr	r4, [r0, #0]
 8002480:	9904      	ldr	r1, [sp, #16]
 8002482:	4021      	ands	r1, r4
 8002484:	430a      	orrs	r2, r1
 8002486:	6002      	str	r2, [r0, #0]
 8002488:	22c0      	movs	r2, #192	; 0xc0
 800248a:	9901      	ldr	r1, [sp, #4]
 800248c:	0292      	lsls	r2, r2, #10
 800248e:	4211      	tst	r1, r2
 8002490:	d050      	beq.n	8002534 <HAL_GPIO_Init+0x160>
 8002492:	2701      	movs	r7, #1
 8002494:	4c29      	ldr	r4, [pc, #164]	; (800253c <HAL_GPIO_Init+0x168>)
 8002496:	2603      	movs	r6, #3
 8002498:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800249a:	001d      	movs	r5, r3
 800249c:	433a      	orrs	r2, r7
 800249e:	6362      	str	r2, [r4, #52]	; 0x34
 80024a0:	4a27      	ldr	r2, [pc, #156]	; (8002540 <HAL_GPIO_Init+0x16c>)
 80024a2:	089c      	lsrs	r4, r3, #2
 80024a4:	00a4      	lsls	r4, r4, #2
 80024a6:	18a4      	adds	r4, r4, r2
 80024a8:	68a2      	ldr	r2, [r4, #8]
 80024aa:	4035      	ands	r5, r6
 80024ac:	4694      	mov	ip, r2
 80024ae:	220f      	movs	r2, #15
 80024b0:	00ad      	lsls	r5, r5, #2
 80024b2:	40aa      	lsls	r2, r5
 80024b4:	4661      	mov	r1, ip
 80024b6:	4391      	bics	r1, r2
 80024b8:	22a0      	movs	r2, #160	; 0xa0
 80024ba:	05d2      	lsls	r2, r2, #23
 80024bc:	4694      	mov	ip, r2
 80024be:	2200      	movs	r2, #0
 80024c0:	4560      	cmp	r0, ip
 80024c2:	d00d      	beq.n	80024e0 <HAL_GPIO_Init+0x10c>
 80024c4:	4a1f      	ldr	r2, [pc, #124]	; (8002544 <HAL_GPIO_Init+0x170>)
 80024c6:	4694      	mov	ip, r2
 80024c8:	003a      	movs	r2, r7
 80024ca:	4560      	cmp	r0, ip
 80024cc:	d008      	beq.n	80024e0 <HAL_GPIO_Init+0x10c>
 80024ce:	4f1e      	ldr	r7, [pc, #120]	; (8002548 <HAL_GPIO_Init+0x174>)
 80024d0:	1892      	adds	r2, r2, r2
 80024d2:	42b8      	cmp	r0, r7
 80024d4:	d004      	beq.n	80024e0 <HAL_GPIO_Init+0x10c>
 80024d6:	4f1d      	ldr	r7, [pc, #116]	; (800254c <HAL_GPIO_Init+0x178>)
 80024d8:	0032      	movs	r2, r6
 80024da:	42b8      	cmp	r0, r7
 80024dc:	d000      	beq.n	80024e0 <HAL_GPIO_Init+0x10c>
 80024de:	9a05      	ldr	r2, [sp, #20]
 80024e0:	40aa      	lsls	r2, r5
 80024e2:	430a      	orrs	r2, r1
 80024e4:	9902      	ldr	r1, [sp, #8]
 80024e6:	60a2      	str	r2, [r4, #8]
 80024e8:	000d      	movs	r5, r1
 80024ea:	4a19      	ldr	r2, [pc, #100]	; (8002550 <HAL_GPIO_Init+0x17c>)
 80024ec:	43cc      	mvns	r4, r1
 80024ee:	6896      	ldr	r6, [r2, #8]
 80024f0:	9901      	ldr	r1, [sp, #4]
 80024f2:	4335      	orrs	r5, r6
 80024f4:	02c9      	lsls	r1, r1, #11
 80024f6:	d401      	bmi.n	80024fc <HAL_GPIO_Init+0x128>
 80024f8:	0035      	movs	r5, r6
 80024fa:	4025      	ands	r5, r4
 80024fc:	6095      	str	r5, [r2, #8]
 80024fe:	68d6      	ldr	r6, [r2, #12]
 8002500:	9d02      	ldr	r5, [sp, #8]
 8002502:	9901      	ldr	r1, [sp, #4]
 8002504:	4335      	orrs	r5, r6
 8002506:	0289      	lsls	r1, r1, #10
 8002508:	d401      	bmi.n	800250e <HAL_GPIO_Init+0x13a>
 800250a:	0035      	movs	r5, r6
 800250c:	4025      	ands	r5, r4
 800250e:	60d5      	str	r5, [r2, #12]
 8002510:	6856      	ldr	r6, [r2, #4]
 8002512:	9d02      	ldr	r5, [sp, #8]
 8002514:	9901      	ldr	r1, [sp, #4]
 8002516:	4335      	orrs	r5, r6
 8002518:	0389      	lsls	r1, r1, #14
 800251a:	d401      	bmi.n	8002520 <HAL_GPIO_Init+0x14c>
 800251c:	0035      	movs	r5, r6
 800251e:	4025      	ands	r5, r4
 8002520:	6055      	str	r5, [r2, #4]
 8002522:	6815      	ldr	r5, [r2, #0]
 8002524:	9e02      	ldr	r6, [sp, #8]
 8002526:	9901      	ldr	r1, [sp, #4]
 8002528:	432e      	orrs	r6, r5
 800252a:	03c9      	lsls	r1, r1, #15
 800252c:	d401      	bmi.n	8002532 <HAL_GPIO_Init+0x15e>
 800252e:	4025      	ands	r5, r4
 8002530:	002e      	movs	r6, r5
 8002532:	6016      	str	r6, [r2, #0]
 8002534:	3301      	adds	r3, #1
 8002536:	e757      	b.n	80023e8 <HAL_GPIO_Init+0x14>
 8002538:	afffe400 	.word	0xafffe400
 800253c:	40021000 	.word	0x40021000
 8002540:	40010000 	.word	0x40010000
 8002544:	50000400 	.word	0x50000400
 8002548:	50000800 	.word	0x50000800
 800254c:	50000c00 	.word	0x50000c00
 8002550:	40010400 	.word	0x40010400

08002554 <HAL_GPIO_WritePin>:
 8002554:	2a00      	cmp	r2, #0
 8002556:	d001      	beq.n	800255c <HAL_GPIO_WritePin+0x8>
 8002558:	6181      	str	r1, [r0, #24]
 800255a:	4770      	bx	lr
 800255c:	6281      	str	r1, [r0, #40]	; 0x28
 800255e:	e7fc      	b.n	800255a <HAL_GPIO_WritePin+0x6>

08002560 <I2C_Flush_TXDR>:
 8002560:	6803      	ldr	r3, [r0, #0]
 8002562:	699a      	ldr	r2, [r3, #24]
 8002564:	0792      	lsls	r2, r2, #30
 8002566:	d501      	bpl.n	800256c <I2C_Flush_TXDR+0xc>
 8002568:	2200      	movs	r2, #0
 800256a:	629a      	str	r2, [r3, #40]	; 0x28
 800256c:	2201      	movs	r2, #1
 800256e:	6999      	ldr	r1, [r3, #24]
 8002570:	4211      	tst	r1, r2
 8002572:	d102      	bne.n	800257a <I2C_Flush_TXDR+0x1a>
 8002574:	6999      	ldr	r1, [r3, #24]
 8002576:	430a      	orrs	r2, r1
 8002578:	619a      	str	r2, [r3, #24]
 800257a:	4770      	bx	lr

0800257c <I2C_TransferConfig>:
 800257c:	b530      	push	{r4, r5, lr}
 800257e:	9c03      	ldr	r4, [sp, #12]
 8002580:	6800      	ldr	r0, [r0, #0]
 8002582:	4323      	orrs	r3, r4
 8002584:	0412      	lsls	r2, r2, #16
 8002586:	0589      	lsls	r1, r1, #22
 8002588:	431a      	orrs	r2, r3
 800258a:	0d89      	lsrs	r1, r1, #22
 800258c:	4b05      	ldr	r3, [pc, #20]	; (80025a4 <I2C_TransferConfig+0x28>)
 800258e:	6845      	ldr	r5, [r0, #4]
 8002590:	430a      	orrs	r2, r1
 8002592:	0d64      	lsrs	r4, r4, #21
 8002594:	431c      	orrs	r4, r3
 8002596:	0052      	lsls	r2, r2, #1
 8002598:	43a5      	bics	r5, r4
 800259a:	0852      	lsrs	r2, r2, #1
 800259c:	432a      	orrs	r2, r5
 800259e:	6042      	str	r2, [r0, #4]
 80025a0:	bd30      	pop	{r4, r5, pc}
 80025a2:	46c0      	nop			; (mov r8, r8)
 80025a4:	03ff63ff 	.word	0x03ff63ff

080025a8 <I2C_IsErrorOccurred>:
 80025a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80025aa:	0015      	movs	r5, r2
 80025ac:	6802      	ldr	r2, [r0, #0]
 80025ae:	000e      	movs	r6, r1
 80025b0:	6991      	ldr	r1, [r2, #24]
 80025b2:	2310      	movs	r3, #16
 80025b4:	000f      	movs	r7, r1
 80025b6:	0004      	movs	r4, r0
 80025b8:	401f      	ands	r7, r3
 80025ba:	2000      	movs	r0, #0
 80025bc:	4219      	tst	r1, r3
 80025be:	d00e      	beq.n	80025de <I2C_IsErrorOccurred+0x36>
 80025c0:	2720      	movs	r7, #32
 80025c2:	61d3      	str	r3, [r2, #28]
 80025c4:	9000      	str	r0, [sp, #0]
 80025c6:	9001      	str	r0, [sp, #4]
 80025c8:	6823      	ldr	r3, [r4, #0]
 80025ca:	699a      	ldr	r2, [r3, #24]
 80025cc:	423a      	tst	r2, r7
 80025ce:	d164      	bne.n	800269a <I2C_IsErrorOccurred+0xf2>
 80025d0:	9a01      	ldr	r2, [sp, #4]
 80025d2:	2a00      	cmp	r2, #0
 80025d4:	d032      	beq.n	800263c <I2C_IsErrorOccurred+0x94>
 80025d6:	2704      	movs	r7, #4
 80025d8:	2001      	movs	r0, #1
 80025da:	9b00      	ldr	r3, [sp, #0]
 80025dc:	431f      	orrs	r7, r3
 80025de:	2180      	movs	r1, #128	; 0x80
 80025e0:	6823      	ldr	r3, [r4, #0]
 80025e2:	0049      	lsls	r1, r1, #1
 80025e4:	699a      	ldr	r2, [r3, #24]
 80025e6:	420a      	tst	r2, r1
 80025e8:	d002      	beq.n	80025f0 <I2C_IsErrorOccurred+0x48>
 80025ea:	2001      	movs	r0, #1
 80025ec:	61d9      	str	r1, [r3, #28]
 80025ee:	4307      	orrs	r7, r0
 80025f0:	2180      	movs	r1, #128	; 0x80
 80025f2:	00c9      	lsls	r1, r1, #3
 80025f4:	420a      	tst	r2, r1
 80025f6:	d003      	beq.n	8002600 <I2C_IsErrorOccurred+0x58>
 80025f8:	2008      	movs	r0, #8
 80025fa:	61d9      	str	r1, [r3, #28]
 80025fc:	4307      	orrs	r7, r0
 80025fe:	3807      	subs	r0, #7
 8002600:	2180      	movs	r1, #128	; 0x80
 8002602:	0089      	lsls	r1, r1, #2
 8002604:	420a      	tst	r2, r1
 8002606:	d04d      	beq.n	80026a4 <I2C_IsErrorOccurred+0xfc>
 8002608:	2202      	movs	r2, #2
 800260a:	61d9      	str	r1, [r3, #28]
 800260c:	4317      	orrs	r7, r2
 800260e:	0020      	movs	r0, r4
 8002610:	f7ff ffa6 	bl	8002560 <I2C_Flush_TXDR>
 8002614:	6822      	ldr	r2, [r4, #0]
 8002616:	4925      	ldr	r1, [pc, #148]	; (80026ac <I2C_IsErrorOccurred+0x104>)
 8002618:	6853      	ldr	r3, [r2, #4]
 800261a:	400b      	ands	r3, r1
 800261c:	6053      	str	r3, [r2, #4]
 800261e:	0023      	movs	r3, r4
 8002620:	2220      	movs	r2, #32
 8002622:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002624:	3341      	adds	r3, #65	; 0x41
 8002626:	4307      	orrs	r7, r0
 8002628:	6467      	str	r7, [r4, #68]	; 0x44
 800262a:	701a      	strb	r2, [r3, #0]
 800262c:	0022      	movs	r2, r4
 800262e:	2300      	movs	r3, #0
 8002630:	3242      	adds	r2, #66	; 0x42
 8002632:	3440      	adds	r4, #64	; 0x40
 8002634:	7013      	strb	r3, [r2, #0]
 8002636:	2001      	movs	r0, #1
 8002638:	7023      	strb	r3, [r4, #0]
 800263a:	e035      	b.n	80026a8 <I2C_IsErrorOccurred+0x100>
 800263c:	1c72      	adds	r2, r6, #1
 800263e:	d0c4      	beq.n	80025ca <I2C_IsErrorOccurred+0x22>
 8002640:	f7ff fe6c 	bl	800231c <HAL_GetTick>
 8002644:	1b40      	subs	r0, r0, r5
 8002646:	42b0      	cmp	r0, r6
 8002648:	d801      	bhi.n	800264e <I2C_IsErrorOccurred+0xa6>
 800264a:	2e00      	cmp	r6, #0
 800264c:	d1bc      	bne.n	80025c8 <I2C_IsErrorOccurred+0x20>
 800264e:	0022      	movs	r2, r4
 8002650:	6823      	ldr	r3, [r4, #0]
 8002652:	3242      	adds	r2, #66	; 0x42
 8002654:	6858      	ldr	r0, [r3, #4]
 8002656:	7811      	ldrb	r1, [r2, #0]
 8002658:	b2ca      	uxtb	r2, r1
 800265a:	2180      	movs	r1, #128	; 0x80
 800265c:	4694      	mov	ip, r2
 800265e:	699a      	ldr	r2, [r3, #24]
 8002660:	0209      	lsls	r1, r1, #8
 8002662:	420a      	tst	r2, r1
 8002664:	d00c      	beq.n	8002680 <I2C_IsErrorOccurred+0xd8>
 8002666:	2280      	movs	r2, #128	; 0x80
 8002668:	01d2      	lsls	r2, r2, #7
 800266a:	4210      	tst	r0, r2
 800266c:	d108      	bne.n	8002680 <I2C_IsErrorOccurred+0xd8>
 800266e:	4661      	mov	r1, ip
 8002670:	2920      	cmp	r1, #32
 8002672:	d005      	beq.n	8002680 <I2C_IsErrorOccurred+0xd8>
 8002674:	6859      	ldr	r1, [r3, #4]
 8002676:	430a      	orrs	r2, r1
 8002678:	605a      	str	r2, [r3, #4]
 800267a:	f7ff fe4f 	bl	800231c <HAL_GetTick>
 800267e:	0005      	movs	r5, r0
 8002680:	6823      	ldr	r3, [r4, #0]
 8002682:	699b      	ldr	r3, [r3, #24]
 8002684:	423b      	tst	r3, r7
 8002686:	d19f      	bne.n	80025c8 <I2C_IsErrorOccurred+0x20>
 8002688:	f7ff fe48 	bl	800231c <HAL_GetTick>
 800268c:	1b40      	subs	r0, r0, r5
 800268e:	2819      	cmp	r0, #25
 8002690:	d9f6      	bls.n	8002680 <I2C_IsErrorOccurred+0xd8>
 8002692:	2301      	movs	r3, #1
 8002694:	9700      	str	r7, [sp, #0]
 8002696:	9301      	str	r3, [sp, #4]
 8002698:	e796      	b.n	80025c8 <I2C_IsErrorOccurred+0x20>
 800269a:	9a01      	ldr	r2, [sp, #4]
 800269c:	2a00      	cmp	r2, #0
 800269e:	d19a      	bne.n	80025d6 <I2C_IsErrorOccurred+0x2e>
 80026a0:	61df      	str	r7, [r3, #28]
 80026a2:	e798      	b.n	80025d6 <I2C_IsErrorOccurred+0x2e>
 80026a4:	2800      	cmp	r0, #0
 80026a6:	d1b2      	bne.n	800260e <I2C_IsErrorOccurred+0x66>
 80026a8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80026aa:	46c0      	nop			; (mov r8, r8)
 80026ac:	fe00e800 	.word	0xfe00e800

080026b0 <I2C_WaitOnTXISFlagUntilTimeout>:
 80026b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026b2:	0004      	movs	r4, r0
 80026b4:	000d      	movs	r5, r1
 80026b6:	0016      	movs	r6, r2
 80026b8:	2702      	movs	r7, #2
 80026ba:	6823      	ldr	r3, [r4, #0]
 80026bc:	699b      	ldr	r3, [r3, #24]
 80026be:	423b      	tst	r3, r7
 80026c0:	d001      	beq.n	80026c6 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
 80026c2:	2000      	movs	r0, #0
 80026c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80026c6:	0032      	movs	r2, r6
 80026c8:	0029      	movs	r1, r5
 80026ca:	0020      	movs	r0, r4
 80026cc:	f7ff ff6c 	bl	80025a8 <I2C_IsErrorOccurred>
 80026d0:	2800      	cmp	r0, #0
 80026d2:	d118      	bne.n	8002706 <I2C_WaitOnTXISFlagUntilTimeout+0x56>
 80026d4:	1c6b      	adds	r3, r5, #1
 80026d6:	d0f0      	beq.n	80026ba <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 80026d8:	f7ff fe20 	bl	800231c <HAL_GetTick>
 80026dc:	1b80      	subs	r0, r0, r6
 80026de:	42a8      	cmp	r0, r5
 80026e0:	d801      	bhi.n	80026e6 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 80026e2:	2d00      	cmp	r5, #0
 80026e4:	d1e9      	bne.n	80026ba <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 80026e6:	6823      	ldr	r3, [r4, #0]
 80026e8:	699b      	ldr	r3, [r3, #24]
 80026ea:	001a      	movs	r2, r3
 80026ec:	403a      	ands	r2, r7
 80026ee:	423b      	tst	r3, r7
 80026f0:	d1e3      	bne.n	80026ba <I2C_WaitOnTXISFlagUntilTimeout+0xa>
 80026f2:	2120      	movs	r1, #32
 80026f4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80026f6:	430b      	orrs	r3, r1
 80026f8:	6463      	str	r3, [r4, #68]	; 0x44
 80026fa:	0023      	movs	r3, r4
 80026fc:	3440      	adds	r4, #64	; 0x40
 80026fe:	3341      	adds	r3, #65	; 0x41
 8002700:	7019      	strb	r1, [r3, #0]
 8002702:	705a      	strb	r2, [r3, #1]
 8002704:	7022      	strb	r2, [r4, #0]
 8002706:	2001      	movs	r0, #1
 8002708:	e7dc      	b.n	80026c4 <I2C_WaitOnTXISFlagUntilTimeout+0x14>

0800270a <I2C_WaitOnFlagUntilTimeout>:
 800270a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800270c:	0004      	movs	r4, r0
 800270e:	000d      	movs	r5, r1
 8002710:	0017      	movs	r7, r2
 8002712:	001e      	movs	r6, r3
 8002714:	6822      	ldr	r2, [r4, #0]
 8002716:	6993      	ldr	r3, [r2, #24]
 8002718:	402b      	ands	r3, r5
 800271a:	1b5b      	subs	r3, r3, r5
 800271c:	4259      	negs	r1, r3
 800271e:	414b      	adcs	r3, r1
 8002720:	42bb      	cmp	r3, r7
 8002722:	d001      	beq.n	8002728 <I2C_WaitOnFlagUntilTimeout+0x1e>
 8002724:	2000      	movs	r0, #0
 8002726:	e01f      	b.n	8002768 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8002728:	1c73      	adds	r3, r6, #1
 800272a:	d0f4      	beq.n	8002716 <I2C_WaitOnFlagUntilTimeout+0xc>
 800272c:	f7ff fdf6 	bl	800231c <HAL_GetTick>
 8002730:	9b06      	ldr	r3, [sp, #24]
 8002732:	1ac0      	subs	r0, r0, r3
 8002734:	42b0      	cmp	r0, r6
 8002736:	d801      	bhi.n	800273c <I2C_WaitOnFlagUntilTimeout+0x32>
 8002738:	2e00      	cmp	r6, #0
 800273a:	d1eb      	bne.n	8002714 <I2C_WaitOnFlagUntilTimeout+0xa>
 800273c:	6823      	ldr	r3, [r4, #0]
 800273e:	699b      	ldr	r3, [r3, #24]
 8002740:	402b      	ands	r3, r5
 8002742:	1b5b      	subs	r3, r3, r5
 8002744:	425a      	negs	r2, r3
 8002746:	4153      	adcs	r3, r2
 8002748:	42bb      	cmp	r3, r7
 800274a:	d1e3      	bne.n	8002714 <I2C_WaitOnFlagUntilTimeout+0xa>
 800274c:	2220      	movs	r2, #32
 800274e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8002750:	2001      	movs	r0, #1
 8002752:	4313      	orrs	r3, r2
 8002754:	6463      	str	r3, [r4, #68]	; 0x44
 8002756:	0023      	movs	r3, r4
 8002758:	3341      	adds	r3, #65	; 0x41
 800275a:	701a      	strb	r2, [r3, #0]
 800275c:	0022      	movs	r2, r4
 800275e:	2300      	movs	r3, #0
 8002760:	3242      	adds	r2, #66	; 0x42
 8002762:	3440      	adds	r4, #64	; 0x40
 8002764:	7013      	strb	r3, [r2, #0]
 8002766:	7023      	strb	r3, [r4, #0]
 8002768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800276a <I2C_WaitOnSTOPFlagUntilTimeout>:
 800276a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800276c:	0004      	movs	r4, r0
 800276e:	000e      	movs	r6, r1
 8002770:	0017      	movs	r7, r2
 8002772:	2520      	movs	r5, #32
 8002774:	6823      	ldr	r3, [r4, #0]
 8002776:	699b      	ldr	r3, [r3, #24]
 8002778:	422b      	tst	r3, r5
 800277a:	d001      	beq.n	8002780 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
 800277c:	2000      	movs	r0, #0
 800277e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002780:	003a      	movs	r2, r7
 8002782:	0031      	movs	r1, r6
 8002784:	0020      	movs	r0, r4
 8002786:	f7ff ff0f 	bl	80025a8 <I2C_IsErrorOccurred>
 800278a:	2800      	cmp	r0, #0
 800278c:	d115      	bne.n	80027ba <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
 800278e:	f7ff fdc5 	bl	800231c <HAL_GetTick>
 8002792:	1bc0      	subs	r0, r0, r7
 8002794:	42b0      	cmp	r0, r6
 8002796:	d801      	bhi.n	800279c <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 8002798:	2e00      	cmp	r6, #0
 800279a:	d1eb      	bne.n	8002774 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
 800279c:	6823      	ldr	r3, [r4, #0]
 800279e:	699b      	ldr	r3, [r3, #24]
 80027a0:	001a      	movs	r2, r3
 80027a2:	402a      	ands	r2, r5
 80027a4:	422b      	tst	r3, r5
 80027a6:	d1e5      	bne.n	8002774 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
 80027a8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80027aa:	432b      	orrs	r3, r5
 80027ac:	6463      	str	r3, [r4, #68]	; 0x44
 80027ae:	0023      	movs	r3, r4
 80027b0:	3440      	adds	r4, #64	; 0x40
 80027b2:	3341      	adds	r3, #65	; 0x41
 80027b4:	701d      	strb	r5, [r3, #0]
 80027b6:	705a      	strb	r2, [r3, #1]
 80027b8:	7022      	strb	r2, [r4, #0]
 80027ba:	2001      	movs	r0, #1
 80027bc:	e7df      	b.n	800277e <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
	...

080027c0 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80027c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027c2:	0004      	movs	r4, r0
 80027c4:	000d      	movs	r5, r1
 80027c6:	0017      	movs	r7, r2
 80027c8:	2604      	movs	r6, #4
 80027ca:	6823      	ldr	r3, [r4, #0]
 80027cc:	699b      	ldr	r3, [r3, #24]
 80027ce:	4233      	tst	r3, r6
 80027d0:	d111      	bne.n	80027f6 <I2C_WaitOnRXNEFlagUntilTimeout+0x36>
 80027d2:	003a      	movs	r2, r7
 80027d4:	0029      	movs	r1, r5
 80027d6:	0020      	movs	r0, r4
 80027d8:	f7ff fee6 	bl	80025a8 <I2C_IsErrorOccurred>
 80027dc:	2800      	cmp	r0, #0
 80027de:	d124      	bne.n	800282a <I2C_WaitOnRXNEFlagUntilTimeout+0x6a>
 80027e0:	2120      	movs	r1, #32
 80027e2:	6823      	ldr	r3, [r4, #0]
 80027e4:	699a      	ldr	r2, [r3, #24]
 80027e6:	420a      	tst	r2, r1
 80027e8:	d023      	beq.n	8002832 <I2C_WaitOnRXNEFlagUntilTimeout+0x72>
 80027ea:	699a      	ldr	r2, [r3, #24]
 80027ec:	4232      	tst	r2, r6
 80027ee:	d004      	beq.n	80027fa <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
 80027f0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80027f2:	2a00      	cmp	r2, #0
 80027f4:	d001      	beq.n	80027fa <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
 80027f6:	2000      	movs	r0, #0
 80027f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80027fa:	6999      	ldr	r1, [r3, #24]
 80027fc:	2210      	movs	r2, #16
 80027fe:	0008      	movs	r0, r1
 8002800:	4010      	ands	r0, r2
 8002802:	4211      	tst	r1, r2
 8002804:	d013      	beq.n	800282e <I2C_WaitOnRXNEFlagUntilTimeout+0x6e>
 8002806:	61da      	str	r2, [r3, #28]
 8002808:	3a0c      	subs	r2, #12
 800280a:	6462      	str	r2, [r4, #68]	; 0x44
 800280c:	2120      	movs	r1, #32
 800280e:	61d9      	str	r1, [r3, #28]
 8002810:	685a      	ldr	r2, [r3, #4]
 8002812:	4813      	ldr	r0, [pc, #76]	; (8002860 <I2C_WaitOnRXNEFlagUntilTimeout+0xa0>)
 8002814:	4002      	ands	r2, r0
 8002816:	605a      	str	r2, [r3, #4]
 8002818:	0023      	movs	r3, r4
 800281a:	0022      	movs	r2, r4
 800281c:	3341      	adds	r3, #65	; 0x41
 800281e:	7019      	strb	r1, [r3, #0]
 8002820:	2300      	movs	r3, #0
 8002822:	3242      	adds	r2, #66	; 0x42
 8002824:	3440      	adds	r4, #64	; 0x40
 8002826:	7013      	strb	r3, [r2, #0]
 8002828:	7023      	strb	r3, [r4, #0]
 800282a:	2001      	movs	r0, #1
 800282c:	e7e4      	b.n	80027f8 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
 800282e:	6460      	str	r0, [r4, #68]	; 0x44
 8002830:	e7ec      	b.n	800280c <I2C_WaitOnRXNEFlagUntilTimeout+0x4c>
 8002832:	f7ff fd73 	bl	800231c <HAL_GetTick>
 8002836:	1bc0      	subs	r0, r0, r7
 8002838:	42a8      	cmp	r0, r5
 800283a:	d801      	bhi.n	8002840 <I2C_WaitOnRXNEFlagUntilTimeout+0x80>
 800283c:	2d00      	cmp	r5, #0
 800283e:	d1c4      	bne.n	80027ca <I2C_WaitOnRXNEFlagUntilTimeout+0xa>
 8002840:	6823      	ldr	r3, [r4, #0]
 8002842:	699b      	ldr	r3, [r3, #24]
 8002844:	0019      	movs	r1, r3
 8002846:	4031      	ands	r1, r6
 8002848:	4233      	tst	r3, r6
 800284a:	d1be      	bne.n	80027ca <I2C_WaitOnRXNEFlagUntilTimeout+0xa>
 800284c:	2220      	movs	r2, #32
 800284e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8002850:	4313      	orrs	r3, r2
 8002852:	6463      	str	r3, [r4, #68]	; 0x44
 8002854:	0023      	movs	r3, r4
 8002856:	3440      	adds	r4, #64	; 0x40
 8002858:	3341      	adds	r3, #65	; 0x41
 800285a:	701a      	strb	r2, [r3, #0]
 800285c:	7021      	strb	r1, [r4, #0]
 800285e:	e7e4      	b.n	800282a <I2C_WaitOnRXNEFlagUntilTimeout+0x6a>
 8002860:	fe00e800 	.word	0xfe00e800

08002864 <HAL_I2C_Init>:
 8002864:	b570      	push	{r4, r5, r6, lr}
 8002866:	0004      	movs	r4, r0
 8002868:	2001      	movs	r0, #1
 800286a:	2c00      	cmp	r4, #0
 800286c:	d03f      	beq.n	80028ee <HAL_I2C_Init+0x8a>
 800286e:	0025      	movs	r5, r4
 8002870:	3541      	adds	r5, #65	; 0x41
 8002872:	782b      	ldrb	r3, [r5, #0]
 8002874:	b2da      	uxtb	r2, r3
 8002876:	2b00      	cmp	r3, #0
 8002878:	d105      	bne.n	8002886 <HAL_I2C_Init+0x22>
 800287a:	0023      	movs	r3, r4
 800287c:	3340      	adds	r3, #64	; 0x40
 800287e:	0020      	movs	r0, r4
 8002880:	701a      	strb	r2, [r3, #0]
 8002882:	f7ff fc23 	bl	80020cc <HAL_I2C_MspInit>
 8002886:	2324      	movs	r3, #36	; 0x24
 8002888:	2101      	movs	r1, #1
 800288a:	702b      	strb	r3, [r5, #0]
 800288c:	6823      	ldr	r3, [r4, #0]
 800288e:	481d      	ldr	r0, [pc, #116]	; (8002904 <HAL_I2C_Init+0xa0>)
 8002890:	681a      	ldr	r2, [r3, #0]
 8002892:	68a6      	ldr	r6, [r4, #8]
 8002894:	438a      	bics	r2, r1
 8002896:	601a      	str	r2, [r3, #0]
 8002898:	6861      	ldr	r1, [r4, #4]
 800289a:	4a1b      	ldr	r2, [pc, #108]	; (8002908 <HAL_I2C_Init+0xa4>)
 800289c:	400a      	ands	r2, r1
 800289e:	611a      	str	r2, [r3, #16]
 80028a0:	689a      	ldr	r2, [r3, #8]
 80028a2:	4002      	ands	r2, r0
 80028a4:	609a      	str	r2, [r3, #8]
 80028a6:	68e2      	ldr	r2, [r4, #12]
 80028a8:	2a01      	cmp	r2, #1
 80028aa:	d121      	bne.n	80028f0 <HAL_I2C_Init+0x8c>
 80028ac:	2180      	movs	r1, #128	; 0x80
 80028ae:	0209      	lsls	r1, r1, #8
 80028b0:	4331      	orrs	r1, r6
 80028b2:	6099      	str	r1, [r3, #8]
 80028b4:	685a      	ldr	r2, [r3, #4]
 80028b6:	4915      	ldr	r1, [pc, #84]	; (800290c <HAL_I2C_Init+0xa8>)
 80028b8:	4311      	orrs	r1, r2
 80028ba:	6059      	str	r1, [r3, #4]
 80028bc:	68da      	ldr	r2, [r3, #12]
 80028be:	6961      	ldr	r1, [r4, #20]
 80028c0:	4002      	ands	r2, r0
 80028c2:	60da      	str	r2, [r3, #12]
 80028c4:	6922      	ldr	r2, [r4, #16]
 80028c6:	2000      	movs	r0, #0
 80028c8:	430a      	orrs	r2, r1
 80028ca:	69a1      	ldr	r1, [r4, #24]
 80028cc:	0209      	lsls	r1, r1, #8
 80028ce:	430a      	orrs	r2, r1
 80028d0:	60da      	str	r2, [r3, #12]
 80028d2:	6a21      	ldr	r1, [r4, #32]
 80028d4:	69e2      	ldr	r2, [r4, #28]
 80028d6:	430a      	orrs	r2, r1
 80028d8:	601a      	str	r2, [r3, #0]
 80028da:	2201      	movs	r2, #1
 80028dc:	6819      	ldr	r1, [r3, #0]
 80028de:	430a      	orrs	r2, r1
 80028e0:	601a      	str	r2, [r3, #0]
 80028e2:	2320      	movs	r3, #32
 80028e4:	6460      	str	r0, [r4, #68]	; 0x44
 80028e6:	702b      	strb	r3, [r5, #0]
 80028e8:	6320      	str	r0, [r4, #48]	; 0x30
 80028ea:	3442      	adds	r4, #66	; 0x42
 80028ec:	7020      	strb	r0, [r4, #0]
 80028ee:	bd70      	pop	{r4, r5, r6, pc}
 80028f0:	2184      	movs	r1, #132	; 0x84
 80028f2:	0209      	lsls	r1, r1, #8
 80028f4:	4331      	orrs	r1, r6
 80028f6:	6099      	str	r1, [r3, #8]
 80028f8:	2a02      	cmp	r2, #2
 80028fa:	d1db      	bne.n	80028b4 <HAL_I2C_Init+0x50>
 80028fc:	2280      	movs	r2, #128	; 0x80
 80028fe:	0112      	lsls	r2, r2, #4
 8002900:	605a      	str	r2, [r3, #4]
 8002902:	e7d7      	b.n	80028b4 <HAL_I2C_Init+0x50>
 8002904:	ffff7fff 	.word	0xffff7fff
 8002908:	f0ffffff 	.word	0xf0ffffff
 800290c:	02008000 	.word	0x02008000

08002910 <HAL_I2C_Master_Transmit>:
 8002910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002912:	b087      	sub	sp, #28
 8002914:	9305      	str	r3, [sp, #20]
 8002916:	0003      	movs	r3, r0
 8002918:	3341      	adds	r3, #65	; 0x41
 800291a:	9204      	str	r2, [sp, #16]
 800291c:	9303      	str	r3, [sp, #12]
 800291e:	781b      	ldrb	r3, [r3, #0]
 8002920:	0004      	movs	r4, r0
 8002922:	000f      	movs	r7, r1
 8002924:	2002      	movs	r0, #2
 8002926:	2b20      	cmp	r3, #32
 8002928:	d114      	bne.n	8002954 <HAL_I2C_Master_Transmit+0x44>
 800292a:	0023      	movs	r3, r4
 800292c:	3340      	adds	r3, #64	; 0x40
 800292e:	781a      	ldrb	r2, [r3, #0]
 8002930:	2a01      	cmp	r2, #1
 8002932:	d00f      	beq.n	8002954 <HAL_I2C_Master_Transmit+0x44>
 8002934:	2601      	movs	r6, #1
 8002936:	701e      	strb	r6, [r3, #0]
 8002938:	f7ff fcf0 	bl	800231c <HAL_GetTick>
 800293c:	2180      	movs	r1, #128	; 0x80
 800293e:	0005      	movs	r5, r0
 8002940:	9000      	str	r0, [sp, #0]
 8002942:	2319      	movs	r3, #25
 8002944:	0032      	movs	r2, r6
 8002946:	0020      	movs	r0, r4
 8002948:	0209      	lsls	r1, r1, #8
 800294a:	f7ff fede 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 800294e:	2800      	cmp	r0, #0
 8002950:	d002      	beq.n	8002958 <HAL_I2C_Master_Transmit+0x48>
 8002952:	2001      	movs	r0, #1
 8002954:	b007      	add	sp, #28
 8002956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002958:	2321      	movs	r3, #33	; 0x21
 800295a:	0026      	movs	r6, r4
 800295c:	9a03      	ldr	r2, [sp, #12]
 800295e:	3642      	adds	r6, #66	; 0x42
 8002960:	7013      	strb	r3, [r2, #0]
 8002962:	3b11      	subs	r3, #17
 8002964:	7033      	strb	r3, [r6, #0]
 8002966:	9b04      	ldr	r3, [sp, #16]
 8002968:	6460      	str	r0, [r4, #68]	; 0x44
 800296a:	6263      	str	r3, [r4, #36]	; 0x24
 800296c:	9b05      	ldr	r3, [sp, #20]
 800296e:	6360      	str	r0, [r4, #52]	; 0x34
 8002970:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002972:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002974:	4b2d      	ldr	r3, [pc, #180]	; (8002a2c <HAL_I2C_Master_Transmit+0x11c>)
 8002976:	2aff      	cmp	r2, #255	; 0xff
 8002978:	d920      	bls.n	80029bc <HAL_I2C_Master_Transmit+0xac>
 800297a:	22ff      	movs	r2, #255	; 0xff
 800297c:	8522      	strh	r2, [r4, #40]	; 0x28
 800297e:	9300      	str	r3, [sp, #0]
 8002980:	2380      	movs	r3, #128	; 0x80
 8002982:	045b      	lsls	r3, r3, #17
 8002984:	0039      	movs	r1, r7
 8002986:	0020      	movs	r0, r4
 8002988:	f7ff fdf8 	bl	800257c <I2C_TransferConfig>
 800298c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800298e:	002a      	movs	r2, r5
 8002990:	0020      	movs	r0, r4
 8002992:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002994:	2b00      	cmp	r3, #0
 8002996:	d119      	bne.n	80029cc <HAL_I2C_Master_Transmit+0xbc>
 8002998:	f7ff fee7 	bl	800276a <I2C_WaitOnSTOPFlagUntilTimeout>
 800299c:	2800      	cmp	r0, #0
 800299e:	d1d8      	bne.n	8002952 <HAL_I2C_Master_Transmit+0x42>
 80029a0:	2120      	movs	r1, #32
 80029a2:	6823      	ldr	r3, [r4, #0]
 80029a4:	4d22      	ldr	r5, [pc, #136]	; (8002a30 <HAL_I2C_Master_Transmit+0x120>)
 80029a6:	61d9      	str	r1, [r3, #28]
 80029a8:	685a      	ldr	r2, [r3, #4]
 80029aa:	402a      	ands	r2, r5
 80029ac:	605a      	str	r2, [r3, #4]
 80029ae:	0023      	movs	r3, r4
 80029b0:	3440      	adds	r4, #64	; 0x40
 80029b2:	3341      	adds	r3, #65	; 0x41
 80029b4:	7019      	strb	r1, [r3, #0]
 80029b6:	7030      	strb	r0, [r6, #0]
 80029b8:	7020      	strb	r0, [r4, #0]
 80029ba:	e7cb      	b.n	8002954 <HAL_I2C_Master_Transmit+0x44>
 80029bc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80029be:	b292      	uxth	r2, r2
 80029c0:	8522      	strh	r2, [r4, #40]	; 0x28
 80029c2:	b2d2      	uxtb	r2, r2
 80029c4:	9300      	str	r3, [sp, #0]
 80029c6:	2380      	movs	r3, #128	; 0x80
 80029c8:	049b      	lsls	r3, r3, #18
 80029ca:	e7db      	b.n	8002984 <HAL_I2C_Master_Transmit+0x74>
 80029cc:	f7ff fe70 	bl	80026b0 <I2C_WaitOnTXISFlagUntilTimeout>
 80029d0:	2800      	cmp	r0, #0
 80029d2:	d1be      	bne.n	8002952 <HAL_I2C_Master_Transmit+0x42>
 80029d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80029d6:	6822      	ldr	r2, [r4, #0]
 80029d8:	7819      	ldrb	r1, [r3, #0]
 80029da:	3301      	adds	r3, #1
 80029dc:	6291      	str	r1, [r2, #40]	; 0x28
 80029de:	6263      	str	r3, [r4, #36]	; 0x24
 80029e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80029e2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80029e4:	3b01      	subs	r3, #1
 80029e6:	b29b      	uxth	r3, r3
 80029e8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80029ea:	3a01      	subs	r2, #1
 80029ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80029ee:	b292      	uxth	r2, r2
 80029f0:	8522      	strh	r2, [r4, #40]	; 0x28
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d0ca      	beq.n	800298c <HAL_I2C_Master_Transmit+0x7c>
 80029f6:	2a00      	cmp	r2, #0
 80029f8:	d1c8      	bne.n	800298c <HAL_I2C_Master_Transmit+0x7c>
 80029fa:	2180      	movs	r1, #128	; 0x80
 80029fc:	0020      	movs	r0, r4
 80029fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a00:	9500      	str	r5, [sp, #0]
 8002a02:	f7ff fe82 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002a06:	2800      	cmp	r0, #0
 8002a08:	d1a3      	bne.n	8002952 <HAL_I2C_Master_Transmit+0x42>
 8002a0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002a0c:	2bff      	cmp	r3, #255	; 0xff
 8002a0e:	d906      	bls.n	8002a1e <HAL_I2C_Master_Transmit+0x10e>
 8002a10:	23ff      	movs	r3, #255	; 0xff
 8002a12:	8523      	strh	r3, [r4, #40]	; 0x28
 8002a14:	2380      	movs	r3, #128	; 0x80
 8002a16:	22ff      	movs	r2, #255	; 0xff
 8002a18:	9000      	str	r0, [sp, #0]
 8002a1a:	045b      	lsls	r3, r3, #17
 8002a1c:	e7b2      	b.n	8002984 <HAL_I2C_Master_Transmit+0x74>
 8002a1e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002a20:	b292      	uxth	r2, r2
 8002a22:	8522      	strh	r2, [r4, #40]	; 0x28
 8002a24:	b2d2      	uxtb	r2, r2
 8002a26:	9000      	str	r0, [sp, #0]
 8002a28:	e7cd      	b.n	80029c6 <HAL_I2C_Master_Transmit+0xb6>
 8002a2a:	46c0      	nop			; (mov r8, r8)
 8002a2c:	80002000 	.word	0x80002000
 8002a30:	fe00e800 	.word	0xfe00e800

08002a34 <HAL_I2C_Master_Receive>:
 8002a34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a36:	b087      	sub	sp, #28
 8002a38:	9305      	str	r3, [sp, #20]
 8002a3a:	0003      	movs	r3, r0
 8002a3c:	3341      	adds	r3, #65	; 0x41
 8002a3e:	9204      	str	r2, [sp, #16]
 8002a40:	9303      	str	r3, [sp, #12]
 8002a42:	781b      	ldrb	r3, [r3, #0]
 8002a44:	0004      	movs	r4, r0
 8002a46:	000f      	movs	r7, r1
 8002a48:	2002      	movs	r0, #2
 8002a4a:	2b20      	cmp	r3, #32
 8002a4c:	d114      	bne.n	8002a78 <HAL_I2C_Master_Receive+0x44>
 8002a4e:	0023      	movs	r3, r4
 8002a50:	3340      	adds	r3, #64	; 0x40
 8002a52:	781a      	ldrb	r2, [r3, #0]
 8002a54:	2a01      	cmp	r2, #1
 8002a56:	d00f      	beq.n	8002a78 <HAL_I2C_Master_Receive+0x44>
 8002a58:	2601      	movs	r6, #1
 8002a5a:	701e      	strb	r6, [r3, #0]
 8002a5c:	f7ff fc5e 	bl	800231c <HAL_GetTick>
 8002a60:	2180      	movs	r1, #128	; 0x80
 8002a62:	0005      	movs	r5, r0
 8002a64:	9000      	str	r0, [sp, #0]
 8002a66:	2319      	movs	r3, #25
 8002a68:	0032      	movs	r2, r6
 8002a6a:	0020      	movs	r0, r4
 8002a6c:	0209      	lsls	r1, r1, #8
 8002a6e:	f7ff fe4c 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002a72:	2800      	cmp	r0, #0
 8002a74:	d002      	beq.n	8002a7c <HAL_I2C_Master_Receive+0x48>
 8002a76:	2001      	movs	r0, #1
 8002a78:	b007      	add	sp, #28
 8002a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a7c:	2322      	movs	r3, #34	; 0x22
 8002a7e:	0026      	movs	r6, r4
 8002a80:	9a03      	ldr	r2, [sp, #12]
 8002a82:	3642      	adds	r6, #66	; 0x42
 8002a84:	7013      	strb	r3, [r2, #0]
 8002a86:	3b12      	subs	r3, #18
 8002a88:	7033      	strb	r3, [r6, #0]
 8002a8a:	9b04      	ldr	r3, [sp, #16]
 8002a8c:	6460      	str	r0, [r4, #68]	; 0x44
 8002a8e:	6263      	str	r3, [r4, #36]	; 0x24
 8002a90:	9b05      	ldr	r3, [sp, #20]
 8002a92:	6360      	str	r0, [r4, #52]	; 0x34
 8002a94:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002a96:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002a98:	4b2d      	ldr	r3, [pc, #180]	; (8002b50 <HAL_I2C_Master_Receive+0x11c>)
 8002a9a:	2aff      	cmp	r2, #255	; 0xff
 8002a9c:	d920      	bls.n	8002ae0 <HAL_I2C_Master_Receive+0xac>
 8002a9e:	22ff      	movs	r2, #255	; 0xff
 8002aa0:	8522      	strh	r2, [r4, #40]	; 0x28
 8002aa2:	9300      	str	r3, [sp, #0]
 8002aa4:	2380      	movs	r3, #128	; 0x80
 8002aa6:	045b      	lsls	r3, r3, #17
 8002aa8:	0039      	movs	r1, r7
 8002aaa:	0020      	movs	r0, r4
 8002aac:	f7ff fd66 	bl	800257c <I2C_TransferConfig>
 8002ab0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002ab2:	002a      	movs	r2, r5
 8002ab4:	0020      	movs	r0, r4
 8002ab6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d119      	bne.n	8002af0 <HAL_I2C_Master_Receive+0xbc>
 8002abc:	f7ff fe55 	bl	800276a <I2C_WaitOnSTOPFlagUntilTimeout>
 8002ac0:	2800      	cmp	r0, #0
 8002ac2:	d1d8      	bne.n	8002a76 <HAL_I2C_Master_Receive+0x42>
 8002ac4:	2120      	movs	r1, #32
 8002ac6:	6823      	ldr	r3, [r4, #0]
 8002ac8:	4d22      	ldr	r5, [pc, #136]	; (8002b54 <HAL_I2C_Master_Receive+0x120>)
 8002aca:	61d9      	str	r1, [r3, #28]
 8002acc:	685a      	ldr	r2, [r3, #4]
 8002ace:	402a      	ands	r2, r5
 8002ad0:	605a      	str	r2, [r3, #4]
 8002ad2:	0023      	movs	r3, r4
 8002ad4:	3440      	adds	r4, #64	; 0x40
 8002ad6:	3341      	adds	r3, #65	; 0x41
 8002ad8:	7019      	strb	r1, [r3, #0]
 8002ada:	7030      	strb	r0, [r6, #0]
 8002adc:	7020      	strb	r0, [r4, #0]
 8002ade:	e7cb      	b.n	8002a78 <HAL_I2C_Master_Receive+0x44>
 8002ae0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002ae2:	b292      	uxth	r2, r2
 8002ae4:	8522      	strh	r2, [r4, #40]	; 0x28
 8002ae6:	b2d2      	uxtb	r2, r2
 8002ae8:	9300      	str	r3, [sp, #0]
 8002aea:	2380      	movs	r3, #128	; 0x80
 8002aec:	049b      	lsls	r3, r3, #18
 8002aee:	e7db      	b.n	8002aa8 <HAL_I2C_Master_Receive+0x74>
 8002af0:	f7ff fe66 	bl	80027c0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8002af4:	2800      	cmp	r0, #0
 8002af6:	d1be      	bne.n	8002a76 <HAL_I2C_Master_Receive+0x42>
 8002af8:	6823      	ldr	r3, [r4, #0]
 8002afa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002afc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002afe:	7013      	strb	r3, [r2, #0]
 8002b00:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002b02:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002b04:	3301      	adds	r3, #1
 8002b06:	6263      	str	r3, [r4, #36]	; 0x24
 8002b08:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002b0a:	3a01      	subs	r2, #1
 8002b0c:	3b01      	subs	r3, #1
 8002b0e:	b29b      	uxth	r3, r3
 8002b10:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002b12:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002b14:	b292      	uxth	r2, r2
 8002b16:	8522      	strh	r2, [r4, #40]	; 0x28
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d0c9      	beq.n	8002ab0 <HAL_I2C_Master_Receive+0x7c>
 8002b1c:	2a00      	cmp	r2, #0
 8002b1e:	d1c7      	bne.n	8002ab0 <HAL_I2C_Master_Receive+0x7c>
 8002b20:	2180      	movs	r1, #128	; 0x80
 8002b22:	0020      	movs	r0, r4
 8002b24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b26:	9500      	str	r5, [sp, #0]
 8002b28:	f7ff fdef 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002b2c:	2800      	cmp	r0, #0
 8002b2e:	d1a2      	bne.n	8002a76 <HAL_I2C_Master_Receive+0x42>
 8002b30:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002b32:	2bff      	cmp	r3, #255	; 0xff
 8002b34:	d906      	bls.n	8002b44 <HAL_I2C_Master_Receive+0x110>
 8002b36:	23ff      	movs	r3, #255	; 0xff
 8002b38:	8523      	strh	r3, [r4, #40]	; 0x28
 8002b3a:	2380      	movs	r3, #128	; 0x80
 8002b3c:	22ff      	movs	r2, #255	; 0xff
 8002b3e:	9000      	str	r0, [sp, #0]
 8002b40:	045b      	lsls	r3, r3, #17
 8002b42:	e7b1      	b.n	8002aa8 <HAL_I2C_Master_Receive+0x74>
 8002b44:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002b46:	b292      	uxth	r2, r2
 8002b48:	8522      	strh	r2, [r4, #40]	; 0x28
 8002b4a:	b2d2      	uxtb	r2, r2
 8002b4c:	9000      	str	r0, [sp, #0]
 8002b4e:	e7cc      	b.n	8002aea <HAL_I2C_Master_Receive+0xb6>
 8002b50:	80002400 	.word	0x80002400
 8002b54:	fe00e800 	.word	0xfe00e800

08002b58 <HAL_I2C_Mem_Write>:
 8002b58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b5a:	b089      	sub	sp, #36	; 0x24
 8002b5c:	9304      	str	r3, [sp, #16]
 8002b5e:	ab0e      	add	r3, sp, #56	; 0x38
 8002b60:	9203      	str	r2, [sp, #12]
 8002b62:	cb04      	ldmia	r3!, {r2}
 8002b64:	0004      	movs	r4, r0
 8002b66:	881b      	ldrh	r3, [r3, #0]
 8002b68:	9205      	str	r2, [sp, #20]
 8002b6a:	9306      	str	r3, [sp, #24]
 8002b6c:	0003      	movs	r3, r0
 8002b6e:	3341      	adds	r3, #65	; 0x41
 8002b70:	9307      	str	r3, [sp, #28]
 8002b72:	781b      	ldrb	r3, [r3, #0]
 8002b74:	000f      	movs	r7, r1
 8002b76:	2002      	movs	r0, #2
 8002b78:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8002b7a:	2b20      	cmp	r3, #32
 8002b7c:	d108      	bne.n	8002b90 <HAL_I2C_Mem_Write+0x38>
 8002b7e:	2a00      	cmp	r2, #0
 8002b80:	d002      	beq.n	8002b88 <HAL_I2C_Mem_Write+0x30>
 8002b82:	9b06      	ldr	r3, [sp, #24]
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	d105      	bne.n	8002b94 <HAL_I2C_Mem_Write+0x3c>
 8002b88:	2380      	movs	r3, #128	; 0x80
 8002b8a:	009b      	lsls	r3, r3, #2
 8002b8c:	6463      	str	r3, [r4, #68]	; 0x44
 8002b8e:	2001      	movs	r0, #1
 8002b90:	b009      	add	sp, #36	; 0x24
 8002b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b94:	0023      	movs	r3, r4
 8002b96:	3340      	adds	r3, #64	; 0x40
 8002b98:	781a      	ldrb	r2, [r3, #0]
 8002b9a:	2002      	movs	r0, #2
 8002b9c:	2a01      	cmp	r2, #1
 8002b9e:	d0f7      	beq.n	8002b90 <HAL_I2C_Mem_Write+0x38>
 8002ba0:	2201      	movs	r2, #1
 8002ba2:	701a      	strb	r2, [r3, #0]
 8002ba4:	f7ff fbba 	bl	800231c <HAL_GetTick>
 8002ba8:	2180      	movs	r1, #128	; 0x80
 8002baa:	0005      	movs	r5, r0
 8002bac:	9000      	str	r0, [sp, #0]
 8002bae:	2319      	movs	r3, #25
 8002bb0:	2201      	movs	r2, #1
 8002bb2:	0020      	movs	r0, r4
 8002bb4:	0209      	lsls	r1, r1, #8
 8002bb6:	f7ff fda8 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002bba:	2800      	cmp	r0, #0
 8002bbc:	d1e7      	bne.n	8002b8e <HAL_I2C_Mem_Write+0x36>
 8002bbe:	2321      	movs	r3, #33	; 0x21
 8002bc0:	9a07      	ldr	r2, [sp, #28]
 8002bc2:	0039      	movs	r1, r7
 8002bc4:	7013      	strb	r3, [r2, #0]
 8002bc6:	0023      	movs	r3, r4
 8002bc8:	3342      	adds	r3, #66	; 0x42
 8002bca:	9307      	str	r3, [sp, #28]
 8002bcc:	2340      	movs	r3, #64	; 0x40
 8002bce:	9a07      	ldr	r2, [sp, #28]
 8002bd0:	7013      	strb	r3, [r2, #0]
 8002bd2:	9b05      	ldr	r3, [sp, #20]
 8002bd4:	6460      	str	r0, [r4, #68]	; 0x44
 8002bd6:	6263      	str	r3, [r4, #36]	; 0x24
 8002bd8:	9b06      	ldr	r3, [sp, #24]
 8002bda:	6360      	str	r0, [r4, #52]	; 0x34
 8002bdc:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002bde:	466b      	mov	r3, sp
 8002be0:	7c1a      	ldrb	r2, [r3, #16]
 8002be2:	4b4a      	ldr	r3, [pc, #296]	; (8002d0c <HAL_I2C_Mem_Write+0x1b4>)
 8002be4:	0020      	movs	r0, r4
 8002be6:	9300      	str	r3, [sp, #0]
 8002be8:	2380      	movs	r3, #128	; 0x80
 8002bea:	045b      	lsls	r3, r3, #17
 8002bec:	f7ff fcc6 	bl	800257c <I2C_TransferConfig>
 8002bf0:	002a      	movs	r2, r5
 8002bf2:	0031      	movs	r1, r6
 8002bf4:	0020      	movs	r0, r4
 8002bf6:	f7ff fd5b 	bl	80026b0 <I2C_WaitOnTXISFlagUntilTimeout>
 8002bfa:	2800      	cmp	r0, #0
 8002bfc:	d126      	bne.n	8002c4c <HAL_I2C_Mem_Write+0xf4>
 8002bfe:	9a04      	ldr	r2, [sp, #16]
 8002c00:	6823      	ldr	r3, [r4, #0]
 8002c02:	2a01      	cmp	r2, #1
 8002c04:	d116      	bne.n	8002c34 <HAL_I2C_Mem_Write+0xdc>
 8002c06:	466a      	mov	r2, sp
 8002c08:	7b12      	ldrb	r2, [r2, #12]
 8002c0a:	2180      	movs	r1, #128	; 0x80
 8002c0c:	629a      	str	r2, [r3, #40]	; 0x28
 8002c0e:	0020      	movs	r0, r4
 8002c10:	0033      	movs	r3, r6
 8002c12:	2200      	movs	r2, #0
 8002c14:	9500      	str	r5, [sp, #0]
 8002c16:	f7ff fd78 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002c1a:	2800      	cmp	r0, #0
 8002c1c:	d116      	bne.n	8002c4c <HAL_I2C_Mem_Write+0xf4>
 8002c1e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c20:	2bff      	cmp	r3, #255	; 0xff
 8002c22:	d817      	bhi.n	8002c54 <HAL_I2C_Mem_Write+0xfc>
 8002c24:	2380      	movs	r3, #128	; 0x80
 8002c26:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002c28:	049b      	lsls	r3, r3, #18
 8002c2a:	b292      	uxth	r2, r2
 8002c2c:	8522      	strh	r2, [r4, #40]	; 0x28
 8002c2e:	b2d2      	uxtb	r2, r2
 8002c30:	9000      	str	r0, [sp, #0]
 8002c32:	e014      	b.n	8002c5e <HAL_I2C_Mem_Write+0x106>
 8002c34:	9a03      	ldr	r2, [sp, #12]
 8002c36:	0031      	movs	r1, r6
 8002c38:	0a12      	lsrs	r2, r2, #8
 8002c3a:	629a      	str	r2, [r3, #40]	; 0x28
 8002c3c:	0020      	movs	r0, r4
 8002c3e:	002a      	movs	r2, r5
 8002c40:	f7ff fd36 	bl	80026b0 <I2C_WaitOnTXISFlagUntilTimeout>
 8002c44:	2800      	cmp	r0, #0
 8002c46:	d101      	bne.n	8002c4c <HAL_I2C_Mem_Write+0xf4>
 8002c48:	6823      	ldr	r3, [r4, #0]
 8002c4a:	e7dc      	b.n	8002c06 <HAL_I2C_Mem_Write+0xae>
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	3440      	adds	r4, #64	; 0x40
 8002c50:	7023      	strb	r3, [r4, #0]
 8002c52:	e79c      	b.n	8002b8e <HAL_I2C_Mem_Write+0x36>
 8002c54:	22ff      	movs	r2, #255	; 0xff
 8002c56:	2380      	movs	r3, #128	; 0x80
 8002c58:	8522      	strh	r2, [r4, #40]	; 0x28
 8002c5a:	045b      	lsls	r3, r3, #17
 8002c5c:	9000      	str	r0, [sp, #0]
 8002c5e:	0039      	movs	r1, r7
 8002c60:	0020      	movs	r0, r4
 8002c62:	f7ff fc8b 	bl	800257c <I2C_TransferConfig>
 8002c66:	002a      	movs	r2, r5
 8002c68:	0031      	movs	r1, r6
 8002c6a:	0020      	movs	r0, r4
 8002c6c:	f7ff fd20 	bl	80026b0 <I2C_WaitOnTXISFlagUntilTimeout>
 8002c70:	2800      	cmp	r0, #0
 8002c72:	d000      	beq.n	8002c76 <HAL_I2C_Mem_Write+0x11e>
 8002c74:	e78b      	b.n	8002b8e <HAL_I2C_Mem_Write+0x36>
 8002c76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002c78:	6822      	ldr	r2, [r4, #0]
 8002c7a:	7819      	ldrb	r1, [r3, #0]
 8002c7c:	3301      	adds	r3, #1
 8002c7e:	6291      	str	r1, [r2, #40]	; 0x28
 8002c80:	6263      	str	r3, [r4, #36]	; 0x24
 8002c82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c84:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002c86:	3b01      	subs	r3, #1
 8002c88:	b29b      	uxth	r3, r3
 8002c8a:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002c8c:	3a01      	subs	r2, #1
 8002c8e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002c90:	b292      	uxth	r2, r2
 8002c92:	8522      	strh	r2, [r4, #40]	; 0x28
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d017      	beq.n	8002cc8 <HAL_I2C_Mem_Write+0x170>
 8002c98:	2a00      	cmp	r2, #0
 8002c9a:	d115      	bne.n	8002cc8 <HAL_I2C_Mem_Write+0x170>
 8002c9c:	0033      	movs	r3, r6
 8002c9e:	2180      	movs	r1, #128	; 0x80
 8002ca0:	0020      	movs	r0, r4
 8002ca2:	9500      	str	r5, [sp, #0]
 8002ca4:	f7ff fd31 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002ca8:	2800      	cmp	r0, #0
 8002caa:	d000      	beq.n	8002cae <HAL_I2C_Mem_Write+0x156>
 8002cac:	e76f      	b.n	8002b8e <HAL_I2C_Mem_Write+0x36>
 8002cae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002cb0:	2bff      	cmp	r3, #255	; 0xff
 8002cb2:	d923      	bls.n	8002cfc <HAL_I2C_Mem_Write+0x1a4>
 8002cb4:	23ff      	movs	r3, #255	; 0xff
 8002cb6:	8523      	strh	r3, [r4, #40]	; 0x28
 8002cb8:	2380      	movs	r3, #128	; 0x80
 8002cba:	22ff      	movs	r2, #255	; 0xff
 8002cbc:	9000      	str	r0, [sp, #0]
 8002cbe:	045b      	lsls	r3, r3, #17
 8002cc0:	0039      	movs	r1, r7
 8002cc2:	0020      	movs	r0, r4
 8002cc4:	f7ff fc5a 	bl	800257c <I2C_TransferConfig>
 8002cc8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d1cb      	bne.n	8002c66 <HAL_I2C_Mem_Write+0x10e>
 8002cce:	002a      	movs	r2, r5
 8002cd0:	0031      	movs	r1, r6
 8002cd2:	0020      	movs	r0, r4
 8002cd4:	f7ff fd49 	bl	800276a <I2C_WaitOnSTOPFlagUntilTimeout>
 8002cd8:	2800      	cmp	r0, #0
 8002cda:	d000      	beq.n	8002cde <HAL_I2C_Mem_Write+0x186>
 8002cdc:	e757      	b.n	8002b8e <HAL_I2C_Mem_Write+0x36>
 8002cde:	2120      	movs	r1, #32
 8002ce0:	6823      	ldr	r3, [r4, #0]
 8002ce2:	4d0b      	ldr	r5, [pc, #44]	; (8002d10 <HAL_I2C_Mem_Write+0x1b8>)
 8002ce4:	61d9      	str	r1, [r3, #28]
 8002ce6:	685a      	ldr	r2, [r3, #4]
 8002ce8:	402a      	ands	r2, r5
 8002cea:	605a      	str	r2, [r3, #4]
 8002cec:	0023      	movs	r3, r4
 8002cee:	3341      	adds	r3, #65	; 0x41
 8002cf0:	7019      	strb	r1, [r3, #0]
 8002cf2:	9b07      	ldr	r3, [sp, #28]
 8002cf4:	3440      	adds	r4, #64	; 0x40
 8002cf6:	7018      	strb	r0, [r3, #0]
 8002cf8:	7020      	strb	r0, [r4, #0]
 8002cfa:	e749      	b.n	8002b90 <HAL_I2C_Mem_Write+0x38>
 8002cfc:	2380      	movs	r3, #128	; 0x80
 8002cfe:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002d00:	049b      	lsls	r3, r3, #18
 8002d02:	b292      	uxth	r2, r2
 8002d04:	8522      	strh	r2, [r4, #40]	; 0x28
 8002d06:	b2d2      	uxtb	r2, r2
 8002d08:	9000      	str	r0, [sp, #0]
 8002d0a:	e7d9      	b.n	8002cc0 <HAL_I2C_Mem_Write+0x168>
 8002d0c:	80002000 	.word	0x80002000
 8002d10:	fe00e800 	.word	0xfe00e800

08002d14 <HAL_I2C_Mem_Read>:
 8002d14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d16:	b089      	sub	sp, #36	; 0x24
 8002d18:	9304      	str	r3, [sp, #16]
 8002d1a:	ab0e      	add	r3, sp, #56	; 0x38
 8002d1c:	9203      	str	r2, [sp, #12]
 8002d1e:	cb04      	ldmia	r3!, {r2}
 8002d20:	0004      	movs	r4, r0
 8002d22:	881b      	ldrh	r3, [r3, #0]
 8002d24:	9205      	str	r2, [sp, #20]
 8002d26:	9306      	str	r3, [sp, #24]
 8002d28:	0003      	movs	r3, r0
 8002d2a:	3341      	adds	r3, #65	; 0x41
 8002d2c:	9307      	str	r3, [sp, #28]
 8002d2e:	781b      	ldrb	r3, [r3, #0]
 8002d30:	000f      	movs	r7, r1
 8002d32:	2002      	movs	r0, #2
 8002d34:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8002d36:	2b20      	cmp	r3, #32
 8002d38:	d108      	bne.n	8002d4c <HAL_I2C_Mem_Read+0x38>
 8002d3a:	2a00      	cmp	r2, #0
 8002d3c:	d002      	beq.n	8002d44 <HAL_I2C_Mem_Read+0x30>
 8002d3e:	9b06      	ldr	r3, [sp, #24]
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d105      	bne.n	8002d50 <HAL_I2C_Mem_Read+0x3c>
 8002d44:	2380      	movs	r3, #128	; 0x80
 8002d46:	009b      	lsls	r3, r3, #2
 8002d48:	6463      	str	r3, [r4, #68]	; 0x44
 8002d4a:	2001      	movs	r0, #1
 8002d4c:	b009      	add	sp, #36	; 0x24
 8002d4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002d50:	0023      	movs	r3, r4
 8002d52:	3340      	adds	r3, #64	; 0x40
 8002d54:	781a      	ldrb	r2, [r3, #0]
 8002d56:	2002      	movs	r0, #2
 8002d58:	2a01      	cmp	r2, #1
 8002d5a:	d0f7      	beq.n	8002d4c <HAL_I2C_Mem_Read+0x38>
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	701a      	strb	r2, [r3, #0]
 8002d60:	f7ff fadc 	bl	800231c <HAL_GetTick>
 8002d64:	2180      	movs	r1, #128	; 0x80
 8002d66:	2319      	movs	r3, #25
 8002d68:	9000      	str	r0, [sp, #0]
 8002d6a:	0005      	movs	r5, r0
 8002d6c:	2201      	movs	r2, #1
 8002d6e:	0020      	movs	r0, r4
 8002d70:	0209      	lsls	r1, r1, #8
 8002d72:	f7ff fcca 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002d76:	1e03      	subs	r3, r0, #0
 8002d78:	d1e7      	bne.n	8002d4a <HAL_I2C_Mem_Read+0x36>
 8002d7a:	2222      	movs	r2, #34	; 0x22
 8002d7c:	9907      	ldr	r1, [sp, #28]
 8002d7e:	700a      	strb	r2, [r1, #0]
 8002d80:	0022      	movs	r2, r4
 8002d82:	3242      	adds	r2, #66	; 0x42
 8002d84:	9207      	str	r2, [sp, #28]
 8002d86:	2240      	movs	r2, #64	; 0x40
 8002d88:	9907      	ldr	r1, [sp, #28]
 8002d8a:	700a      	strb	r2, [r1, #0]
 8002d8c:	9a05      	ldr	r2, [sp, #20]
 8002d8e:	6460      	str	r0, [r4, #68]	; 0x44
 8002d90:	6262      	str	r2, [r4, #36]	; 0x24
 8002d92:	9a06      	ldr	r2, [sp, #24]
 8002d94:	494d      	ldr	r1, [pc, #308]	; (8002ecc <HAL_I2C_Mem_Read+0x1b8>)
 8002d96:	8562      	strh	r2, [r4, #42]	; 0x2a
 8002d98:	466a      	mov	r2, sp
 8002d9a:	6360      	str	r0, [r4, #52]	; 0x34
 8002d9c:	7c12      	ldrb	r2, [r2, #16]
 8002d9e:	0020      	movs	r0, r4
 8002da0:	9100      	str	r1, [sp, #0]
 8002da2:	0039      	movs	r1, r7
 8002da4:	f7ff fbea 	bl	800257c <I2C_TransferConfig>
 8002da8:	002a      	movs	r2, r5
 8002daa:	0031      	movs	r1, r6
 8002dac:	0020      	movs	r0, r4
 8002dae:	f7ff fc7f 	bl	80026b0 <I2C_WaitOnTXISFlagUntilTimeout>
 8002db2:	2800      	cmp	r0, #0
 8002db4:	d127      	bne.n	8002e06 <HAL_I2C_Mem_Read+0xf2>
 8002db6:	9a04      	ldr	r2, [sp, #16]
 8002db8:	6823      	ldr	r3, [r4, #0]
 8002dba:	2a01      	cmp	r2, #1
 8002dbc:	d117      	bne.n	8002dee <HAL_I2C_Mem_Read+0xda>
 8002dbe:	466a      	mov	r2, sp
 8002dc0:	7b12      	ldrb	r2, [r2, #12]
 8002dc2:	2140      	movs	r1, #64	; 0x40
 8002dc4:	629a      	str	r2, [r3, #40]	; 0x28
 8002dc6:	0020      	movs	r0, r4
 8002dc8:	0033      	movs	r3, r6
 8002dca:	2200      	movs	r2, #0
 8002dcc:	9500      	str	r5, [sp, #0]
 8002dce:	f7ff fc9c 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002dd2:	2800      	cmp	r0, #0
 8002dd4:	d117      	bne.n	8002e06 <HAL_I2C_Mem_Read+0xf2>
 8002dd6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002dd8:	4b3d      	ldr	r3, [pc, #244]	; (8002ed0 <HAL_I2C_Mem_Read+0x1bc>)
 8002dda:	2aff      	cmp	r2, #255	; 0xff
 8002ddc:	d817      	bhi.n	8002e0e <HAL_I2C_Mem_Read+0xfa>
 8002dde:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002de0:	b292      	uxth	r2, r2
 8002de2:	8522      	strh	r2, [r4, #40]	; 0x28
 8002de4:	9300      	str	r3, [sp, #0]
 8002de6:	2380      	movs	r3, #128	; 0x80
 8002de8:	b2d2      	uxtb	r2, r2
 8002dea:	049b      	lsls	r3, r3, #18
 8002dec:	e014      	b.n	8002e18 <HAL_I2C_Mem_Read+0x104>
 8002dee:	9a03      	ldr	r2, [sp, #12]
 8002df0:	0031      	movs	r1, r6
 8002df2:	0a12      	lsrs	r2, r2, #8
 8002df4:	629a      	str	r2, [r3, #40]	; 0x28
 8002df6:	0020      	movs	r0, r4
 8002df8:	002a      	movs	r2, r5
 8002dfa:	f7ff fc59 	bl	80026b0 <I2C_WaitOnTXISFlagUntilTimeout>
 8002dfe:	2800      	cmp	r0, #0
 8002e00:	d101      	bne.n	8002e06 <HAL_I2C_Mem_Read+0xf2>
 8002e02:	6823      	ldr	r3, [r4, #0]
 8002e04:	e7db      	b.n	8002dbe <HAL_I2C_Mem_Read+0xaa>
 8002e06:	2300      	movs	r3, #0
 8002e08:	3440      	adds	r4, #64	; 0x40
 8002e0a:	7023      	strb	r3, [r4, #0]
 8002e0c:	e79d      	b.n	8002d4a <HAL_I2C_Mem_Read+0x36>
 8002e0e:	22ff      	movs	r2, #255	; 0xff
 8002e10:	8522      	strh	r2, [r4, #40]	; 0x28
 8002e12:	9300      	str	r3, [sp, #0]
 8002e14:	2380      	movs	r3, #128	; 0x80
 8002e16:	045b      	lsls	r3, r3, #17
 8002e18:	0039      	movs	r1, r7
 8002e1a:	0020      	movs	r0, r4
 8002e1c:	f7ff fbae 	bl	800257c <I2C_TransferConfig>
 8002e20:	0033      	movs	r3, r6
 8002e22:	2200      	movs	r2, #0
 8002e24:	2104      	movs	r1, #4
 8002e26:	0020      	movs	r0, r4
 8002e28:	9500      	str	r5, [sp, #0]
 8002e2a:	f7ff fc6e 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002e2e:	2800      	cmp	r0, #0
 8002e30:	d000      	beq.n	8002e34 <HAL_I2C_Mem_Read+0x120>
 8002e32:	e78a      	b.n	8002d4a <HAL_I2C_Mem_Read+0x36>
 8002e34:	6823      	ldr	r3, [r4, #0]
 8002e36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002e38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e3a:	7013      	strb	r3, [r2, #0]
 8002e3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002e3e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8002e40:	3301      	adds	r3, #1
 8002e42:	6263      	str	r3, [r4, #36]	; 0x24
 8002e44:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e46:	3a01      	subs	r2, #1
 8002e48:	3b01      	subs	r3, #1
 8002e4a:	b29b      	uxth	r3, r3
 8002e4c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8002e4e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e50:	b292      	uxth	r2, r2
 8002e52:	8522      	strh	r2, [r4, #40]	; 0x28
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d017      	beq.n	8002e88 <HAL_I2C_Mem_Read+0x174>
 8002e58:	2a00      	cmp	r2, #0
 8002e5a:	d115      	bne.n	8002e88 <HAL_I2C_Mem_Read+0x174>
 8002e5c:	0033      	movs	r3, r6
 8002e5e:	2180      	movs	r1, #128	; 0x80
 8002e60:	0020      	movs	r0, r4
 8002e62:	9500      	str	r5, [sp, #0]
 8002e64:	f7ff fc51 	bl	800270a <I2C_WaitOnFlagUntilTimeout>
 8002e68:	2800      	cmp	r0, #0
 8002e6a:	d000      	beq.n	8002e6e <HAL_I2C_Mem_Read+0x15a>
 8002e6c:	e76d      	b.n	8002d4a <HAL_I2C_Mem_Read+0x36>
 8002e6e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e70:	2bff      	cmp	r3, #255	; 0xff
 8002e72:	d923      	bls.n	8002ebc <HAL_I2C_Mem_Read+0x1a8>
 8002e74:	23ff      	movs	r3, #255	; 0xff
 8002e76:	8523      	strh	r3, [r4, #40]	; 0x28
 8002e78:	2380      	movs	r3, #128	; 0x80
 8002e7a:	22ff      	movs	r2, #255	; 0xff
 8002e7c:	9000      	str	r0, [sp, #0]
 8002e7e:	045b      	lsls	r3, r3, #17
 8002e80:	0039      	movs	r1, r7
 8002e82:	0020      	movs	r0, r4
 8002e84:	f7ff fb7a 	bl	800257c <I2C_TransferConfig>
 8002e88:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d1c8      	bne.n	8002e20 <HAL_I2C_Mem_Read+0x10c>
 8002e8e:	002a      	movs	r2, r5
 8002e90:	0031      	movs	r1, r6
 8002e92:	0020      	movs	r0, r4
 8002e94:	f7ff fc69 	bl	800276a <I2C_WaitOnSTOPFlagUntilTimeout>
 8002e98:	2800      	cmp	r0, #0
 8002e9a:	d000      	beq.n	8002e9e <HAL_I2C_Mem_Read+0x18a>
 8002e9c:	e755      	b.n	8002d4a <HAL_I2C_Mem_Read+0x36>
 8002e9e:	2120      	movs	r1, #32
 8002ea0:	6823      	ldr	r3, [r4, #0]
 8002ea2:	4d0c      	ldr	r5, [pc, #48]	; (8002ed4 <HAL_I2C_Mem_Read+0x1c0>)
 8002ea4:	61d9      	str	r1, [r3, #28]
 8002ea6:	685a      	ldr	r2, [r3, #4]
 8002ea8:	402a      	ands	r2, r5
 8002eaa:	605a      	str	r2, [r3, #4]
 8002eac:	0023      	movs	r3, r4
 8002eae:	3341      	adds	r3, #65	; 0x41
 8002eb0:	7019      	strb	r1, [r3, #0]
 8002eb2:	9b07      	ldr	r3, [sp, #28]
 8002eb4:	3440      	adds	r4, #64	; 0x40
 8002eb6:	7018      	strb	r0, [r3, #0]
 8002eb8:	7020      	strb	r0, [r4, #0]
 8002eba:	e747      	b.n	8002d4c <HAL_I2C_Mem_Read+0x38>
 8002ebc:	2380      	movs	r3, #128	; 0x80
 8002ebe:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002ec0:	049b      	lsls	r3, r3, #18
 8002ec2:	b292      	uxth	r2, r2
 8002ec4:	8522      	strh	r2, [r4, #40]	; 0x28
 8002ec6:	b2d2      	uxtb	r2, r2
 8002ec8:	9000      	str	r0, [sp, #0]
 8002eca:	e7d9      	b.n	8002e80 <HAL_I2C_Mem_Read+0x16c>
 8002ecc:	80002000 	.word	0x80002000
 8002ed0:	80002400 	.word	0x80002400
 8002ed4:	fe00e800 	.word	0xfe00e800

08002ed8 <HAL_I2CEx_ConfigAnalogFilter>:
 8002ed8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002eda:	0004      	movs	r4, r0
 8002edc:	3441      	adds	r4, #65	; 0x41
 8002ede:	7822      	ldrb	r2, [r4, #0]
 8002ee0:	0003      	movs	r3, r0
 8002ee2:	000f      	movs	r7, r1
 8002ee4:	2002      	movs	r0, #2
 8002ee6:	b2d6      	uxtb	r6, r2
 8002ee8:	2a20      	cmp	r2, #32
 8002eea:	d118      	bne.n	8002f1e <HAL_I2CEx_ConfigAnalogFilter+0x46>
 8002eec:	001d      	movs	r5, r3
 8002eee:	3540      	adds	r5, #64	; 0x40
 8002ef0:	782a      	ldrb	r2, [r5, #0]
 8002ef2:	2a01      	cmp	r2, #1
 8002ef4:	d013      	beq.n	8002f1e <HAL_I2CEx_ConfigAnalogFilter+0x46>
 8002ef6:	2224      	movs	r2, #36	; 0x24
 8002ef8:	7022      	strb	r2, [r4, #0]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	3a23      	subs	r2, #35	; 0x23
 8002efe:	6819      	ldr	r1, [r3, #0]
 8002f00:	4807      	ldr	r0, [pc, #28]	; (8002f20 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
 8002f02:	4391      	bics	r1, r2
 8002f04:	6019      	str	r1, [r3, #0]
 8002f06:	6819      	ldr	r1, [r3, #0]
 8002f08:	4001      	ands	r1, r0
 8002f0a:	2000      	movs	r0, #0
 8002f0c:	6019      	str	r1, [r3, #0]
 8002f0e:	6819      	ldr	r1, [r3, #0]
 8002f10:	4339      	orrs	r1, r7
 8002f12:	6019      	str	r1, [r3, #0]
 8002f14:	6819      	ldr	r1, [r3, #0]
 8002f16:	430a      	orrs	r2, r1
 8002f18:	601a      	str	r2, [r3, #0]
 8002f1a:	7026      	strb	r6, [r4, #0]
 8002f1c:	7028      	strb	r0, [r5, #0]
 8002f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f20:	ffffefff 	.word	0xffffefff

08002f24 <HAL_I2CEx_ConfigDigitalFilter>:
 8002f24:	0002      	movs	r2, r0
 8002f26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002f28:	3241      	adds	r2, #65	; 0x41
 8002f2a:	7814      	ldrb	r4, [r2, #0]
 8002f2c:	0003      	movs	r3, r0
 8002f2e:	b2e5      	uxtb	r5, r4
 8002f30:	2002      	movs	r0, #2
 8002f32:	2c20      	cmp	r4, #32
 8002f34:	d117      	bne.n	8002f66 <HAL_I2CEx_ConfigDigitalFilter+0x42>
 8002f36:	001c      	movs	r4, r3
 8002f38:	3440      	adds	r4, #64	; 0x40
 8002f3a:	7826      	ldrb	r6, [r4, #0]
 8002f3c:	2e01      	cmp	r6, #1
 8002f3e:	d012      	beq.n	8002f66 <HAL_I2CEx_ConfigDigitalFilter+0x42>
 8002f40:	3022      	adds	r0, #34	; 0x22
 8002f42:	7010      	strb	r0, [r2, #0]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	3823      	subs	r0, #35	; 0x23
 8002f48:	681e      	ldr	r6, [r3, #0]
 8002f4a:	4f07      	ldr	r7, [pc, #28]	; (8002f68 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
 8002f4c:	4386      	bics	r6, r0
 8002f4e:	601e      	str	r6, [r3, #0]
 8002f50:	681e      	ldr	r6, [r3, #0]
 8002f52:	0209      	lsls	r1, r1, #8
 8002f54:	403e      	ands	r6, r7
 8002f56:	4331      	orrs	r1, r6
 8002f58:	6019      	str	r1, [r3, #0]
 8002f5a:	6819      	ldr	r1, [r3, #0]
 8002f5c:	4308      	orrs	r0, r1
 8002f5e:	6018      	str	r0, [r3, #0]
 8002f60:	2000      	movs	r0, #0
 8002f62:	7015      	strb	r5, [r2, #0]
 8002f64:	7020      	strb	r0, [r4, #0]
 8002f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f68:	fffff0ff 	.word	0xfffff0ff

08002f6c <HAL_RCC_GetSysClockFreq>:
 8002f6c:	220c      	movs	r2, #12
 8002f6e:	4b1d      	ldr	r3, [pc, #116]	; (8002fe4 <HAL_RCC_GetSysClockFreq+0x78>)
 8002f70:	b570      	push	{r4, r5, r6, lr}
 8002f72:	68dc      	ldr	r4, [r3, #12]
 8002f74:	4022      	ands	r2, r4
 8002f76:	2a08      	cmp	r2, #8
 8002f78:	d031      	beq.n	8002fde <HAL_RCC_GetSysClockFreq+0x72>
 8002f7a:	2a0c      	cmp	r2, #12
 8002f7c:	d009      	beq.n	8002f92 <HAL_RCC_GetSysClockFreq+0x26>
 8002f7e:	2a04      	cmp	r2, #4
 8002f80:	d125      	bne.n	8002fce <HAL_RCC_GetSysClockFreq+0x62>
 8002f82:	6818      	ldr	r0, [r3, #0]
 8002f84:	4b18      	ldr	r3, [pc, #96]	; (8002fe8 <HAL_RCC_GetSysClockFreq+0x7c>)
 8002f86:	06c0      	lsls	r0, r0, #27
 8002f88:	17c0      	asrs	r0, r0, #31
 8002f8a:	4018      	ands	r0, r3
 8002f8c:	4b17      	ldr	r3, [pc, #92]	; (8002fec <HAL_RCC_GetSysClockFreq+0x80>)
 8002f8e:	18c0      	adds	r0, r0, r3
 8002f90:	bd70      	pop	{r4, r5, r6, pc}
 8002f92:	02a2      	lsls	r2, r4, #10
 8002f94:	4816      	ldr	r0, [pc, #88]	; (8002ff0 <HAL_RCC_GetSysClockFreq+0x84>)
 8002f96:	0f12      	lsrs	r2, r2, #28
 8002f98:	5c80      	ldrb	r0, [r0, r2]
 8002f9a:	2280      	movs	r2, #128	; 0x80
 8002f9c:	0224      	lsls	r4, r4, #8
 8002f9e:	68d9      	ldr	r1, [r3, #12]
 8002fa0:	0fa4      	lsrs	r4, r4, #30
 8002fa2:	0252      	lsls	r2, r2, #9
 8002fa4:	3401      	adds	r4, #1
 8002fa6:	4211      	tst	r1, r2
 8002fa8:	d009      	beq.n	8002fbe <HAL_RCC_GetSysClockFreq+0x52>
 8002faa:	4a12      	ldr	r2, [pc, #72]	; (8002ff4 <HAL_RCC_GetSysClockFreq+0x88>)
 8002fac:	2300      	movs	r3, #0
 8002fae:	2100      	movs	r1, #0
 8002fb0:	f7fd f972 	bl	8000298 <__aeabi_lmul>
 8002fb4:	0022      	movs	r2, r4
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	f7fd f94e 	bl	8000258 <__aeabi_uldivmod>
 8002fbc:	e7e8      	b.n	8002f90 <HAL_RCC_GetSysClockFreq+0x24>
 8002fbe:	681a      	ldr	r2, [r3, #0]
 8002fc0:	2310      	movs	r3, #16
 8002fc2:	421a      	tst	r2, r3
 8002fc4:	d001      	beq.n	8002fca <HAL_RCC_GetSysClockFreq+0x5e>
 8002fc6:	4a0c      	ldr	r2, [pc, #48]	; (8002ff8 <HAL_RCC_GetSysClockFreq+0x8c>)
 8002fc8:	e7f0      	b.n	8002fac <HAL_RCC_GetSysClockFreq+0x40>
 8002fca:	4a08      	ldr	r2, [pc, #32]	; (8002fec <HAL_RCC_GetSysClockFreq+0x80>)
 8002fcc:	e7ee      	b.n	8002fac <HAL_RCC_GetSysClockFreq+0x40>
 8002fce:	2080      	movs	r0, #128	; 0x80
 8002fd0:	685b      	ldr	r3, [r3, #4]
 8002fd2:	0200      	lsls	r0, r0, #8
 8002fd4:	041b      	lsls	r3, r3, #16
 8002fd6:	0f5b      	lsrs	r3, r3, #29
 8002fd8:	3301      	adds	r3, #1
 8002fda:	4098      	lsls	r0, r3
 8002fdc:	e7d8      	b.n	8002f90 <HAL_RCC_GetSysClockFreq+0x24>
 8002fde:	4805      	ldr	r0, [pc, #20]	; (8002ff4 <HAL_RCC_GetSysClockFreq+0x88>)
 8002fe0:	e7d6      	b.n	8002f90 <HAL_RCC_GetSysClockFreq+0x24>
 8002fe2:	46c0      	nop			; (mov r8, r8)
 8002fe4:	40021000 	.word	0x40021000
 8002fe8:	ff48e500 	.word	0xff48e500
 8002fec:	00f42400 	.word	0x00f42400
 8002ff0:	080052c2 	.word	0x080052c2
 8002ff4:	007a1200 	.word	0x007a1200
 8002ff8:	003d0900 	.word	0x003d0900

08002ffc <HAL_RCC_OscConfig>:
 8002ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002ffe:	0005      	movs	r5, r0
 8003000:	b085      	sub	sp, #20
 8003002:	2800      	cmp	r0, #0
 8003004:	d05a      	beq.n	80030bc <HAL_RCC_OscConfig+0xc0>
 8003006:	230c      	movs	r3, #12
 8003008:	4cbe      	ldr	r4, [pc, #760]	; (8003304 <HAL_RCC_OscConfig+0x308>)
 800300a:	6802      	ldr	r2, [r0, #0]
 800300c:	68e6      	ldr	r6, [r4, #12]
 800300e:	68e7      	ldr	r7, [r4, #12]
 8003010:	401e      	ands	r6, r3
 8003012:	2380      	movs	r3, #128	; 0x80
 8003014:	025b      	lsls	r3, r3, #9
 8003016:	0019      	movs	r1, r3
 8003018:	401f      	ands	r7, r3
 800301a:	07d2      	lsls	r2, r2, #31
 800301c:	d442      	bmi.n	80030a4 <HAL_RCC_OscConfig+0xa8>
 800301e:	682b      	ldr	r3, [r5, #0]
 8003020:	079b      	lsls	r3, r3, #30
 8003022:	d500      	bpl.n	8003026 <HAL_RCC_OscConfig+0x2a>
 8003024:	e08b      	b.n	800313e <HAL_RCC_OscConfig+0x142>
 8003026:	682b      	ldr	r3, [r5, #0]
 8003028:	06db      	lsls	r3, r3, #27
 800302a:	d529      	bpl.n	8003080 <HAL_RCC_OscConfig+0x84>
 800302c:	2e00      	cmp	r6, #0
 800302e:	d000      	beq.n	8003032 <HAL_RCC_OscConfig+0x36>
 8003030:	e0dc      	b.n	80031ec <HAL_RCC_OscConfig+0x1f0>
 8003032:	6823      	ldr	r3, [r4, #0]
 8003034:	059b      	lsls	r3, r3, #22
 8003036:	d502      	bpl.n	800303e <HAL_RCC_OscConfig+0x42>
 8003038:	69eb      	ldr	r3, [r5, #28]
 800303a:	2b00      	cmp	r3, #0
 800303c:	d03e      	beq.n	80030bc <HAL_RCC_OscConfig+0xc0>
 800303e:	6862      	ldr	r2, [r4, #4]
 8003040:	49b1      	ldr	r1, [pc, #708]	; (8003308 <HAL_RCC_OscConfig+0x30c>)
 8003042:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003044:	400a      	ands	r2, r1
 8003046:	431a      	orrs	r2, r3
 8003048:	6062      	str	r2, [r4, #4]
 800304a:	6861      	ldr	r1, [r4, #4]
 800304c:	6a2a      	ldr	r2, [r5, #32]
 800304e:	0209      	lsls	r1, r1, #8
 8003050:	0a09      	lsrs	r1, r1, #8
 8003052:	0612      	lsls	r2, r2, #24
 8003054:	430a      	orrs	r2, r1
 8003056:	6062      	str	r2, [r4, #4]
 8003058:	2280      	movs	r2, #128	; 0x80
 800305a:	0b5b      	lsrs	r3, r3, #13
 800305c:	3301      	adds	r3, #1
 800305e:	0212      	lsls	r2, r2, #8
 8003060:	409a      	lsls	r2, r3
 8003062:	0013      	movs	r3, r2
 8003064:	68e1      	ldr	r1, [r4, #12]
 8003066:	060a      	lsls	r2, r1, #24
 8003068:	49a8      	ldr	r1, [pc, #672]	; (800330c <HAL_RCC_OscConfig+0x310>)
 800306a:	0f12      	lsrs	r2, r2, #28
 800306c:	5c8a      	ldrb	r2, [r1, r2]
 800306e:	40d3      	lsrs	r3, r2
 8003070:	4aa7      	ldr	r2, [pc, #668]	; (8003310 <HAL_RCC_OscConfig+0x314>)
 8003072:	6013      	str	r3, [r2, #0]
 8003074:	4ba7      	ldr	r3, [pc, #668]	; (8003314 <HAL_RCC_OscConfig+0x318>)
 8003076:	6818      	ldr	r0, [r3, #0]
 8003078:	f7ff f90c 	bl	8002294 <HAL_InitTick>
 800307c:	2800      	cmp	r0, #0
 800307e:	d134      	bne.n	80030ea <HAL_RCC_OscConfig+0xee>
 8003080:	682b      	ldr	r3, [r5, #0]
 8003082:	071b      	lsls	r3, r3, #28
 8003084:	d500      	bpl.n	8003088 <HAL_RCC_OscConfig+0x8c>
 8003086:	e0e8      	b.n	800325a <HAL_RCC_OscConfig+0x25e>
 8003088:	682b      	ldr	r3, [r5, #0]
 800308a:	075b      	lsls	r3, r3, #29
 800308c:	d500      	bpl.n	8003090 <HAL_RCC_OscConfig+0x94>
 800308e:	e10a      	b.n	80032a6 <HAL_RCC_OscConfig+0x2aa>
 8003090:	682b      	ldr	r3, [r5, #0]
 8003092:	069b      	lsls	r3, r3, #26
 8003094:	d500      	bpl.n	8003098 <HAL_RCC_OscConfig+0x9c>
 8003096:	e18e      	b.n	80033b6 <HAL_RCC_OscConfig+0x3ba>
 8003098:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800309a:	2b00      	cmp	r3, #0
 800309c:	d000      	beq.n	80030a0 <HAL_RCC_OscConfig+0xa4>
 800309e:	e1bd      	b.n	800341c <HAL_RCC_OscConfig+0x420>
 80030a0:	2000      	movs	r0, #0
 80030a2:	e022      	b.n	80030ea <HAL_RCC_OscConfig+0xee>
 80030a4:	2e08      	cmp	r6, #8
 80030a6:	d003      	beq.n	80030b0 <HAL_RCC_OscConfig+0xb4>
 80030a8:	2e0c      	cmp	r6, #12
 80030aa:	d109      	bne.n	80030c0 <HAL_RCC_OscConfig+0xc4>
 80030ac:	2f00      	cmp	r7, #0
 80030ae:	d007      	beq.n	80030c0 <HAL_RCC_OscConfig+0xc4>
 80030b0:	6823      	ldr	r3, [r4, #0]
 80030b2:	039b      	lsls	r3, r3, #14
 80030b4:	d5b3      	bpl.n	800301e <HAL_RCC_OscConfig+0x22>
 80030b6:	686b      	ldr	r3, [r5, #4]
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d1b0      	bne.n	800301e <HAL_RCC_OscConfig+0x22>
 80030bc:	2001      	movs	r0, #1
 80030be:	e014      	b.n	80030ea <HAL_RCC_OscConfig+0xee>
 80030c0:	686a      	ldr	r2, [r5, #4]
 80030c2:	428a      	cmp	r2, r1
 80030c4:	d113      	bne.n	80030ee <HAL_RCC_OscConfig+0xf2>
 80030c6:	6822      	ldr	r2, [r4, #0]
 80030c8:	4313      	orrs	r3, r2
 80030ca:	6023      	str	r3, [r4, #0]
 80030cc:	f7ff f926 	bl	800231c <HAL_GetTick>
 80030d0:	9000      	str	r0, [sp, #0]
 80030d2:	2280      	movs	r2, #128	; 0x80
 80030d4:	6823      	ldr	r3, [r4, #0]
 80030d6:	0292      	lsls	r2, r2, #10
 80030d8:	4213      	tst	r3, r2
 80030da:	d1a0      	bne.n	800301e <HAL_RCC_OscConfig+0x22>
 80030dc:	f7ff f91e 	bl	800231c <HAL_GetTick>
 80030e0:	9b00      	ldr	r3, [sp, #0]
 80030e2:	1ac0      	subs	r0, r0, r3
 80030e4:	2864      	cmp	r0, #100	; 0x64
 80030e6:	d9f4      	bls.n	80030d2 <HAL_RCC_OscConfig+0xd6>
 80030e8:	2003      	movs	r0, #3
 80030ea:	b005      	add	sp, #20
 80030ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030ee:	21a0      	movs	r1, #160	; 0xa0
 80030f0:	02c9      	lsls	r1, r1, #11
 80030f2:	428a      	cmp	r2, r1
 80030f4:	d105      	bne.n	8003102 <HAL_RCC_OscConfig+0x106>
 80030f6:	2280      	movs	r2, #128	; 0x80
 80030f8:	6821      	ldr	r1, [r4, #0]
 80030fa:	02d2      	lsls	r2, r2, #11
 80030fc:	430a      	orrs	r2, r1
 80030fe:	6022      	str	r2, [r4, #0]
 8003100:	e7e1      	b.n	80030c6 <HAL_RCC_OscConfig+0xca>
 8003102:	6821      	ldr	r1, [r4, #0]
 8003104:	4884      	ldr	r0, [pc, #528]	; (8003318 <HAL_RCC_OscConfig+0x31c>)
 8003106:	4001      	ands	r1, r0
 8003108:	6021      	str	r1, [r4, #0]
 800310a:	6821      	ldr	r1, [r4, #0]
 800310c:	400b      	ands	r3, r1
 800310e:	9303      	str	r3, [sp, #12]
 8003110:	9b03      	ldr	r3, [sp, #12]
 8003112:	4982      	ldr	r1, [pc, #520]	; (800331c <HAL_RCC_OscConfig+0x320>)
 8003114:	6823      	ldr	r3, [r4, #0]
 8003116:	400b      	ands	r3, r1
 8003118:	6023      	str	r3, [r4, #0]
 800311a:	2a00      	cmp	r2, #0
 800311c:	d1d6      	bne.n	80030cc <HAL_RCC_OscConfig+0xd0>
 800311e:	f7ff f8fd 	bl	800231c <HAL_GetTick>
 8003122:	9000      	str	r0, [sp, #0]
 8003124:	2280      	movs	r2, #128	; 0x80
 8003126:	6823      	ldr	r3, [r4, #0]
 8003128:	0292      	lsls	r2, r2, #10
 800312a:	4213      	tst	r3, r2
 800312c:	d100      	bne.n	8003130 <HAL_RCC_OscConfig+0x134>
 800312e:	e776      	b.n	800301e <HAL_RCC_OscConfig+0x22>
 8003130:	f7ff f8f4 	bl	800231c <HAL_GetTick>
 8003134:	9b00      	ldr	r3, [sp, #0]
 8003136:	1ac0      	subs	r0, r0, r3
 8003138:	2864      	cmp	r0, #100	; 0x64
 800313a:	d9f3      	bls.n	8003124 <HAL_RCC_OscConfig+0x128>
 800313c:	e7d4      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 800313e:	68ea      	ldr	r2, [r5, #12]
 8003140:	2e04      	cmp	r6, #4
 8003142:	d003      	beq.n	800314c <HAL_RCC_OscConfig+0x150>
 8003144:	2e0c      	cmp	r6, #12
 8003146:	d124      	bne.n	8003192 <HAL_RCC_OscConfig+0x196>
 8003148:	2f00      	cmp	r7, #0
 800314a:	d122      	bne.n	8003192 <HAL_RCC_OscConfig+0x196>
 800314c:	6823      	ldr	r3, [r4, #0]
 800314e:	075b      	lsls	r3, r3, #29
 8003150:	d501      	bpl.n	8003156 <HAL_RCC_OscConfig+0x15a>
 8003152:	2a00      	cmp	r2, #0
 8003154:	d0b2      	beq.n	80030bc <HAL_RCC_OscConfig+0xc0>
 8003156:	6861      	ldr	r1, [r4, #4]
 8003158:	692b      	ldr	r3, [r5, #16]
 800315a:	4871      	ldr	r0, [pc, #452]	; (8003320 <HAL_RCC_OscConfig+0x324>)
 800315c:	021b      	lsls	r3, r3, #8
 800315e:	4001      	ands	r1, r0
 8003160:	430b      	orrs	r3, r1
 8003162:	2109      	movs	r1, #9
 8003164:	6063      	str	r3, [r4, #4]
 8003166:	6823      	ldr	r3, [r4, #0]
 8003168:	438b      	bics	r3, r1
 800316a:	4313      	orrs	r3, r2
 800316c:	6023      	str	r3, [r4, #0]
 800316e:	f7ff fefd 	bl	8002f6c <HAL_RCC_GetSysClockFreq>
 8003172:	68e3      	ldr	r3, [r4, #12]
 8003174:	4a65      	ldr	r2, [pc, #404]	; (800330c <HAL_RCC_OscConfig+0x310>)
 8003176:	061b      	lsls	r3, r3, #24
 8003178:	0f1b      	lsrs	r3, r3, #28
 800317a:	5cd3      	ldrb	r3, [r2, r3]
 800317c:	40d8      	lsrs	r0, r3
 800317e:	4b64      	ldr	r3, [pc, #400]	; (8003310 <HAL_RCC_OscConfig+0x314>)
 8003180:	6018      	str	r0, [r3, #0]
 8003182:	4b64      	ldr	r3, [pc, #400]	; (8003314 <HAL_RCC_OscConfig+0x318>)
 8003184:	6818      	ldr	r0, [r3, #0]
 8003186:	f7ff f885 	bl	8002294 <HAL_InitTick>
 800318a:	2800      	cmp	r0, #0
 800318c:	d100      	bne.n	8003190 <HAL_RCC_OscConfig+0x194>
 800318e:	e74a      	b.n	8003026 <HAL_RCC_OscConfig+0x2a>
 8003190:	e7ab      	b.n	80030ea <HAL_RCC_OscConfig+0xee>
 8003192:	6823      	ldr	r3, [r4, #0]
 8003194:	2a00      	cmp	r2, #0
 8003196:	d018      	beq.n	80031ca <HAL_RCC_OscConfig+0x1ce>
 8003198:	2109      	movs	r1, #9
 800319a:	438b      	bics	r3, r1
 800319c:	4313      	orrs	r3, r2
 800319e:	6023      	str	r3, [r4, #0]
 80031a0:	f7ff f8bc 	bl	800231c <HAL_GetTick>
 80031a4:	0007      	movs	r7, r0
 80031a6:	2204      	movs	r2, #4
 80031a8:	6823      	ldr	r3, [r4, #0]
 80031aa:	4213      	tst	r3, r2
 80031ac:	d007      	beq.n	80031be <HAL_RCC_OscConfig+0x1c2>
 80031ae:	6862      	ldr	r2, [r4, #4]
 80031b0:	692b      	ldr	r3, [r5, #16]
 80031b2:	495b      	ldr	r1, [pc, #364]	; (8003320 <HAL_RCC_OscConfig+0x324>)
 80031b4:	021b      	lsls	r3, r3, #8
 80031b6:	400a      	ands	r2, r1
 80031b8:	4313      	orrs	r3, r2
 80031ba:	6063      	str	r3, [r4, #4]
 80031bc:	e733      	b.n	8003026 <HAL_RCC_OscConfig+0x2a>
 80031be:	f7ff f8ad 	bl	800231c <HAL_GetTick>
 80031c2:	1bc0      	subs	r0, r0, r7
 80031c4:	2802      	cmp	r0, #2
 80031c6:	d9ee      	bls.n	80031a6 <HAL_RCC_OscConfig+0x1aa>
 80031c8:	e78e      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 80031ca:	2201      	movs	r2, #1
 80031cc:	4393      	bics	r3, r2
 80031ce:	6023      	str	r3, [r4, #0]
 80031d0:	f7ff f8a4 	bl	800231c <HAL_GetTick>
 80031d4:	0007      	movs	r7, r0
 80031d6:	2204      	movs	r2, #4
 80031d8:	6823      	ldr	r3, [r4, #0]
 80031da:	4213      	tst	r3, r2
 80031dc:	d100      	bne.n	80031e0 <HAL_RCC_OscConfig+0x1e4>
 80031de:	e722      	b.n	8003026 <HAL_RCC_OscConfig+0x2a>
 80031e0:	f7ff f89c 	bl	800231c <HAL_GetTick>
 80031e4:	1bc0      	subs	r0, r0, r7
 80031e6:	2802      	cmp	r0, #2
 80031e8:	d9f5      	bls.n	80031d6 <HAL_RCC_OscConfig+0x1da>
 80031ea:	e77d      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 80031ec:	69eb      	ldr	r3, [r5, #28]
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d020      	beq.n	8003234 <HAL_RCC_OscConfig+0x238>
 80031f2:	2380      	movs	r3, #128	; 0x80
 80031f4:	6822      	ldr	r2, [r4, #0]
 80031f6:	005b      	lsls	r3, r3, #1
 80031f8:	4313      	orrs	r3, r2
 80031fa:	6023      	str	r3, [r4, #0]
 80031fc:	f7ff f88e 	bl	800231c <HAL_GetTick>
 8003200:	0007      	movs	r7, r0
 8003202:	2280      	movs	r2, #128	; 0x80
 8003204:	6823      	ldr	r3, [r4, #0]
 8003206:	0092      	lsls	r2, r2, #2
 8003208:	4213      	tst	r3, r2
 800320a:	d00d      	beq.n	8003228 <HAL_RCC_OscConfig+0x22c>
 800320c:	6863      	ldr	r3, [r4, #4]
 800320e:	4a3e      	ldr	r2, [pc, #248]	; (8003308 <HAL_RCC_OscConfig+0x30c>)
 8003210:	4013      	ands	r3, r2
 8003212:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8003214:	4313      	orrs	r3, r2
 8003216:	6063      	str	r3, [r4, #4]
 8003218:	6862      	ldr	r2, [r4, #4]
 800321a:	6a2b      	ldr	r3, [r5, #32]
 800321c:	0212      	lsls	r2, r2, #8
 800321e:	061b      	lsls	r3, r3, #24
 8003220:	0a12      	lsrs	r2, r2, #8
 8003222:	4313      	orrs	r3, r2
 8003224:	6063      	str	r3, [r4, #4]
 8003226:	e72b      	b.n	8003080 <HAL_RCC_OscConfig+0x84>
 8003228:	f7ff f878 	bl	800231c <HAL_GetTick>
 800322c:	1bc0      	subs	r0, r0, r7
 800322e:	2802      	cmp	r0, #2
 8003230:	d9e7      	bls.n	8003202 <HAL_RCC_OscConfig+0x206>
 8003232:	e759      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 8003234:	6823      	ldr	r3, [r4, #0]
 8003236:	4a3b      	ldr	r2, [pc, #236]	; (8003324 <HAL_RCC_OscConfig+0x328>)
 8003238:	4013      	ands	r3, r2
 800323a:	6023      	str	r3, [r4, #0]
 800323c:	f7ff f86e 	bl	800231c <HAL_GetTick>
 8003240:	0007      	movs	r7, r0
 8003242:	2280      	movs	r2, #128	; 0x80
 8003244:	6823      	ldr	r3, [r4, #0]
 8003246:	0092      	lsls	r2, r2, #2
 8003248:	4213      	tst	r3, r2
 800324a:	d100      	bne.n	800324e <HAL_RCC_OscConfig+0x252>
 800324c:	e718      	b.n	8003080 <HAL_RCC_OscConfig+0x84>
 800324e:	f7ff f865 	bl	800231c <HAL_GetTick>
 8003252:	1bc0      	subs	r0, r0, r7
 8003254:	2802      	cmp	r0, #2
 8003256:	d9f4      	bls.n	8003242 <HAL_RCC_OscConfig+0x246>
 8003258:	e746      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 800325a:	696a      	ldr	r2, [r5, #20]
 800325c:	2301      	movs	r3, #1
 800325e:	2a00      	cmp	r2, #0
 8003260:	d010      	beq.n	8003284 <HAL_RCC_OscConfig+0x288>
 8003262:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8003264:	4313      	orrs	r3, r2
 8003266:	6523      	str	r3, [r4, #80]	; 0x50
 8003268:	f7ff f858 	bl	800231c <HAL_GetTick>
 800326c:	0007      	movs	r7, r0
 800326e:	2202      	movs	r2, #2
 8003270:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003272:	4213      	tst	r3, r2
 8003274:	d000      	beq.n	8003278 <HAL_RCC_OscConfig+0x27c>
 8003276:	e707      	b.n	8003088 <HAL_RCC_OscConfig+0x8c>
 8003278:	f7ff f850 	bl	800231c <HAL_GetTick>
 800327c:	1bc0      	subs	r0, r0, r7
 800327e:	2802      	cmp	r0, #2
 8003280:	d9f5      	bls.n	800326e <HAL_RCC_OscConfig+0x272>
 8003282:	e731      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 8003284:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8003286:	439a      	bics	r2, r3
 8003288:	6522      	str	r2, [r4, #80]	; 0x50
 800328a:	f7ff f847 	bl	800231c <HAL_GetTick>
 800328e:	0007      	movs	r7, r0
 8003290:	2202      	movs	r2, #2
 8003292:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003294:	4213      	tst	r3, r2
 8003296:	d100      	bne.n	800329a <HAL_RCC_OscConfig+0x29e>
 8003298:	e6f6      	b.n	8003088 <HAL_RCC_OscConfig+0x8c>
 800329a:	f7ff f83f 	bl	800231c <HAL_GetTick>
 800329e:	1bc0      	subs	r0, r0, r7
 80032a0:	2802      	cmp	r0, #2
 80032a2:	d9f5      	bls.n	8003290 <HAL_RCC_OscConfig+0x294>
 80032a4:	e720      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 80032a6:	2380      	movs	r3, #128	; 0x80
 80032a8:	2100      	movs	r1, #0
 80032aa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80032ac:	055b      	lsls	r3, r3, #21
 80032ae:	9100      	str	r1, [sp, #0]
 80032b0:	421a      	tst	r2, r3
 80032b2:	d104      	bne.n	80032be <HAL_RCC_OscConfig+0x2c2>
 80032b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80032b6:	4313      	orrs	r3, r2
 80032b8:	63a3      	str	r3, [r4, #56]	; 0x38
 80032ba:	2301      	movs	r3, #1
 80032bc:	9300      	str	r3, [sp, #0]
 80032be:	2280      	movs	r2, #128	; 0x80
 80032c0:	4f19      	ldr	r7, [pc, #100]	; (8003328 <HAL_RCC_OscConfig+0x32c>)
 80032c2:	0052      	lsls	r2, r2, #1
 80032c4:	683b      	ldr	r3, [r7, #0]
 80032c6:	4213      	tst	r3, r2
 80032c8:	d008      	beq.n	80032dc <HAL_RCC_OscConfig+0x2e0>
 80032ca:	2280      	movs	r2, #128	; 0x80
 80032cc:	68ab      	ldr	r3, [r5, #8]
 80032ce:	0052      	lsls	r2, r2, #1
 80032d0:	4293      	cmp	r3, r2
 80032d2:	d12b      	bne.n	800332c <HAL_RCC_OscConfig+0x330>
 80032d4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80032d6:	4313      	orrs	r3, r2
 80032d8:	6523      	str	r3, [r4, #80]	; 0x50
 80032da:	e04c      	b.n	8003376 <HAL_RCC_OscConfig+0x37a>
 80032dc:	2280      	movs	r2, #128	; 0x80
 80032de:	683b      	ldr	r3, [r7, #0]
 80032e0:	0052      	lsls	r2, r2, #1
 80032e2:	4313      	orrs	r3, r2
 80032e4:	603b      	str	r3, [r7, #0]
 80032e6:	f7ff f819 	bl	800231c <HAL_GetTick>
 80032ea:	9001      	str	r0, [sp, #4]
 80032ec:	2280      	movs	r2, #128	; 0x80
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	0052      	lsls	r2, r2, #1
 80032f2:	4213      	tst	r3, r2
 80032f4:	d1e9      	bne.n	80032ca <HAL_RCC_OscConfig+0x2ce>
 80032f6:	f7ff f811 	bl	800231c <HAL_GetTick>
 80032fa:	9b01      	ldr	r3, [sp, #4]
 80032fc:	1ac0      	subs	r0, r0, r3
 80032fe:	2864      	cmp	r0, #100	; 0x64
 8003300:	d9f4      	bls.n	80032ec <HAL_RCC_OscConfig+0x2f0>
 8003302:	e6f1      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 8003304:	40021000 	.word	0x40021000
 8003308:	ffff1fff 	.word	0xffff1fff
 800330c:	080052aa 	.word	0x080052aa
 8003310:	20000190 	.word	0x20000190
 8003314:	20000198 	.word	0x20000198
 8003318:	fffeffff 	.word	0xfffeffff
 800331c:	fffbffff 	.word	0xfffbffff
 8003320:	ffffe0ff 	.word	0xffffe0ff
 8003324:	fffffeff 	.word	0xfffffeff
 8003328:	40007000 	.word	0x40007000
 800332c:	2b00      	cmp	r3, #0
 800332e:	d116      	bne.n	800335e <HAL_RCC_OscConfig+0x362>
 8003330:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003332:	4a6b      	ldr	r2, [pc, #428]	; (80034e0 <HAL_RCC_OscConfig+0x4e4>)
 8003334:	4013      	ands	r3, r2
 8003336:	6523      	str	r3, [r4, #80]	; 0x50
 8003338:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800333a:	4a6a      	ldr	r2, [pc, #424]	; (80034e4 <HAL_RCC_OscConfig+0x4e8>)
 800333c:	4013      	ands	r3, r2
 800333e:	6523      	str	r3, [r4, #80]	; 0x50
 8003340:	f7fe ffec 	bl	800231c <HAL_GetTick>
 8003344:	0007      	movs	r7, r0
 8003346:	2280      	movs	r2, #128	; 0x80
 8003348:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800334a:	0092      	lsls	r2, r2, #2
 800334c:	4213      	tst	r3, r2
 800334e:	d01a      	beq.n	8003386 <HAL_RCC_OscConfig+0x38a>
 8003350:	f7fe ffe4 	bl	800231c <HAL_GetTick>
 8003354:	4b64      	ldr	r3, [pc, #400]	; (80034e8 <HAL_RCC_OscConfig+0x4ec>)
 8003356:	1bc0      	subs	r0, r0, r7
 8003358:	4298      	cmp	r0, r3
 800335a:	d9f4      	bls.n	8003346 <HAL_RCC_OscConfig+0x34a>
 800335c:	e6c4      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 800335e:	21a0      	movs	r1, #160	; 0xa0
 8003360:	00c9      	lsls	r1, r1, #3
 8003362:	428b      	cmp	r3, r1
 8003364:	d118      	bne.n	8003398 <HAL_RCC_OscConfig+0x39c>
 8003366:	2380      	movs	r3, #128	; 0x80
 8003368:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800336a:	00db      	lsls	r3, r3, #3
 800336c:	430b      	orrs	r3, r1
 800336e:	6523      	str	r3, [r4, #80]	; 0x50
 8003370:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003372:	431a      	orrs	r2, r3
 8003374:	6522      	str	r2, [r4, #80]	; 0x50
 8003376:	f7fe ffd1 	bl	800231c <HAL_GetTick>
 800337a:	0007      	movs	r7, r0
 800337c:	2280      	movs	r2, #128	; 0x80
 800337e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003380:	0092      	lsls	r2, r2, #2
 8003382:	4213      	tst	r3, r2
 8003384:	d010      	beq.n	80033a8 <HAL_RCC_OscConfig+0x3ac>
 8003386:	9b00      	ldr	r3, [sp, #0]
 8003388:	2b01      	cmp	r3, #1
 800338a:	d000      	beq.n	800338e <HAL_RCC_OscConfig+0x392>
 800338c:	e680      	b.n	8003090 <HAL_RCC_OscConfig+0x94>
 800338e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003390:	4a56      	ldr	r2, [pc, #344]	; (80034ec <HAL_RCC_OscConfig+0x4f0>)
 8003392:	4013      	ands	r3, r2
 8003394:	63a3      	str	r3, [r4, #56]	; 0x38
 8003396:	e67b      	b.n	8003090 <HAL_RCC_OscConfig+0x94>
 8003398:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800339a:	4a51      	ldr	r2, [pc, #324]	; (80034e0 <HAL_RCC_OscConfig+0x4e4>)
 800339c:	4013      	ands	r3, r2
 800339e:	6523      	str	r3, [r4, #80]	; 0x50
 80033a0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80033a2:	4a50      	ldr	r2, [pc, #320]	; (80034e4 <HAL_RCC_OscConfig+0x4e8>)
 80033a4:	4013      	ands	r3, r2
 80033a6:	e797      	b.n	80032d8 <HAL_RCC_OscConfig+0x2dc>
 80033a8:	f7fe ffb8 	bl	800231c <HAL_GetTick>
 80033ac:	4b4e      	ldr	r3, [pc, #312]	; (80034e8 <HAL_RCC_OscConfig+0x4ec>)
 80033ae:	1bc0      	subs	r0, r0, r7
 80033b0:	4298      	cmp	r0, r3
 80033b2:	d9e3      	bls.n	800337c <HAL_RCC_OscConfig+0x380>
 80033b4:	e698      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 80033b6:	69a9      	ldr	r1, [r5, #24]
 80033b8:	2301      	movs	r3, #1
 80033ba:	4a4d      	ldr	r2, [pc, #308]	; (80034f0 <HAL_RCC_OscConfig+0x4f4>)
 80033bc:	2900      	cmp	r1, #0
 80033be:	d018      	beq.n	80033f2 <HAL_RCC_OscConfig+0x3f6>
 80033c0:	68a1      	ldr	r1, [r4, #8]
 80033c2:	4319      	orrs	r1, r3
 80033c4:	60a1      	str	r1, [r4, #8]
 80033c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80033c8:	430b      	orrs	r3, r1
 80033ca:	6363      	str	r3, [r4, #52]	; 0x34
 80033cc:	2380      	movs	r3, #128	; 0x80
 80033ce:	6a11      	ldr	r1, [r2, #32]
 80033d0:	019b      	lsls	r3, r3, #6
 80033d2:	430b      	orrs	r3, r1
 80033d4:	6213      	str	r3, [r2, #32]
 80033d6:	f7fe ffa1 	bl	800231c <HAL_GetTick>
 80033da:	0007      	movs	r7, r0
 80033dc:	2202      	movs	r2, #2
 80033de:	68a3      	ldr	r3, [r4, #8]
 80033e0:	4213      	tst	r3, r2
 80033e2:	d000      	beq.n	80033e6 <HAL_RCC_OscConfig+0x3ea>
 80033e4:	e658      	b.n	8003098 <HAL_RCC_OscConfig+0x9c>
 80033e6:	f7fe ff99 	bl	800231c <HAL_GetTick>
 80033ea:	1bc0      	subs	r0, r0, r7
 80033ec:	2802      	cmp	r0, #2
 80033ee:	d9f5      	bls.n	80033dc <HAL_RCC_OscConfig+0x3e0>
 80033f0:	e67a      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 80033f2:	68a1      	ldr	r1, [r4, #8]
 80033f4:	4399      	bics	r1, r3
 80033f6:	60a1      	str	r1, [r4, #8]
 80033f8:	6a13      	ldr	r3, [r2, #32]
 80033fa:	493e      	ldr	r1, [pc, #248]	; (80034f4 <HAL_RCC_OscConfig+0x4f8>)
 80033fc:	400b      	ands	r3, r1
 80033fe:	6213      	str	r3, [r2, #32]
 8003400:	f7fe ff8c 	bl	800231c <HAL_GetTick>
 8003404:	0007      	movs	r7, r0
 8003406:	2202      	movs	r2, #2
 8003408:	68a3      	ldr	r3, [r4, #8]
 800340a:	4213      	tst	r3, r2
 800340c:	d100      	bne.n	8003410 <HAL_RCC_OscConfig+0x414>
 800340e:	e643      	b.n	8003098 <HAL_RCC_OscConfig+0x9c>
 8003410:	f7fe ff84 	bl	800231c <HAL_GetTick>
 8003414:	1bc0      	subs	r0, r0, r7
 8003416:	2802      	cmp	r0, #2
 8003418:	d9f5      	bls.n	8003406 <HAL_RCC_OscConfig+0x40a>
 800341a:	e665      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 800341c:	2e0c      	cmp	r6, #12
 800341e:	d043      	beq.n	80034a8 <HAL_RCC_OscConfig+0x4ac>
 8003420:	4a35      	ldr	r2, [pc, #212]	; (80034f8 <HAL_RCC_OscConfig+0x4fc>)
 8003422:	2b02      	cmp	r3, #2
 8003424:	d12e      	bne.n	8003484 <HAL_RCC_OscConfig+0x488>
 8003426:	6823      	ldr	r3, [r4, #0]
 8003428:	2780      	movs	r7, #128	; 0x80
 800342a:	4013      	ands	r3, r2
 800342c:	6023      	str	r3, [r4, #0]
 800342e:	f7fe ff75 	bl	800231c <HAL_GetTick>
 8003432:	0006      	movs	r6, r0
 8003434:	04bf      	lsls	r7, r7, #18
 8003436:	6823      	ldr	r3, [r4, #0]
 8003438:	423b      	tst	r3, r7
 800343a:	d11d      	bne.n	8003478 <HAL_RCC_OscConfig+0x47c>
 800343c:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800343e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003440:	68e2      	ldr	r2, [r4, #12]
 8003442:	430b      	orrs	r3, r1
 8003444:	492d      	ldr	r1, [pc, #180]	; (80034fc <HAL_RCC_OscConfig+0x500>)
 8003446:	2680      	movs	r6, #128	; 0x80
 8003448:	400a      	ands	r2, r1
 800344a:	4313      	orrs	r3, r2
 800344c:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 800344e:	04b6      	lsls	r6, r6, #18
 8003450:	4313      	orrs	r3, r2
 8003452:	60e3      	str	r3, [r4, #12]
 8003454:	2380      	movs	r3, #128	; 0x80
 8003456:	6822      	ldr	r2, [r4, #0]
 8003458:	045b      	lsls	r3, r3, #17
 800345a:	4313      	orrs	r3, r2
 800345c:	6023      	str	r3, [r4, #0]
 800345e:	f7fe ff5d 	bl	800231c <HAL_GetTick>
 8003462:	0005      	movs	r5, r0
 8003464:	6823      	ldr	r3, [r4, #0]
 8003466:	4233      	tst	r3, r6
 8003468:	d000      	beq.n	800346c <HAL_RCC_OscConfig+0x470>
 800346a:	e619      	b.n	80030a0 <HAL_RCC_OscConfig+0xa4>
 800346c:	f7fe ff56 	bl	800231c <HAL_GetTick>
 8003470:	1b40      	subs	r0, r0, r5
 8003472:	2802      	cmp	r0, #2
 8003474:	d9f6      	bls.n	8003464 <HAL_RCC_OscConfig+0x468>
 8003476:	e637      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 8003478:	f7fe ff50 	bl	800231c <HAL_GetTick>
 800347c:	1b80      	subs	r0, r0, r6
 800347e:	2802      	cmp	r0, #2
 8003480:	d9d9      	bls.n	8003436 <HAL_RCC_OscConfig+0x43a>
 8003482:	e631      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 8003484:	6823      	ldr	r3, [r4, #0]
 8003486:	2680      	movs	r6, #128	; 0x80
 8003488:	4013      	ands	r3, r2
 800348a:	6023      	str	r3, [r4, #0]
 800348c:	f7fe ff46 	bl	800231c <HAL_GetTick>
 8003490:	0005      	movs	r5, r0
 8003492:	04b6      	lsls	r6, r6, #18
 8003494:	6823      	ldr	r3, [r4, #0]
 8003496:	4233      	tst	r3, r6
 8003498:	d100      	bne.n	800349c <HAL_RCC_OscConfig+0x4a0>
 800349a:	e601      	b.n	80030a0 <HAL_RCC_OscConfig+0xa4>
 800349c:	f7fe ff3e 	bl	800231c <HAL_GetTick>
 80034a0:	1b40      	subs	r0, r0, r5
 80034a2:	2802      	cmp	r0, #2
 80034a4:	d9f6      	bls.n	8003494 <HAL_RCC_OscConfig+0x498>
 80034a6:	e61f      	b.n	80030e8 <HAL_RCC_OscConfig+0xec>
 80034a8:	0018      	movs	r0, r3
 80034aa:	2b01      	cmp	r3, #1
 80034ac:	d100      	bne.n	80034b0 <HAL_RCC_OscConfig+0x4b4>
 80034ae:	e61c      	b.n	80030ea <HAL_RCC_OscConfig+0xee>
 80034b0:	2280      	movs	r2, #128	; 0x80
 80034b2:	68e3      	ldr	r3, [r4, #12]
 80034b4:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80034b6:	0252      	lsls	r2, r2, #9
 80034b8:	401a      	ands	r2, r3
 80034ba:	428a      	cmp	r2, r1
 80034bc:	d000      	beq.n	80034c0 <HAL_RCC_OscConfig+0x4c4>
 80034be:	e5fd      	b.n	80030bc <HAL_RCC_OscConfig+0xc0>
 80034c0:	22f0      	movs	r2, #240	; 0xf0
 80034c2:	6b29      	ldr	r1, [r5, #48]	; 0x30
 80034c4:	0392      	lsls	r2, r2, #14
 80034c6:	401a      	ands	r2, r3
 80034c8:	428a      	cmp	r2, r1
 80034ca:	d000      	beq.n	80034ce <HAL_RCC_OscConfig+0x4d2>
 80034cc:	e5f6      	b.n	80030bc <HAL_RCC_OscConfig+0xc0>
 80034ce:	22c0      	movs	r2, #192	; 0xc0
 80034d0:	0412      	lsls	r2, r2, #16
 80034d2:	4013      	ands	r3, r2
 80034d4:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 80034d6:	4293      	cmp	r3, r2
 80034d8:	d100      	bne.n	80034dc <HAL_RCC_OscConfig+0x4e0>
 80034da:	e5e1      	b.n	80030a0 <HAL_RCC_OscConfig+0xa4>
 80034dc:	e5ee      	b.n	80030bc <HAL_RCC_OscConfig+0xc0>
 80034de:	46c0      	nop			; (mov r8, r8)
 80034e0:	fffffeff 	.word	0xfffffeff
 80034e4:	fffffbff 	.word	0xfffffbff
 80034e8:	00001388 	.word	0x00001388
 80034ec:	efffffff 	.word	0xefffffff
 80034f0:	40010000 	.word	0x40010000
 80034f4:	ffffdfff 	.word	0xffffdfff
 80034f8:	feffffff 	.word	0xfeffffff
 80034fc:	ff02ffff 	.word	0xff02ffff

08003500 <HAL_RCC_ClockConfig>:
 8003500:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003502:	1e04      	subs	r4, r0, #0
 8003504:	9101      	str	r1, [sp, #4]
 8003506:	d101      	bne.n	800350c <HAL_RCC_ClockConfig+0xc>
 8003508:	2001      	movs	r0, #1
 800350a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800350c:	2501      	movs	r5, #1
 800350e:	4e5b      	ldr	r6, [pc, #364]	; (800367c <HAL_RCC_ClockConfig+0x17c>)
 8003510:	9a01      	ldr	r2, [sp, #4]
 8003512:	6833      	ldr	r3, [r6, #0]
 8003514:	402b      	ands	r3, r5
 8003516:	4293      	cmp	r3, r2
 8003518:	d331      	bcc.n	800357e <HAL_RCC_ClockConfig+0x7e>
 800351a:	6822      	ldr	r2, [r4, #0]
 800351c:	0793      	lsls	r3, r2, #30
 800351e:	d443      	bmi.n	80035a8 <HAL_RCC_ClockConfig+0xa8>
 8003520:	07d3      	lsls	r3, r2, #31
 8003522:	d449      	bmi.n	80035b8 <HAL_RCC_ClockConfig+0xb8>
 8003524:	2501      	movs	r5, #1
 8003526:	6833      	ldr	r3, [r6, #0]
 8003528:	9a01      	ldr	r2, [sp, #4]
 800352a:	402b      	ands	r3, r5
 800352c:	4293      	cmp	r3, r2
 800352e:	d909      	bls.n	8003544 <HAL_RCC_ClockConfig+0x44>
 8003530:	6833      	ldr	r3, [r6, #0]
 8003532:	43ab      	bics	r3, r5
 8003534:	6033      	str	r3, [r6, #0]
 8003536:	f7fe fef1 	bl	800231c <HAL_GetTick>
 800353a:	0007      	movs	r7, r0
 800353c:	6833      	ldr	r3, [r6, #0]
 800353e:	422b      	tst	r3, r5
 8003540:	d000      	beq.n	8003544 <HAL_RCC_ClockConfig+0x44>
 8003542:	e08c      	b.n	800365e <HAL_RCC_ClockConfig+0x15e>
 8003544:	6822      	ldr	r2, [r4, #0]
 8003546:	4d4e      	ldr	r5, [pc, #312]	; (8003680 <HAL_RCC_ClockConfig+0x180>)
 8003548:	0753      	lsls	r3, r2, #29
 800354a:	d500      	bpl.n	800354e <HAL_RCC_ClockConfig+0x4e>
 800354c:	e08f      	b.n	800366e <HAL_RCC_ClockConfig+0x16e>
 800354e:	0713      	lsls	r3, r2, #28
 8003550:	d506      	bpl.n	8003560 <HAL_RCC_ClockConfig+0x60>
 8003552:	68e9      	ldr	r1, [r5, #12]
 8003554:	6923      	ldr	r3, [r4, #16]
 8003556:	4a4b      	ldr	r2, [pc, #300]	; (8003684 <HAL_RCC_ClockConfig+0x184>)
 8003558:	00db      	lsls	r3, r3, #3
 800355a:	400a      	ands	r2, r1
 800355c:	4313      	orrs	r3, r2
 800355e:	60eb      	str	r3, [r5, #12]
 8003560:	f7ff fd04 	bl	8002f6c <HAL_RCC_GetSysClockFreq>
 8003564:	68eb      	ldr	r3, [r5, #12]
 8003566:	4a48      	ldr	r2, [pc, #288]	; (8003688 <HAL_RCC_ClockConfig+0x188>)
 8003568:	061b      	lsls	r3, r3, #24
 800356a:	0f1b      	lsrs	r3, r3, #28
 800356c:	5cd3      	ldrb	r3, [r2, r3]
 800356e:	40d8      	lsrs	r0, r3
 8003570:	4b46      	ldr	r3, [pc, #280]	; (800368c <HAL_RCC_ClockConfig+0x18c>)
 8003572:	6018      	str	r0, [r3, #0]
 8003574:	4b46      	ldr	r3, [pc, #280]	; (8003690 <HAL_RCC_ClockConfig+0x190>)
 8003576:	6818      	ldr	r0, [r3, #0]
 8003578:	f7fe fe8c 	bl	8002294 <HAL_InitTick>
 800357c:	e7c5      	b.n	800350a <HAL_RCC_ClockConfig+0xa>
 800357e:	6833      	ldr	r3, [r6, #0]
 8003580:	9a01      	ldr	r2, [sp, #4]
 8003582:	43ab      	bics	r3, r5
 8003584:	4313      	orrs	r3, r2
 8003586:	6033      	str	r3, [r6, #0]
 8003588:	f7fe fec8 	bl	800231c <HAL_GetTick>
 800358c:	0007      	movs	r7, r0
 800358e:	6833      	ldr	r3, [r6, #0]
 8003590:	9a01      	ldr	r2, [sp, #4]
 8003592:	402b      	ands	r3, r5
 8003594:	4293      	cmp	r3, r2
 8003596:	d0c0      	beq.n	800351a <HAL_RCC_ClockConfig+0x1a>
 8003598:	f7fe fec0 	bl	800231c <HAL_GetTick>
 800359c:	4b3d      	ldr	r3, [pc, #244]	; (8003694 <HAL_RCC_ClockConfig+0x194>)
 800359e:	1bc0      	subs	r0, r0, r7
 80035a0:	4298      	cmp	r0, r3
 80035a2:	d9f4      	bls.n	800358e <HAL_RCC_ClockConfig+0x8e>
 80035a4:	2003      	movs	r0, #3
 80035a6:	e7b0      	b.n	800350a <HAL_RCC_ClockConfig+0xa>
 80035a8:	20f0      	movs	r0, #240	; 0xf0
 80035aa:	4935      	ldr	r1, [pc, #212]	; (8003680 <HAL_RCC_ClockConfig+0x180>)
 80035ac:	68cb      	ldr	r3, [r1, #12]
 80035ae:	4383      	bics	r3, r0
 80035b0:	68a0      	ldr	r0, [r4, #8]
 80035b2:	4303      	orrs	r3, r0
 80035b4:	60cb      	str	r3, [r1, #12]
 80035b6:	e7b3      	b.n	8003520 <HAL_RCC_ClockConfig+0x20>
 80035b8:	4d31      	ldr	r5, [pc, #196]	; (8003680 <HAL_RCC_ClockConfig+0x180>)
 80035ba:	6862      	ldr	r2, [r4, #4]
 80035bc:	682b      	ldr	r3, [r5, #0]
 80035be:	2a02      	cmp	r2, #2
 80035c0:	d118      	bne.n	80035f4 <HAL_RCC_ClockConfig+0xf4>
 80035c2:	039b      	lsls	r3, r3, #14
 80035c4:	d5a0      	bpl.n	8003508 <HAL_RCC_ClockConfig+0x8>
 80035c6:	2103      	movs	r1, #3
 80035c8:	68eb      	ldr	r3, [r5, #12]
 80035ca:	438b      	bics	r3, r1
 80035cc:	4313      	orrs	r3, r2
 80035ce:	60eb      	str	r3, [r5, #12]
 80035d0:	f7fe fea4 	bl	800231c <HAL_GetTick>
 80035d4:	6863      	ldr	r3, [r4, #4]
 80035d6:	0007      	movs	r7, r0
 80035d8:	2b02      	cmp	r3, #2
 80035da:	d118      	bne.n	800360e <HAL_RCC_ClockConfig+0x10e>
 80035dc:	220c      	movs	r2, #12
 80035de:	68eb      	ldr	r3, [r5, #12]
 80035e0:	4013      	ands	r3, r2
 80035e2:	2b08      	cmp	r3, #8
 80035e4:	d09e      	beq.n	8003524 <HAL_RCC_ClockConfig+0x24>
 80035e6:	f7fe fe99 	bl	800231c <HAL_GetTick>
 80035ea:	4b2a      	ldr	r3, [pc, #168]	; (8003694 <HAL_RCC_ClockConfig+0x194>)
 80035ec:	1bc0      	subs	r0, r0, r7
 80035ee:	4298      	cmp	r0, r3
 80035f0:	d9f4      	bls.n	80035dc <HAL_RCC_ClockConfig+0xdc>
 80035f2:	e7d7      	b.n	80035a4 <HAL_RCC_ClockConfig+0xa4>
 80035f4:	2a03      	cmp	r2, #3
 80035f6:	d102      	bne.n	80035fe <HAL_RCC_ClockConfig+0xfe>
 80035f8:	019b      	lsls	r3, r3, #6
 80035fa:	d4e4      	bmi.n	80035c6 <HAL_RCC_ClockConfig+0xc6>
 80035fc:	e784      	b.n	8003508 <HAL_RCC_ClockConfig+0x8>
 80035fe:	2a01      	cmp	r2, #1
 8003600:	d102      	bne.n	8003608 <HAL_RCC_ClockConfig+0x108>
 8003602:	075b      	lsls	r3, r3, #29
 8003604:	d4df      	bmi.n	80035c6 <HAL_RCC_ClockConfig+0xc6>
 8003606:	e77f      	b.n	8003508 <HAL_RCC_ClockConfig+0x8>
 8003608:	059b      	lsls	r3, r3, #22
 800360a:	d4dc      	bmi.n	80035c6 <HAL_RCC_ClockConfig+0xc6>
 800360c:	e77c      	b.n	8003508 <HAL_RCC_ClockConfig+0x8>
 800360e:	2b03      	cmp	r3, #3
 8003610:	d10b      	bne.n	800362a <HAL_RCC_ClockConfig+0x12a>
 8003612:	220c      	movs	r2, #12
 8003614:	68eb      	ldr	r3, [r5, #12]
 8003616:	4013      	ands	r3, r2
 8003618:	4293      	cmp	r3, r2
 800361a:	d083      	beq.n	8003524 <HAL_RCC_ClockConfig+0x24>
 800361c:	f7fe fe7e 	bl	800231c <HAL_GetTick>
 8003620:	4b1c      	ldr	r3, [pc, #112]	; (8003694 <HAL_RCC_ClockConfig+0x194>)
 8003622:	1bc0      	subs	r0, r0, r7
 8003624:	4298      	cmp	r0, r3
 8003626:	d9f4      	bls.n	8003612 <HAL_RCC_ClockConfig+0x112>
 8003628:	e7bc      	b.n	80035a4 <HAL_RCC_ClockConfig+0xa4>
 800362a:	2b01      	cmp	r3, #1
 800362c:	d011      	beq.n	8003652 <HAL_RCC_ClockConfig+0x152>
 800362e:	220c      	movs	r2, #12
 8003630:	68eb      	ldr	r3, [r5, #12]
 8003632:	4213      	tst	r3, r2
 8003634:	d100      	bne.n	8003638 <HAL_RCC_ClockConfig+0x138>
 8003636:	e775      	b.n	8003524 <HAL_RCC_ClockConfig+0x24>
 8003638:	f7fe fe70 	bl	800231c <HAL_GetTick>
 800363c:	4b15      	ldr	r3, [pc, #84]	; (8003694 <HAL_RCC_ClockConfig+0x194>)
 800363e:	1bc0      	subs	r0, r0, r7
 8003640:	4298      	cmp	r0, r3
 8003642:	d9f4      	bls.n	800362e <HAL_RCC_ClockConfig+0x12e>
 8003644:	e7ae      	b.n	80035a4 <HAL_RCC_ClockConfig+0xa4>
 8003646:	f7fe fe69 	bl	800231c <HAL_GetTick>
 800364a:	4b12      	ldr	r3, [pc, #72]	; (8003694 <HAL_RCC_ClockConfig+0x194>)
 800364c:	1bc0      	subs	r0, r0, r7
 800364e:	4298      	cmp	r0, r3
 8003650:	d8a8      	bhi.n	80035a4 <HAL_RCC_ClockConfig+0xa4>
 8003652:	220c      	movs	r2, #12
 8003654:	68eb      	ldr	r3, [r5, #12]
 8003656:	4013      	ands	r3, r2
 8003658:	2b04      	cmp	r3, #4
 800365a:	d1f4      	bne.n	8003646 <HAL_RCC_ClockConfig+0x146>
 800365c:	e762      	b.n	8003524 <HAL_RCC_ClockConfig+0x24>
 800365e:	f7fe fe5d 	bl	800231c <HAL_GetTick>
 8003662:	4b0c      	ldr	r3, [pc, #48]	; (8003694 <HAL_RCC_ClockConfig+0x194>)
 8003664:	1bc0      	subs	r0, r0, r7
 8003666:	4298      	cmp	r0, r3
 8003668:	d800      	bhi.n	800366c <HAL_RCC_ClockConfig+0x16c>
 800366a:	e767      	b.n	800353c <HAL_RCC_ClockConfig+0x3c>
 800366c:	e79a      	b.n	80035a4 <HAL_RCC_ClockConfig+0xa4>
 800366e:	68eb      	ldr	r3, [r5, #12]
 8003670:	4909      	ldr	r1, [pc, #36]	; (8003698 <HAL_RCC_ClockConfig+0x198>)
 8003672:	400b      	ands	r3, r1
 8003674:	68e1      	ldr	r1, [r4, #12]
 8003676:	430b      	orrs	r3, r1
 8003678:	60eb      	str	r3, [r5, #12]
 800367a:	e768      	b.n	800354e <HAL_RCC_ClockConfig+0x4e>
 800367c:	40022000 	.word	0x40022000
 8003680:	40021000 	.word	0x40021000
 8003684:	ffffc7ff 	.word	0xffffc7ff
 8003688:	080052aa 	.word	0x080052aa
 800368c:	20000190 	.word	0x20000190
 8003690:	20000198 	.word	0x20000198
 8003694:	00001388 	.word	0x00001388
 8003698:	fffff8ff 	.word	0xfffff8ff

0800369c <HAL_RCC_GetPCLK1Freq>:
 800369c:	4b04      	ldr	r3, [pc, #16]	; (80036b0 <HAL_RCC_GetPCLK1Freq+0x14>)
 800369e:	4a05      	ldr	r2, [pc, #20]	; (80036b4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80036a0:	68db      	ldr	r3, [r3, #12]
 80036a2:	055b      	lsls	r3, r3, #21
 80036a4:	0f5b      	lsrs	r3, r3, #29
 80036a6:	5cd3      	ldrb	r3, [r2, r3]
 80036a8:	4a03      	ldr	r2, [pc, #12]	; (80036b8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80036aa:	6810      	ldr	r0, [r2, #0]
 80036ac:	40d8      	lsrs	r0, r3
 80036ae:	4770      	bx	lr
 80036b0:	40021000 	.word	0x40021000
 80036b4:	080052ba 	.word	0x080052ba
 80036b8:	20000190 	.word	0x20000190

080036bc <HAL_RCC_GetPCLK2Freq>:
 80036bc:	4b04      	ldr	r3, [pc, #16]	; (80036d0 <HAL_RCC_GetPCLK2Freq+0x14>)
 80036be:	4a05      	ldr	r2, [pc, #20]	; (80036d4 <HAL_RCC_GetPCLK2Freq+0x18>)
 80036c0:	68db      	ldr	r3, [r3, #12]
 80036c2:	049b      	lsls	r3, r3, #18
 80036c4:	0f5b      	lsrs	r3, r3, #29
 80036c6:	5cd3      	ldrb	r3, [r2, r3]
 80036c8:	4a03      	ldr	r2, [pc, #12]	; (80036d8 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80036ca:	6810      	ldr	r0, [r2, #0]
 80036cc:	40d8      	lsrs	r0, r3
 80036ce:	4770      	bx	lr
 80036d0:	40021000 	.word	0x40021000
 80036d4:	080052ba 	.word	0x080052ba
 80036d8:	20000190 	.word	0x20000190

080036dc <HAL_RCCEx_PeriphCLKConfig>:
 80036dc:	6803      	ldr	r3, [r0, #0]
 80036de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036e0:	0005      	movs	r5, r0
 80036e2:	069b      	lsls	r3, r3, #26
 80036e4:	d52d      	bpl.n	8003742 <HAL_RCCEx_PeriphCLKConfig+0x66>
 80036e6:	2380      	movs	r3, #128	; 0x80
 80036e8:	2100      	movs	r1, #0
 80036ea:	4c5c      	ldr	r4, [pc, #368]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 80036ec:	055b      	lsls	r3, r3, #21
 80036ee:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80036f0:	9100      	str	r1, [sp, #0]
 80036f2:	421a      	tst	r2, r3
 80036f4:	d104      	bne.n	8003700 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80036f6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80036f8:	4313      	orrs	r3, r2
 80036fa:	63a3      	str	r3, [r4, #56]	; 0x38
 80036fc:	2301      	movs	r3, #1
 80036fe:	9300      	str	r3, [sp, #0]
 8003700:	2780      	movs	r7, #128	; 0x80
 8003702:	4e57      	ldr	r6, [pc, #348]	; (8003860 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8003704:	007f      	lsls	r7, r7, #1
 8003706:	6833      	ldr	r3, [r6, #0]
 8003708:	423b      	tst	r3, r7
 800370a:	d053      	beq.n	80037b4 <HAL_RCCEx_PeriphCLKConfig+0xd8>
 800370c:	686b      	ldr	r3, [r5, #4]
 800370e:	21c0      	movs	r1, #192	; 0xc0
 8003710:	0018      	movs	r0, r3
 8003712:	6822      	ldr	r2, [r4, #0]
 8003714:	0389      	lsls	r1, r1, #14
 8003716:	4008      	ands	r0, r1
 8003718:	400a      	ands	r2, r1
 800371a:	4290      	cmp	r0, r2
 800371c:	d15b      	bne.n	80037d6 <HAL_RCCEx_PeriphCLKConfig+0xfa>
 800371e:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003720:	22c0      	movs	r2, #192	; 0xc0
 8003722:	0008      	movs	r0, r1
 8003724:	0292      	lsls	r2, r2, #10
 8003726:	4010      	ands	r0, r2
 8003728:	4211      	tst	r1, r2
 800372a:	d15f      	bne.n	80037ec <HAL_RCCEx_PeriphCLKConfig+0x110>
 800372c:	682b      	ldr	r3, [r5, #0]
 800372e:	069b      	lsls	r3, r3, #26
 8003730:	d500      	bpl.n	8003734 <HAL_RCCEx_PeriphCLKConfig+0x58>
 8003732:	e070      	b.n	8003816 <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8003734:	9b00      	ldr	r3, [sp, #0]
 8003736:	2b01      	cmp	r3, #1
 8003738:	d103      	bne.n	8003742 <HAL_RCCEx_PeriphCLKConfig+0x66>
 800373a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800373c:	4a49      	ldr	r2, [pc, #292]	; (8003864 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 800373e:	4013      	ands	r3, r2
 8003740:	63a3      	str	r3, [r4, #56]	; 0x38
 8003742:	682b      	ldr	r3, [r5, #0]
 8003744:	07da      	lsls	r2, r3, #31
 8003746:	d506      	bpl.n	8003756 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003748:	2003      	movs	r0, #3
 800374a:	4944      	ldr	r1, [pc, #272]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800374c:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800374e:	4382      	bics	r2, r0
 8003750:	68a8      	ldr	r0, [r5, #8]
 8003752:	4302      	orrs	r2, r0
 8003754:	64ca      	str	r2, [r1, #76]	; 0x4c
 8003756:	079a      	lsls	r2, r3, #30
 8003758:	d506      	bpl.n	8003768 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800375a:	200c      	movs	r0, #12
 800375c:	493f      	ldr	r1, [pc, #252]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800375e:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003760:	4382      	bics	r2, r0
 8003762:	68e8      	ldr	r0, [r5, #12]
 8003764:	4302      	orrs	r2, r0
 8003766:	64ca      	str	r2, [r1, #76]	; 0x4c
 8003768:	075a      	lsls	r2, r3, #29
 800376a:	d506      	bpl.n	800377a <HAL_RCCEx_PeriphCLKConfig+0x9e>
 800376c:	493b      	ldr	r1, [pc, #236]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 800376e:	483e      	ldr	r0, [pc, #248]	; (8003868 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8003770:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003772:	4002      	ands	r2, r0
 8003774:	6928      	ldr	r0, [r5, #16]
 8003776:	4302      	orrs	r2, r0
 8003778:	64ca      	str	r2, [r1, #76]	; 0x4c
 800377a:	071a      	lsls	r2, r3, #28
 800377c:	d506      	bpl.n	800378c <HAL_RCCEx_PeriphCLKConfig+0xb0>
 800377e:	4937      	ldr	r1, [pc, #220]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 8003780:	483a      	ldr	r0, [pc, #232]	; (800386c <HAL_RCCEx_PeriphCLKConfig+0x190>)
 8003782:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003784:	4002      	ands	r2, r0
 8003786:	6968      	ldr	r0, [r5, #20]
 8003788:	4302      	orrs	r2, r0
 800378a:	64ca      	str	r2, [r1, #76]	; 0x4c
 800378c:	065a      	lsls	r2, r3, #25
 800378e:	d506      	bpl.n	800379e <HAL_RCCEx_PeriphCLKConfig+0xc2>
 8003790:	4932      	ldr	r1, [pc, #200]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 8003792:	4837      	ldr	r0, [pc, #220]	; (8003870 <HAL_RCCEx_PeriphCLKConfig+0x194>)
 8003794:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003796:	4002      	ands	r2, r0
 8003798:	69e8      	ldr	r0, [r5, #28]
 800379a:	4302      	orrs	r2, r0
 800379c:	64ca      	str	r2, [r1, #76]	; 0x4c
 800379e:	2000      	movs	r0, #0
 80037a0:	061b      	lsls	r3, r3, #24
 80037a2:	d517      	bpl.n	80037d4 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80037a4:	4a2d      	ldr	r2, [pc, #180]	; (800385c <HAL_RCCEx_PeriphCLKConfig+0x180>)
 80037a6:	4933      	ldr	r1, [pc, #204]	; (8003874 <HAL_RCCEx_PeriphCLKConfig+0x198>)
 80037a8:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80037aa:	400b      	ands	r3, r1
 80037ac:	69a9      	ldr	r1, [r5, #24]
 80037ae:	430b      	orrs	r3, r1
 80037b0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80037b2:	e00f      	b.n	80037d4 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80037b4:	6833      	ldr	r3, [r6, #0]
 80037b6:	433b      	orrs	r3, r7
 80037b8:	6033      	str	r3, [r6, #0]
 80037ba:	f7fe fdaf 	bl	800231c <HAL_GetTick>
 80037be:	9001      	str	r0, [sp, #4]
 80037c0:	6833      	ldr	r3, [r6, #0]
 80037c2:	423b      	tst	r3, r7
 80037c4:	d1a2      	bne.n	800370c <HAL_RCCEx_PeriphCLKConfig+0x30>
 80037c6:	f7fe fda9 	bl	800231c <HAL_GetTick>
 80037ca:	9b01      	ldr	r3, [sp, #4]
 80037cc:	1ac0      	subs	r0, r0, r3
 80037ce:	2864      	cmp	r0, #100	; 0x64
 80037d0:	d9f6      	bls.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0xe4>
 80037d2:	2003      	movs	r0, #3
 80037d4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80037d6:	22c0      	movs	r2, #192	; 0xc0
 80037d8:	0019      	movs	r1, r3
 80037da:	0292      	lsls	r2, r2, #10
 80037dc:	4011      	ands	r1, r2
 80037de:	4291      	cmp	r1, r2
 80037e0:	d19d      	bne.n	800371e <HAL_RCCEx_PeriphCLKConfig+0x42>
 80037e2:	6822      	ldr	r2, [r4, #0]
 80037e4:	2001      	movs	r0, #1
 80037e6:	0392      	lsls	r2, r2, #14
 80037e8:	d599      	bpl.n	800371e <HAL_RCCEx_PeriphCLKConfig+0x42>
 80037ea:	e7f3      	b.n	80037d4 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80037ec:	4013      	ands	r3, r2
 80037ee:	4283      	cmp	r3, r0
 80037f0:	d09c      	beq.n	800372c <HAL_RCCEx_PeriphCLKConfig+0x50>
 80037f2:	682b      	ldr	r3, [r5, #0]
 80037f4:	069b      	lsls	r3, r3, #26
 80037f6:	d59d      	bpl.n	8003734 <HAL_RCCEx_PeriphCLKConfig+0x58>
 80037f8:	2280      	movs	r2, #128	; 0x80
 80037fa:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80037fc:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80037fe:	0312      	lsls	r2, r2, #12
 8003800:	4302      	orrs	r2, r0
 8003802:	6522      	str	r2, [r4, #80]	; 0x50
 8003804:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8003806:	4b1c      	ldr	r3, [pc, #112]	; (8003878 <HAL_RCCEx_PeriphCLKConfig+0x19c>)
 8003808:	481c      	ldr	r0, [pc, #112]	; (800387c <HAL_RCCEx_PeriphCLKConfig+0x1a0>)
 800380a:	400b      	ands	r3, r1
 800380c:	4002      	ands	r2, r0
 800380e:	6522      	str	r2, [r4, #80]	; 0x50
 8003810:	6523      	str	r3, [r4, #80]	; 0x50
 8003812:	05cb      	lsls	r3, r1, #23
 8003814:	d412      	bmi.n	800383c <HAL_RCCEx_PeriphCLKConfig+0x160>
 8003816:	6869      	ldr	r1, [r5, #4]
 8003818:	23c0      	movs	r3, #192	; 0xc0
 800381a:	000a      	movs	r2, r1
 800381c:	029b      	lsls	r3, r3, #10
 800381e:	401a      	ands	r2, r3
 8003820:	429a      	cmp	r2, r3
 8003822:	d107      	bne.n	8003834 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8003824:	6823      	ldr	r3, [r4, #0]
 8003826:	4816      	ldr	r0, [pc, #88]	; (8003880 <HAL_RCCEx_PeriphCLKConfig+0x1a4>)
 8003828:	4003      	ands	r3, r0
 800382a:	20c0      	movs	r0, #192	; 0xc0
 800382c:	0380      	lsls	r0, r0, #14
 800382e:	4001      	ands	r1, r0
 8003830:	430b      	orrs	r3, r1
 8003832:	6023      	str	r3, [r4, #0]
 8003834:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003836:	431a      	orrs	r2, r3
 8003838:	6522      	str	r2, [r4, #80]	; 0x50
 800383a:	e77b      	b.n	8003734 <HAL_RCCEx_PeriphCLKConfig+0x58>
 800383c:	f7fe fd6e 	bl	800231c <HAL_GetTick>
 8003840:	2780      	movs	r7, #128	; 0x80
 8003842:	0006      	movs	r6, r0
 8003844:	00bf      	lsls	r7, r7, #2
 8003846:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003848:	423b      	tst	r3, r7
 800384a:	d000      	beq.n	800384e <HAL_RCCEx_PeriphCLKConfig+0x172>
 800384c:	e76e      	b.n	800372c <HAL_RCCEx_PeriphCLKConfig+0x50>
 800384e:	f7fe fd65 	bl	800231c <HAL_GetTick>
 8003852:	4b0c      	ldr	r3, [pc, #48]	; (8003884 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003854:	1b80      	subs	r0, r0, r6
 8003856:	4298      	cmp	r0, r3
 8003858:	d9f5      	bls.n	8003846 <HAL_RCCEx_PeriphCLKConfig+0x16a>
 800385a:	e7ba      	b.n	80037d2 <HAL_RCCEx_PeriphCLKConfig+0xf6>
 800385c:	40021000 	.word	0x40021000
 8003860:	40007000 	.word	0x40007000
 8003864:	efffffff 	.word	0xefffffff
 8003868:	fffff3ff 	.word	0xfffff3ff
 800386c:	ffffcfff 	.word	0xffffcfff
 8003870:	fbffffff 	.word	0xfbffffff
 8003874:	fff3ffff 	.word	0xfff3ffff
 8003878:	fffcffff 	.word	0xfffcffff
 800387c:	fff7ffff 	.word	0xfff7ffff
 8003880:	ffcfffff 	.word	0xffcfffff
 8003884:	00001388 	.word	0x00001388

08003888 <TIM_Base_SetConfig>:
 8003888:	2280      	movs	r2, #128	; 0x80
 800388a:	b510      	push	{r4, lr}
 800388c:	6803      	ldr	r3, [r0, #0]
 800388e:	05d2      	lsls	r2, r2, #23
 8003890:	4290      	cmp	r0, r2
 8003892:	d005      	beq.n	80038a0 <TIM_Base_SetConfig+0x18>
 8003894:	4c10      	ldr	r4, [pc, #64]	; (80038d8 <TIM_Base_SetConfig+0x50>)
 8003896:	42a0      	cmp	r0, r4
 8003898:	d002      	beq.n	80038a0 <TIM_Base_SetConfig+0x18>
 800389a:	4c10      	ldr	r4, [pc, #64]	; (80038dc <TIM_Base_SetConfig+0x54>)
 800389c:	42a0      	cmp	r0, r4
 800389e:	d10f      	bne.n	80038c0 <TIM_Base_SetConfig+0x38>
 80038a0:	2470      	movs	r4, #112	; 0x70
 80038a2:	43a3      	bics	r3, r4
 80038a4:	684c      	ldr	r4, [r1, #4]
 80038a6:	4323      	orrs	r3, r4
 80038a8:	4290      	cmp	r0, r2
 80038aa:	d005      	beq.n	80038b8 <TIM_Base_SetConfig+0x30>
 80038ac:	4a0a      	ldr	r2, [pc, #40]	; (80038d8 <TIM_Base_SetConfig+0x50>)
 80038ae:	4290      	cmp	r0, r2
 80038b0:	d002      	beq.n	80038b8 <TIM_Base_SetConfig+0x30>
 80038b2:	4a0a      	ldr	r2, [pc, #40]	; (80038dc <TIM_Base_SetConfig+0x54>)
 80038b4:	4290      	cmp	r0, r2
 80038b6:	d103      	bne.n	80038c0 <TIM_Base_SetConfig+0x38>
 80038b8:	4a09      	ldr	r2, [pc, #36]	; (80038e0 <TIM_Base_SetConfig+0x58>)
 80038ba:	4013      	ands	r3, r2
 80038bc:	68ca      	ldr	r2, [r1, #12]
 80038be:	4313      	orrs	r3, r2
 80038c0:	2280      	movs	r2, #128	; 0x80
 80038c2:	4393      	bics	r3, r2
 80038c4:	690a      	ldr	r2, [r1, #16]
 80038c6:	4313      	orrs	r3, r2
 80038c8:	6003      	str	r3, [r0, #0]
 80038ca:	688b      	ldr	r3, [r1, #8]
 80038cc:	62c3      	str	r3, [r0, #44]	; 0x2c
 80038ce:	680b      	ldr	r3, [r1, #0]
 80038d0:	6283      	str	r3, [r0, #40]	; 0x28
 80038d2:	2301      	movs	r3, #1
 80038d4:	6143      	str	r3, [r0, #20]
 80038d6:	bd10      	pop	{r4, pc}
 80038d8:	40010800 	.word	0x40010800
 80038dc:	40011400 	.word	0x40011400
 80038e0:	fffffcff 	.word	0xfffffcff

080038e4 <TIM_OC1_SetConfig>:
 80038e4:	2201      	movs	r2, #1
 80038e6:	b530      	push	{r4, r5, lr}
 80038e8:	2573      	movs	r5, #115	; 0x73
 80038ea:	6a03      	ldr	r3, [r0, #32]
 80038ec:	4393      	bics	r3, r2
 80038ee:	6203      	str	r3, [r0, #32]
 80038f0:	6a03      	ldr	r3, [r0, #32]
 80038f2:	6844      	ldr	r4, [r0, #4]
 80038f4:	6982      	ldr	r2, [r0, #24]
 80038f6:	43aa      	bics	r2, r5
 80038f8:	680d      	ldr	r5, [r1, #0]
 80038fa:	432a      	orrs	r2, r5
 80038fc:	2502      	movs	r5, #2
 80038fe:	43ab      	bics	r3, r5
 8003900:	688d      	ldr	r5, [r1, #8]
 8003902:	6044      	str	r4, [r0, #4]
 8003904:	6182      	str	r2, [r0, #24]
 8003906:	684a      	ldr	r2, [r1, #4]
 8003908:	432b      	orrs	r3, r5
 800390a:	6342      	str	r2, [r0, #52]	; 0x34
 800390c:	6203      	str	r3, [r0, #32]
 800390e:	bd30      	pop	{r4, r5, pc}

08003910 <TIM_OC2_SetConfig>:
 8003910:	2210      	movs	r2, #16
 8003912:	6a03      	ldr	r3, [r0, #32]
 8003914:	b530      	push	{r4, r5, lr}
 8003916:	4393      	bics	r3, r2
 8003918:	6203      	str	r3, [r0, #32]
 800391a:	6a03      	ldr	r3, [r0, #32]
 800391c:	4c09      	ldr	r4, [pc, #36]	; (8003944 <TIM_OC2_SetConfig+0x34>)
 800391e:	6845      	ldr	r5, [r0, #4]
 8003920:	6982      	ldr	r2, [r0, #24]
 8003922:	4014      	ands	r4, r2
 8003924:	680a      	ldr	r2, [r1, #0]
 8003926:	0212      	lsls	r2, r2, #8
 8003928:	4322      	orrs	r2, r4
 800392a:	2420      	movs	r4, #32
 800392c:	43a3      	bics	r3, r4
 800392e:	001c      	movs	r4, r3
 8003930:	688b      	ldr	r3, [r1, #8]
 8003932:	6045      	str	r5, [r0, #4]
 8003934:	011b      	lsls	r3, r3, #4
 8003936:	6182      	str	r2, [r0, #24]
 8003938:	684a      	ldr	r2, [r1, #4]
 800393a:	4323      	orrs	r3, r4
 800393c:	6382      	str	r2, [r0, #56]	; 0x38
 800393e:	6203      	str	r3, [r0, #32]
 8003940:	bd30      	pop	{r4, r5, pc}
 8003942:	46c0      	nop			; (mov r8, r8)
 8003944:	ffff8cff 	.word	0xffff8cff

08003948 <TIM_CCxChannelCmd>:
 8003948:	231f      	movs	r3, #31
 800394a:	b510      	push	{r4, lr}
 800394c:	2401      	movs	r4, #1
 800394e:	4019      	ands	r1, r3
 8003950:	408c      	lsls	r4, r1
 8003952:	408a      	lsls	r2, r1
 8003954:	6a03      	ldr	r3, [r0, #32]
 8003956:	43a3      	bics	r3, r4
 8003958:	6203      	str	r3, [r0, #32]
 800395a:	6a03      	ldr	r3, [r0, #32]
 800395c:	431a      	orrs	r2, r3
 800395e:	6202      	str	r2, [r0, #32]
 8003960:	bd10      	pop	{r4, pc}
	...

08003964 <HAL_TIM_OC_Start>:
 8003964:	b510      	push	{r4, lr}
 8003966:	0003      	movs	r3, r0
 8003968:	0004      	movs	r4, r0
 800396a:	2900      	cmp	r1, #0
 800396c:	d105      	bne.n	800397a <HAL_TIM_OC_Start+0x16>
 800396e:	333a      	adds	r3, #58	; 0x3a
 8003970:	2001      	movs	r0, #1
 8003972:	781a      	ldrb	r2, [r3, #0]
 8003974:	4282      	cmp	r2, r0
 8003976:	d00a      	beq.n	800398e <HAL_TIM_OC_Start+0x2a>
 8003978:	bd10      	pop	{r4, pc}
 800397a:	2904      	cmp	r1, #4
 800397c:	d101      	bne.n	8003982 <HAL_TIM_OC_Start+0x1e>
 800397e:	333b      	adds	r3, #59	; 0x3b
 8003980:	e7f6      	b.n	8003970 <HAL_TIM_OC_Start+0xc>
 8003982:	2908      	cmp	r1, #8
 8003984:	d101      	bne.n	800398a <HAL_TIM_OC_Start+0x26>
 8003986:	333c      	adds	r3, #60	; 0x3c
 8003988:	e7f2      	b.n	8003970 <HAL_TIM_OC_Start+0xc>
 800398a:	333d      	adds	r3, #61	; 0x3d
 800398c:	e7f0      	b.n	8003970 <HAL_TIM_OC_Start+0xc>
 800398e:	2202      	movs	r2, #2
 8003990:	701a      	strb	r2, [r3, #0]
 8003992:	6820      	ldr	r0, [r4, #0]
 8003994:	2201      	movs	r2, #1
 8003996:	f7ff ffd7 	bl	8003948 <TIM_CCxChannelCmd>
 800399a:	2280      	movs	r2, #128	; 0x80
 800399c:	6823      	ldr	r3, [r4, #0]
 800399e:	05d2      	lsls	r2, r2, #23
 80039a0:	4293      	cmp	r3, r2
 80039a2:	d005      	beq.n	80039b0 <HAL_TIM_OC_Start+0x4c>
 80039a4:	4a0b      	ldr	r2, [pc, #44]	; (80039d4 <HAL_TIM_OC_Start+0x70>)
 80039a6:	4293      	cmp	r3, r2
 80039a8:	d002      	beq.n	80039b0 <HAL_TIM_OC_Start+0x4c>
 80039aa:	4a0b      	ldr	r2, [pc, #44]	; (80039d8 <HAL_TIM_OC_Start+0x74>)
 80039ac:	4293      	cmp	r3, r2
 80039ae:	d10a      	bne.n	80039c6 <HAL_TIM_OC_Start+0x62>
 80039b0:	2107      	movs	r1, #7
 80039b2:	689a      	ldr	r2, [r3, #8]
 80039b4:	2000      	movs	r0, #0
 80039b6:	400a      	ands	r2, r1
 80039b8:	2a06      	cmp	r2, #6
 80039ba:	d0dd      	beq.n	8003978 <HAL_TIM_OC_Start+0x14>
 80039bc:	2201      	movs	r2, #1
 80039be:	6819      	ldr	r1, [r3, #0]
 80039c0:	430a      	orrs	r2, r1
 80039c2:	601a      	str	r2, [r3, #0]
 80039c4:	e7d8      	b.n	8003978 <HAL_TIM_OC_Start+0x14>
 80039c6:	2201      	movs	r2, #1
 80039c8:	6819      	ldr	r1, [r3, #0]
 80039ca:	2000      	movs	r0, #0
 80039cc:	430a      	orrs	r2, r1
 80039ce:	601a      	str	r2, [r3, #0]
 80039d0:	e7d2      	b.n	8003978 <HAL_TIM_OC_Start+0x14>
 80039d2:	46c0      	nop			; (mov r8, r8)
 80039d4:	40010800 	.word	0x40010800
 80039d8:	40011400 	.word	0x40011400

080039dc <HAL_TIM_OC_Stop>:
 80039dc:	b570      	push	{r4, r5, r6, lr}
 80039de:	0004      	movs	r4, r0
 80039e0:	2200      	movs	r2, #0
 80039e2:	6800      	ldr	r0, [r0, #0]
 80039e4:	000d      	movs	r5, r1
 80039e6:	f7ff ffaf 	bl	8003948 <TIM_CCxChannelCmd>
 80039ea:	6823      	ldr	r3, [r4, #0]
 80039ec:	4a0c      	ldr	r2, [pc, #48]	; (8003a20 <HAL_TIM_OC_Stop+0x44>)
 80039ee:	6a19      	ldr	r1, [r3, #32]
 80039f0:	4211      	tst	r1, r2
 80039f2:	d103      	bne.n	80039fc <HAL_TIM_OC_Stop+0x20>
 80039f4:	2101      	movs	r1, #1
 80039f6:	681a      	ldr	r2, [r3, #0]
 80039f8:	438a      	bics	r2, r1
 80039fa:	601a      	str	r2, [r3, #0]
 80039fc:	2301      	movs	r3, #1
 80039fe:	2d00      	cmp	r5, #0
 8003a00:	d103      	bne.n	8003a0a <HAL_TIM_OC_Stop+0x2e>
 8003a02:	343a      	adds	r4, #58	; 0x3a
 8003a04:	2000      	movs	r0, #0
 8003a06:	7023      	strb	r3, [r4, #0]
 8003a08:	bd70      	pop	{r4, r5, r6, pc}
 8003a0a:	2d04      	cmp	r5, #4
 8003a0c:	d101      	bne.n	8003a12 <HAL_TIM_OC_Stop+0x36>
 8003a0e:	343b      	adds	r4, #59	; 0x3b
 8003a10:	e7f8      	b.n	8003a04 <HAL_TIM_OC_Stop+0x28>
 8003a12:	2d08      	cmp	r5, #8
 8003a14:	d101      	bne.n	8003a1a <HAL_TIM_OC_Stop+0x3e>
 8003a16:	343c      	adds	r4, #60	; 0x3c
 8003a18:	e7f4      	b.n	8003a04 <HAL_TIM_OC_Stop+0x28>
 8003a1a:	343d      	adds	r4, #61	; 0x3d
 8003a1c:	e7f2      	b.n	8003a04 <HAL_TIM_OC_Stop+0x28>
 8003a1e:	46c0      	nop			; (mov r8, r8)
 8003a20:	00001111 	.word	0x00001111

08003a24 <HAL_TIM_PWM_Init>:
 8003a24:	b570      	push	{r4, r5, r6, lr}
 8003a26:	0004      	movs	r4, r0
 8003a28:	2001      	movs	r0, #1
 8003a2a:	2c00      	cmp	r4, #0
 8003a2c:	d01d      	beq.n	8003a6a <HAL_TIM_PWM_Init+0x46>
 8003a2e:	0025      	movs	r5, r4
 8003a30:	3539      	adds	r5, #57	; 0x39
 8003a32:	782b      	ldrb	r3, [r5, #0]
 8003a34:	b2da      	uxtb	r2, r3
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	d105      	bne.n	8003a46 <HAL_TIM_PWM_Init+0x22>
 8003a3a:	0023      	movs	r3, r4
 8003a3c:	3338      	adds	r3, #56	; 0x38
 8003a3e:	0020      	movs	r0, r4
 8003a40:	701a      	strb	r2, [r3, #0]
 8003a42:	f7fe fb71 	bl	8002128 <HAL_TIM_PWM_MspInit>
 8003a46:	2302      	movs	r3, #2
 8003a48:	702b      	strb	r3, [r5, #0]
 8003a4a:	6820      	ldr	r0, [r4, #0]
 8003a4c:	1d21      	adds	r1, r4, #4
 8003a4e:	f7ff ff1b 	bl	8003888 <TIM_Base_SetConfig>
 8003a52:	0022      	movs	r2, r4
 8003a54:	2301      	movs	r3, #1
 8003a56:	2000      	movs	r0, #0
 8003a58:	323e      	adds	r2, #62	; 0x3e
 8003a5a:	7013      	strb	r3, [r2, #0]
 8003a5c:	343d      	adds	r4, #61	; 0x3d
 8003a5e:	3a04      	subs	r2, #4
 8003a60:	7013      	strb	r3, [r2, #0]
 8003a62:	7053      	strb	r3, [r2, #1]
 8003a64:	7093      	strb	r3, [r2, #2]
 8003a66:	7023      	strb	r3, [r4, #0]
 8003a68:	702b      	strb	r3, [r5, #0]
 8003a6a:	bd70      	pop	{r4, r5, r6, pc}

08003a6c <HAL_TIM_PWM_Start>:
 8003a6c:	b510      	push	{r4, lr}
 8003a6e:	f7ff ff79 	bl	8003964 <HAL_TIM_OC_Start>
 8003a72:	bd10      	pop	{r4, pc}

08003a74 <HAL_TIM_PWM_Stop>:
 8003a74:	b510      	push	{r4, lr}
 8003a76:	f7ff ffb1 	bl	80039dc <HAL_TIM_OC_Stop>
 8003a7a:	bd10      	pop	{r4, pc}

08003a7c <HAL_TIM_PWM_ConfigChannel>:
 8003a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a7e:	0005      	movs	r5, r0
 8003a80:	3538      	adds	r5, #56	; 0x38
 8003a82:	782b      	ldrb	r3, [r5, #0]
 8003a84:	0007      	movs	r7, r0
 8003a86:	000c      	movs	r4, r1
 8003a88:	0016      	movs	r6, r2
 8003a8a:	2002      	movs	r0, #2
 8003a8c:	2b01      	cmp	r3, #1
 8003a8e:	d00a      	beq.n	8003aa6 <HAL_TIM_PWM_ConfigChannel+0x2a>
 8003a90:	3801      	subs	r0, #1
 8003a92:	7028      	strb	r0, [r5, #0]
 8003a94:	2a08      	cmp	r2, #8
 8003a96:	d050      	beq.n	8003b3a <HAL_TIM_PWM_ConfigChannel+0xbe>
 8003a98:	d806      	bhi.n	8003aa8 <HAL_TIM_PWM_ConfigChannel+0x2c>
 8003a9a:	2a00      	cmp	r2, #0
 8003a9c:	d02a      	beq.n	8003af4 <HAL_TIM_PWM_ConfigChannel+0x78>
 8003a9e:	2a04      	cmp	r2, #4
 8003aa0:	d03a      	beq.n	8003b18 <HAL_TIM_PWM_ConfigChannel+0x9c>
 8003aa2:	2300      	movs	r3, #0
 8003aa4:	702b      	strb	r3, [r5, #0]
 8003aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003aa8:	2a0c      	cmp	r2, #12
 8003aaa:	d1fa      	bne.n	8003aa2 <HAL_TIM_PWM_ConfigChannel+0x26>
 8003aac:	683b      	ldr	r3, [r7, #0]
 8003aae:	4934      	ldr	r1, [pc, #208]	; (8003b80 <HAL_TIM_PWM_ConfigChannel+0x104>)
 8003ab0:	6a1a      	ldr	r2, [r3, #32]
 8003ab2:	4834      	ldr	r0, [pc, #208]	; (8003b84 <HAL_TIM_PWM_ConfigChannel+0x108>)
 8003ab4:	400a      	ands	r2, r1
 8003ab6:	621a      	str	r2, [r3, #32]
 8003ab8:	6a1a      	ldr	r2, [r3, #32]
 8003aba:	685e      	ldr	r6, [r3, #4]
 8003abc:	69d9      	ldr	r1, [r3, #28]
 8003abe:	4001      	ands	r1, r0
 8003ac0:	6820      	ldr	r0, [r4, #0]
 8003ac2:	0207      	lsls	r7, r0, #8
 8003ac4:	4830      	ldr	r0, [pc, #192]	; (8003b88 <HAL_TIM_PWM_ConfigChannel+0x10c>)
 8003ac6:	4339      	orrs	r1, r7
 8003ac8:	4010      	ands	r0, r2
 8003aca:	68a2      	ldr	r2, [r4, #8]
 8003acc:	605e      	str	r6, [r3, #4]
 8003ace:	0312      	lsls	r2, r2, #12
 8003ad0:	61d9      	str	r1, [r3, #28]
 8003ad2:	6861      	ldr	r1, [r4, #4]
 8003ad4:	4302      	orrs	r2, r0
 8003ad6:	6419      	str	r1, [r3, #64]	; 0x40
 8003ad8:	621a      	str	r2, [r3, #32]
 8003ada:	2280      	movs	r2, #128	; 0x80
 8003adc:	69d9      	ldr	r1, [r3, #28]
 8003ade:	0112      	lsls	r2, r2, #4
 8003ae0:	430a      	orrs	r2, r1
 8003ae2:	61da      	str	r2, [r3, #28]
 8003ae4:	69da      	ldr	r2, [r3, #28]
 8003ae6:	4929      	ldr	r1, [pc, #164]	; (8003b8c <HAL_TIM_PWM_ConfigChannel+0x110>)
 8003ae8:	400a      	ands	r2, r1
 8003aea:	61da      	str	r2, [r3, #28]
 8003aec:	68e2      	ldr	r2, [r4, #12]
 8003aee:	69d9      	ldr	r1, [r3, #28]
 8003af0:	0212      	lsls	r2, r2, #8
 8003af2:	e041      	b.n	8003b78 <HAL_TIM_PWM_ConfigChannel+0xfc>
 8003af4:	6838      	ldr	r0, [r7, #0]
 8003af6:	f7ff fef5 	bl	80038e4 <TIM_OC1_SetConfig>
 8003afa:	2208      	movs	r2, #8
 8003afc:	683b      	ldr	r3, [r7, #0]
 8003afe:	6999      	ldr	r1, [r3, #24]
 8003b00:	430a      	orrs	r2, r1
 8003b02:	2104      	movs	r1, #4
 8003b04:	619a      	str	r2, [r3, #24]
 8003b06:	699a      	ldr	r2, [r3, #24]
 8003b08:	438a      	bics	r2, r1
 8003b0a:	619a      	str	r2, [r3, #24]
 8003b0c:	699a      	ldr	r2, [r3, #24]
 8003b0e:	68e1      	ldr	r1, [r4, #12]
 8003b10:	430a      	orrs	r2, r1
 8003b12:	619a      	str	r2, [r3, #24]
 8003b14:	2000      	movs	r0, #0
 8003b16:	e7c4      	b.n	8003aa2 <HAL_TIM_PWM_ConfigChannel+0x26>
 8003b18:	6838      	ldr	r0, [r7, #0]
 8003b1a:	f7ff fef9 	bl	8003910 <TIM_OC2_SetConfig>
 8003b1e:	2280      	movs	r2, #128	; 0x80
 8003b20:	683b      	ldr	r3, [r7, #0]
 8003b22:	0112      	lsls	r2, r2, #4
 8003b24:	6999      	ldr	r1, [r3, #24]
 8003b26:	430a      	orrs	r2, r1
 8003b28:	619a      	str	r2, [r3, #24]
 8003b2a:	699a      	ldr	r2, [r3, #24]
 8003b2c:	4917      	ldr	r1, [pc, #92]	; (8003b8c <HAL_TIM_PWM_ConfigChannel+0x110>)
 8003b2e:	400a      	ands	r2, r1
 8003b30:	619a      	str	r2, [r3, #24]
 8003b32:	68e2      	ldr	r2, [r4, #12]
 8003b34:	6999      	ldr	r1, [r3, #24]
 8003b36:	0212      	lsls	r2, r2, #8
 8003b38:	e7ea      	b.n	8003b10 <HAL_TIM_PWM_ConfigChannel+0x94>
 8003b3a:	2073      	movs	r0, #115	; 0x73
 8003b3c:	683b      	ldr	r3, [r7, #0]
 8003b3e:	4914      	ldr	r1, [pc, #80]	; (8003b90 <HAL_TIM_PWM_ConfigChannel+0x114>)
 8003b40:	6a1a      	ldr	r2, [r3, #32]
 8003b42:	400a      	ands	r2, r1
 8003b44:	621a      	str	r2, [r3, #32]
 8003b46:	6a1a      	ldr	r2, [r3, #32]
 8003b48:	685f      	ldr	r7, [r3, #4]
 8003b4a:	69d9      	ldr	r1, [r3, #28]
 8003b4c:	4381      	bics	r1, r0
 8003b4e:	6820      	ldr	r0, [r4, #0]
 8003b50:	4301      	orrs	r1, r0
 8003b52:	4810      	ldr	r0, [pc, #64]	; (8003b94 <HAL_TIM_PWM_ConfigChannel+0x118>)
 8003b54:	4010      	ands	r0, r2
 8003b56:	68a2      	ldr	r2, [r4, #8]
 8003b58:	605f      	str	r7, [r3, #4]
 8003b5a:	61d9      	str	r1, [r3, #28]
 8003b5c:	6861      	ldr	r1, [r4, #4]
 8003b5e:	0212      	lsls	r2, r2, #8
 8003b60:	63d9      	str	r1, [r3, #60]	; 0x3c
 8003b62:	2104      	movs	r1, #4
 8003b64:	4302      	orrs	r2, r0
 8003b66:	621a      	str	r2, [r3, #32]
 8003b68:	69da      	ldr	r2, [r3, #28]
 8003b6a:	4316      	orrs	r6, r2
 8003b6c:	61de      	str	r6, [r3, #28]
 8003b6e:	69da      	ldr	r2, [r3, #28]
 8003b70:	438a      	bics	r2, r1
 8003b72:	61da      	str	r2, [r3, #28]
 8003b74:	69da      	ldr	r2, [r3, #28]
 8003b76:	68e1      	ldr	r1, [r4, #12]
 8003b78:	430a      	orrs	r2, r1
 8003b7a:	61da      	str	r2, [r3, #28]
 8003b7c:	e7ca      	b.n	8003b14 <HAL_TIM_PWM_ConfigChannel+0x98>
 8003b7e:	46c0      	nop			; (mov r8, r8)
 8003b80:	ffffefff 	.word	0xffffefff
 8003b84:	ffff8cff 	.word	0xffff8cff
 8003b88:	ffffdfff 	.word	0xffffdfff
 8003b8c:	fffffbff 	.word	0xfffffbff
 8003b90:	fffffeff 	.word	0xfffffeff
 8003b94:	fffffdff 	.word	0xfffffdff

08003b98 <HAL_TIMEx_MasterConfigSynchronization>:
 8003b98:	b570      	push	{r4, r5, r6, lr}
 8003b9a:	0004      	movs	r4, r0
 8003b9c:	2202      	movs	r2, #2
 8003b9e:	3438      	adds	r4, #56	; 0x38
 8003ba0:	7825      	ldrb	r5, [r4, #0]
 8003ba2:	0003      	movs	r3, r0
 8003ba4:	0010      	movs	r0, r2
 8003ba6:	2d01      	cmp	r5, #1
 8003ba8:	d01d      	beq.n	8003be6 <HAL_TIMEx_MasterConfigSynchronization+0x4e>
 8003baa:	001d      	movs	r5, r3
 8003bac:	2670      	movs	r6, #112	; 0x70
 8003bae:	3539      	adds	r5, #57	; 0x39
 8003bb0:	702a      	strb	r2, [r5, #0]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	6858      	ldr	r0, [r3, #4]
 8003bb6:	689a      	ldr	r2, [r3, #8]
 8003bb8:	43b0      	bics	r0, r6
 8003bba:	680e      	ldr	r6, [r1, #0]
 8003bbc:	4330      	orrs	r0, r6
 8003bbe:	6058      	str	r0, [r3, #4]
 8003bc0:	2080      	movs	r0, #128	; 0x80
 8003bc2:	05c0      	lsls	r0, r0, #23
 8003bc4:	4283      	cmp	r3, r0
 8003bc6:	d005      	beq.n	8003bd4 <HAL_TIMEx_MasterConfigSynchronization+0x3c>
 8003bc8:	4807      	ldr	r0, [pc, #28]	; (8003be8 <HAL_TIMEx_MasterConfigSynchronization+0x50>)
 8003bca:	4283      	cmp	r3, r0
 8003bcc:	d002      	beq.n	8003bd4 <HAL_TIMEx_MasterConfigSynchronization+0x3c>
 8003bce:	4807      	ldr	r0, [pc, #28]	; (8003bec <HAL_TIMEx_MasterConfigSynchronization+0x54>)
 8003bd0:	4283      	cmp	r3, r0
 8003bd2:	d104      	bne.n	8003bde <HAL_TIMEx_MasterConfigSynchronization+0x46>
 8003bd4:	2080      	movs	r0, #128	; 0x80
 8003bd6:	6849      	ldr	r1, [r1, #4]
 8003bd8:	4382      	bics	r2, r0
 8003bda:	430a      	orrs	r2, r1
 8003bdc:	609a      	str	r2, [r3, #8]
 8003bde:	2301      	movs	r3, #1
 8003be0:	2000      	movs	r0, #0
 8003be2:	702b      	strb	r3, [r5, #0]
 8003be4:	7020      	strb	r0, [r4, #0]
 8003be6:	bd70      	pop	{r4, r5, r6, pc}
 8003be8:	40010800 	.word	0x40010800
 8003bec:	40011400 	.word	0x40011400

08003bf0 <UART_EndRxTransfer>:
 8003bf0:	b530      	push	{r4, r5, lr}
 8003bf2:	f3ef 8410 	mrs	r4, PRIMASK
 8003bf6:	2201      	movs	r2, #1
 8003bf8:	f382 8810 	msr	PRIMASK, r2
 8003bfc:	6801      	ldr	r1, [r0, #0]
 8003bfe:	4d12      	ldr	r5, [pc, #72]	; (8003c48 <UART_EndRxTransfer+0x58>)
 8003c00:	680b      	ldr	r3, [r1, #0]
 8003c02:	402b      	ands	r3, r5
 8003c04:	600b      	str	r3, [r1, #0]
 8003c06:	f384 8810 	msr	PRIMASK, r4
 8003c0a:	f3ef 8410 	mrs	r4, PRIMASK
 8003c0e:	f382 8810 	msr	PRIMASK, r2
 8003c12:	6801      	ldr	r1, [r0, #0]
 8003c14:	688b      	ldr	r3, [r1, #8]
 8003c16:	4393      	bics	r3, r2
 8003c18:	608b      	str	r3, [r1, #8]
 8003c1a:	f384 8810 	msr	PRIMASK, r4
 8003c1e:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8003c20:	4293      	cmp	r3, r2
 8003c22:	d10a      	bne.n	8003c3a <UART_EndRxTransfer+0x4a>
 8003c24:	f3ef 8110 	mrs	r1, PRIMASK
 8003c28:	f383 8810 	msr	PRIMASK, r3
 8003c2c:	2410      	movs	r4, #16
 8003c2e:	6802      	ldr	r2, [r0, #0]
 8003c30:	6813      	ldr	r3, [r2, #0]
 8003c32:	43a3      	bics	r3, r4
 8003c34:	6013      	str	r3, [r2, #0]
 8003c36:	f381 8810 	msr	PRIMASK, r1
 8003c3a:	2220      	movs	r2, #32
 8003c3c:	1d03      	adds	r3, r0, #4
 8003c3e:	67da      	str	r2, [r3, #124]	; 0x7c
 8003c40:	2300      	movs	r3, #0
 8003c42:	6603      	str	r3, [r0, #96]	; 0x60
 8003c44:	6683      	str	r3, [r0, #104]	; 0x68
 8003c46:	bd30      	pop	{r4, r5, pc}
 8003c48:	fffffedf 	.word	0xfffffedf

08003c4c <UART_SetConfig>:
 8003c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c4e:	0004      	movs	r4, r0
 8003c50:	6925      	ldr	r5, [r4, #16]
 8003c52:	68a1      	ldr	r1, [r4, #8]
 8003c54:	6802      	ldr	r2, [r0, #0]
 8003c56:	4329      	orrs	r1, r5
 8003c58:	6965      	ldr	r5, [r4, #20]
 8003c5a:	69c3      	ldr	r3, [r0, #28]
 8003c5c:	4329      	orrs	r1, r5
 8003c5e:	6810      	ldr	r0, [r2, #0]
 8003c60:	4d72      	ldr	r5, [pc, #456]	; (8003e2c <UART_SetConfig+0x1e0>)
 8003c62:	4319      	orrs	r1, r3
 8003c64:	4028      	ands	r0, r5
 8003c66:	4301      	orrs	r1, r0
 8003c68:	6011      	str	r1, [r2, #0]
 8003c6a:	6851      	ldr	r1, [r2, #4]
 8003c6c:	4870      	ldr	r0, [pc, #448]	; (8003e30 <UART_SetConfig+0x1e4>)
 8003c6e:	4d71      	ldr	r5, [pc, #452]	; (8003e34 <UART_SetConfig+0x1e8>)
 8003c70:	4001      	ands	r1, r0
 8003c72:	68e0      	ldr	r0, [r4, #12]
 8003c74:	4301      	orrs	r1, r0
 8003c76:	6051      	str	r1, [r2, #4]
 8003c78:	69a0      	ldr	r0, [r4, #24]
 8003c7a:	42aa      	cmp	r2, r5
 8003c7c:	d001      	beq.n	8003c82 <UART_SetConfig+0x36>
 8003c7e:	6a21      	ldr	r1, [r4, #32]
 8003c80:	4308      	orrs	r0, r1
 8003c82:	6891      	ldr	r1, [r2, #8]
 8003c84:	4e6c      	ldr	r6, [pc, #432]	; (8003e38 <UART_SetConfig+0x1ec>)
 8003c86:	4031      	ands	r1, r6
 8003c88:	4301      	orrs	r1, r0
 8003c8a:	6091      	str	r1, [r2, #8]
 8003c8c:	496b      	ldr	r1, [pc, #428]	; (8003e3c <UART_SetConfig+0x1f0>)
 8003c8e:	428a      	cmp	r2, r1
 8003c90:	d10f      	bne.n	8003cb2 <UART_SetConfig+0x66>
 8003c92:	2103      	movs	r1, #3
 8003c94:	4a6a      	ldr	r2, [pc, #424]	; (8003e40 <UART_SetConfig+0x1f4>)
 8003c96:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8003c98:	400a      	ands	r2, r1
 8003c9a:	3a01      	subs	r2, #1
 8003c9c:	4969      	ldr	r1, [pc, #420]	; (8003e44 <UART_SetConfig+0x1f8>)
 8003c9e:	2a02      	cmp	r2, #2
 8003ca0:	d90f      	bls.n	8003cc2 <UART_SetConfig+0x76>
 8003ca2:	2280      	movs	r2, #128	; 0x80
 8003ca4:	0212      	lsls	r2, r2, #8
 8003ca6:	4293      	cmp	r3, r2
 8003ca8:	d100      	bne.n	8003cac <UART_SetConfig+0x60>
 8003caa:	e069      	b.n	8003d80 <UART_SetConfig+0x134>
 8003cac:	f7ff fd06 	bl	80036bc <HAL_RCC_GetPCLK2Freq>
 8003cb0:	e09c      	b.n	8003dec <UART_SetConfig+0x1a0>
 8003cb2:	4965      	ldr	r1, [pc, #404]	; (8003e48 <UART_SetConfig+0x1fc>)
 8003cb4:	428a      	cmp	r2, r1
 8003cb6:	d113      	bne.n	8003ce0 <UART_SetConfig+0x94>
 8003cb8:	210c      	movs	r1, #12
 8003cba:	4a61      	ldr	r2, [pc, #388]	; (8003e40 <UART_SetConfig+0x1f4>)
 8003cbc:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8003cbe:	400a      	ands	r2, r1
 8003cc0:	4962      	ldr	r1, [pc, #392]	; (8003e4c <UART_SetConfig+0x200>)
 8003cc2:	5c88      	ldrb	r0, [r1, r2]
 8003cc4:	2280      	movs	r2, #128	; 0x80
 8003cc6:	0212      	lsls	r2, r2, #8
 8003cc8:	4293      	cmp	r3, r2
 8003cca:	d000      	beq.n	8003cce <UART_SetConfig+0x82>
 8003ccc:	e07f      	b.n	8003dce <UART_SetConfig+0x182>
 8003cce:	2808      	cmp	r0, #8
 8003cd0:	d818      	bhi.n	8003d04 <UART_SetConfig+0xb8>
 8003cd2:	f7fc fa21 	bl	8000118 <__gnu_thumb1_case_uqi>
 8003cd6:	5550      	.short	0x5550
 8003cd8:	17791758 	.word	0x17791758
 8003cdc:	1717      	.short	0x1717
 8003cde:	63          	.byte	0x63
 8003cdf:	00          	.byte	0x00
 8003ce0:	42aa      	cmp	r2, r5
 8003ce2:	d10f      	bne.n	8003d04 <UART_SetConfig+0xb8>
 8003ce4:	21c0      	movs	r1, #192	; 0xc0
 8003ce6:	2080      	movs	r0, #128	; 0x80
 8003ce8:	4a55      	ldr	r2, [pc, #340]	; (8003e40 <UART_SetConfig+0x1f4>)
 8003cea:	0109      	lsls	r1, r1, #4
 8003cec:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8003cee:	0100      	lsls	r0, r0, #4
 8003cf0:	400b      	ands	r3, r1
 8003cf2:	4283      	cmp	r3, r0
 8003cf4:	d016      	beq.n	8003d24 <UART_SetConfig+0xd8>
 8003cf6:	d807      	bhi.n	8003d08 <UART_SetConfig+0xbc>
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d00a      	beq.n	8003d12 <UART_SetConfig+0xc6>
 8003cfc:	2280      	movs	r2, #128	; 0x80
 8003cfe:	00d2      	lsls	r2, r2, #3
 8003d00:	4293      	cmp	r3, r2
 8003d02:	d035      	beq.n	8003d70 <UART_SetConfig+0x124>
 8003d04:	2001      	movs	r0, #1
 8003d06:	e009      	b.n	8003d1c <UART_SetConfig+0xd0>
 8003d08:	428b      	cmp	r3, r1
 8003d0a:	d1fb      	bne.n	8003d04 <UART_SetConfig+0xb8>
 8003d0c:	2080      	movs	r0, #128	; 0x80
 8003d0e:	0200      	lsls	r0, r0, #8
 8003d10:	e012      	b.n	8003d38 <UART_SetConfig+0xec>
 8003d12:	f7ff fcc3 	bl	800369c <HAL_RCC_GetPCLK1Freq>
 8003d16:	2800      	cmp	r0, #0
 8003d18:	d10e      	bne.n	8003d38 <UART_SetConfig+0xec>
 8003d1a:	2000      	movs	r0, #0
 8003d1c:	2300      	movs	r3, #0
 8003d1e:	66a3      	str	r3, [r4, #104]	; 0x68
 8003d20:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d24:	2310      	movs	r3, #16
 8003d26:	6810      	ldr	r0, [r2, #0]
 8003d28:	4018      	ands	r0, r3
 8003d2a:	4243      	negs	r3, r0
 8003d2c:	4158      	adcs	r0, r3
 8003d2e:	4b48      	ldr	r3, [pc, #288]	; (8003e50 <UART_SetConfig+0x204>)
 8003d30:	4240      	negs	r0, r0
 8003d32:	4018      	ands	r0, r3
 8003d34:	4b47      	ldr	r3, [pc, #284]	; (8003e54 <UART_SetConfig+0x208>)
 8003d36:	18c0      	adds	r0, r0, r3
 8003d38:	2203      	movs	r2, #3
 8003d3a:	6863      	ldr	r3, [r4, #4]
 8003d3c:	435a      	muls	r2, r3
 8003d3e:	4282      	cmp	r2, r0
 8003d40:	d8e0      	bhi.n	8003d04 <UART_SetConfig+0xb8>
 8003d42:	031a      	lsls	r2, r3, #12
 8003d44:	4282      	cmp	r2, r0
 8003d46:	d3dd      	bcc.n	8003d04 <UART_SetConfig+0xb8>
 8003d48:	2700      	movs	r7, #0
 8003d4a:	0e02      	lsrs	r2, r0, #24
 8003d4c:	0201      	lsls	r1, r0, #8
 8003d4e:	085e      	lsrs	r6, r3, #1
 8003d50:	1989      	adds	r1, r1, r6
 8003d52:	417a      	adcs	r2, r7
 8003d54:	0008      	movs	r0, r1
 8003d56:	0011      	movs	r1, r2
 8003d58:	001a      	movs	r2, r3
 8003d5a:	003b      	movs	r3, r7
 8003d5c:	f7fc fa7c 	bl	8000258 <__aeabi_uldivmod>
 8003d60:	4b3d      	ldr	r3, [pc, #244]	; (8003e58 <UART_SetConfig+0x20c>)
 8003d62:	18c2      	adds	r2, r0, r3
 8003d64:	4b3d      	ldr	r3, [pc, #244]	; (8003e5c <UART_SetConfig+0x210>)
 8003d66:	429a      	cmp	r2, r3
 8003d68:	d8cc      	bhi.n	8003d04 <UART_SetConfig+0xb8>
 8003d6a:	6823      	ldr	r3, [r4, #0]
 8003d6c:	60d8      	str	r0, [r3, #12]
 8003d6e:	e7d4      	b.n	8003d1a <UART_SetConfig+0xce>
 8003d70:	f7ff f8fc 	bl	8002f6c <HAL_RCC_GetSysClockFreq>
 8003d74:	e7cf      	b.n	8003d16 <UART_SetConfig+0xca>
 8003d76:	f7ff fc91 	bl	800369c <HAL_RCC_GetPCLK1Freq>
 8003d7a:	1e03      	subs	r3, r0, #0
 8003d7c:	d0cd      	beq.n	8003d1a <UART_SetConfig+0xce>
 8003d7e:	e00d      	b.n	8003d9c <UART_SetConfig+0x150>
 8003d80:	f7ff fc9c 	bl	80036bc <HAL_RCC_GetPCLK2Freq>
 8003d84:	e7f9      	b.n	8003d7a <UART_SetConfig+0x12e>
 8003d86:	4b2e      	ldr	r3, [pc, #184]	; (8003e40 <UART_SetConfig+0x1f4>)
 8003d88:	4a32      	ldr	r2, [pc, #200]	; (8003e54 <UART_SetConfig+0x208>)
 8003d8a:	6818      	ldr	r0, [r3, #0]
 8003d8c:	2310      	movs	r3, #16
 8003d8e:	4018      	ands	r0, r3
 8003d90:	4243      	negs	r3, r0
 8003d92:	4158      	adcs	r0, r3
 8003d94:	4b2e      	ldr	r3, [pc, #184]	; (8003e50 <UART_SetConfig+0x204>)
 8003d96:	4240      	negs	r0, r0
 8003d98:	4003      	ands	r3, r0
 8003d9a:	189b      	adds	r3, r3, r2
 8003d9c:	0058      	lsls	r0, r3, #1
 8003d9e:	6863      	ldr	r3, [r4, #4]
 8003da0:	6861      	ldr	r1, [r4, #4]
 8003da2:	085b      	lsrs	r3, r3, #1
 8003da4:	18c0      	adds	r0, r0, r3
 8003da6:	f7fc f9cb 	bl	8000140 <__udivsi3>
 8003daa:	0002      	movs	r2, r0
 8003dac:	4b2c      	ldr	r3, [pc, #176]	; (8003e60 <UART_SetConfig+0x214>)
 8003dae:	3a10      	subs	r2, #16
 8003db0:	429a      	cmp	r2, r3
 8003db2:	d8a7      	bhi.n	8003d04 <UART_SetConfig+0xb8>
 8003db4:	230f      	movs	r3, #15
 8003db6:	0002      	movs	r2, r0
 8003db8:	0700      	lsls	r0, r0, #28
 8003dba:	439a      	bics	r2, r3
 8003dbc:	b293      	uxth	r3, r2
 8003dbe:	0f40      	lsrs	r0, r0, #29
 8003dc0:	6822      	ldr	r2, [r4, #0]
 8003dc2:	4318      	orrs	r0, r3
 8003dc4:	60d0      	str	r0, [r2, #12]
 8003dc6:	e7a8      	b.n	8003d1a <UART_SetConfig+0xce>
 8003dc8:	f7ff f8d0 	bl	8002f6c <HAL_RCC_GetSysClockFreq>
 8003dcc:	e7d5      	b.n	8003d7a <UART_SetConfig+0x12e>
 8003dce:	2808      	cmp	r0, #8
 8003dd0:	d898      	bhi.n	8003d04 <UART_SetConfig+0xb8>
 8003dd2:	f7fc f9ab 	bl	800012c <__gnu_thumb1_case_shi>
 8003dd6:	0009      	.short	0x0009
 8003dd8:	000fff6b 	.word	0x000fff6b
 8003ddc:	0024ff97 	.word	0x0024ff97
 8003de0:	ff97ff97 	.word	0xff97ff97
 8003de4:	0027ff97 	.word	0x0027ff97
 8003de8:	f7ff fc58 	bl	800369c <HAL_RCC_GetPCLK1Freq>
 8003dec:	2800      	cmp	r0, #0
 8003dee:	d100      	bne.n	8003df2 <UART_SetConfig+0x1a6>
 8003df0:	e793      	b.n	8003d1a <UART_SetConfig+0xce>
 8003df2:	e00a      	b.n	8003e0a <UART_SetConfig+0x1be>
 8003df4:	4b12      	ldr	r3, [pc, #72]	; (8003e40 <UART_SetConfig+0x1f4>)
 8003df6:	6818      	ldr	r0, [r3, #0]
 8003df8:	2310      	movs	r3, #16
 8003dfa:	4018      	ands	r0, r3
 8003dfc:	4243      	negs	r3, r0
 8003dfe:	4158      	adcs	r0, r3
 8003e00:	4b13      	ldr	r3, [pc, #76]	; (8003e50 <UART_SetConfig+0x204>)
 8003e02:	4240      	negs	r0, r0
 8003e04:	4018      	ands	r0, r3
 8003e06:	4b13      	ldr	r3, [pc, #76]	; (8003e54 <UART_SetConfig+0x208>)
 8003e08:	18c0      	adds	r0, r0, r3
 8003e0a:	6863      	ldr	r3, [r4, #4]
 8003e0c:	6861      	ldr	r1, [r4, #4]
 8003e0e:	085b      	lsrs	r3, r3, #1
 8003e10:	1818      	adds	r0, r3, r0
 8003e12:	f7fc f995 	bl	8000140 <__udivsi3>
 8003e16:	0002      	movs	r2, r0
 8003e18:	4b11      	ldr	r3, [pc, #68]	; (8003e60 <UART_SetConfig+0x214>)
 8003e1a:	3a10      	subs	r2, #16
 8003e1c:	e7a3      	b.n	8003d66 <UART_SetConfig+0x11a>
 8003e1e:	f7ff f8a5 	bl	8002f6c <HAL_RCC_GetSysClockFreq>
 8003e22:	e7e3      	b.n	8003dec <UART_SetConfig+0x1a0>
 8003e24:	2080      	movs	r0, #128	; 0x80
 8003e26:	0200      	lsls	r0, r0, #8
 8003e28:	e7ef      	b.n	8003e0a <UART_SetConfig+0x1be>
 8003e2a:	46c0      	nop			; (mov r8, r8)
 8003e2c:	efff69f3 	.word	0xefff69f3
 8003e30:	ffffcfff 	.word	0xffffcfff
 8003e34:	40004800 	.word	0x40004800
 8003e38:	fffff4ff 	.word	0xfffff4ff
 8003e3c:	40013800 	.word	0x40013800
 8003e40:	40021000 	.word	0x40021000
 8003e44:	080052cb 	.word	0x080052cb
 8003e48:	40004400 	.word	0x40004400
 8003e4c:	080052ce 	.word	0x080052ce
 8003e50:	00b71b00 	.word	0x00b71b00
 8003e54:	003d0900 	.word	0x003d0900
 8003e58:	fffffd00 	.word	0xfffffd00
 8003e5c:	000ffcff 	.word	0x000ffcff
 8003e60:	0000ffef 	.word	0x0000ffef

08003e64 <UART_AdvFeatureConfig>:
 8003e64:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8003e66:	b530      	push	{r4, r5, lr}
 8003e68:	07da      	lsls	r2, r3, #31
 8003e6a:	d506      	bpl.n	8003e7a <UART_AdvFeatureConfig+0x16>
 8003e6c:	6801      	ldr	r1, [r0, #0]
 8003e6e:	4c28      	ldr	r4, [pc, #160]	; (8003f10 <UART_AdvFeatureConfig+0xac>)
 8003e70:	684a      	ldr	r2, [r1, #4]
 8003e72:	4022      	ands	r2, r4
 8003e74:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8003e76:	4322      	orrs	r2, r4
 8003e78:	604a      	str	r2, [r1, #4]
 8003e7a:	079a      	lsls	r2, r3, #30
 8003e7c:	d506      	bpl.n	8003e8c <UART_AdvFeatureConfig+0x28>
 8003e7e:	6801      	ldr	r1, [r0, #0]
 8003e80:	4c24      	ldr	r4, [pc, #144]	; (8003f14 <UART_AdvFeatureConfig+0xb0>)
 8003e82:	684a      	ldr	r2, [r1, #4]
 8003e84:	4022      	ands	r2, r4
 8003e86:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003e88:	4322      	orrs	r2, r4
 8003e8a:	604a      	str	r2, [r1, #4]
 8003e8c:	075a      	lsls	r2, r3, #29
 8003e8e:	d506      	bpl.n	8003e9e <UART_AdvFeatureConfig+0x3a>
 8003e90:	6801      	ldr	r1, [r0, #0]
 8003e92:	4c21      	ldr	r4, [pc, #132]	; (8003f18 <UART_AdvFeatureConfig+0xb4>)
 8003e94:	684a      	ldr	r2, [r1, #4]
 8003e96:	4022      	ands	r2, r4
 8003e98:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003e9a:	4322      	orrs	r2, r4
 8003e9c:	604a      	str	r2, [r1, #4]
 8003e9e:	071a      	lsls	r2, r3, #28
 8003ea0:	d506      	bpl.n	8003eb0 <UART_AdvFeatureConfig+0x4c>
 8003ea2:	6801      	ldr	r1, [r0, #0]
 8003ea4:	4c1d      	ldr	r4, [pc, #116]	; (8003f1c <UART_AdvFeatureConfig+0xb8>)
 8003ea6:	684a      	ldr	r2, [r1, #4]
 8003ea8:	4022      	ands	r2, r4
 8003eaa:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003eac:	4322      	orrs	r2, r4
 8003eae:	604a      	str	r2, [r1, #4]
 8003eb0:	06da      	lsls	r2, r3, #27
 8003eb2:	d506      	bpl.n	8003ec2 <UART_AdvFeatureConfig+0x5e>
 8003eb4:	6801      	ldr	r1, [r0, #0]
 8003eb6:	4c1a      	ldr	r4, [pc, #104]	; (8003f20 <UART_AdvFeatureConfig+0xbc>)
 8003eb8:	688a      	ldr	r2, [r1, #8]
 8003eba:	4022      	ands	r2, r4
 8003ebc:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003ebe:	4322      	orrs	r2, r4
 8003ec0:	608a      	str	r2, [r1, #8]
 8003ec2:	069a      	lsls	r2, r3, #26
 8003ec4:	d506      	bpl.n	8003ed4 <UART_AdvFeatureConfig+0x70>
 8003ec6:	6801      	ldr	r1, [r0, #0]
 8003ec8:	4c16      	ldr	r4, [pc, #88]	; (8003f24 <UART_AdvFeatureConfig+0xc0>)
 8003eca:	688a      	ldr	r2, [r1, #8]
 8003ecc:	4022      	ands	r2, r4
 8003ece:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003ed0:	4322      	orrs	r2, r4
 8003ed2:	608a      	str	r2, [r1, #8]
 8003ed4:	065a      	lsls	r2, r3, #25
 8003ed6:	d510      	bpl.n	8003efa <UART_AdvFeatureConfig+0x96>
 8003ed8:	6801      	ldr	r1, [r0, #0]
 8003eda:	4d13      	ldr	r5, [pc, #76]	; (8003f28 <UART_AdvFeatureConfig+0xc4>)
 8003edc:	684a      	ldr	r2, [r1, #4]
 8003ede:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003ee0:	402a      	ands	r2, r5
 8003ee2:	4322      	orrs	r2, r4
 8003ee4:	604a      	str	r2, [r1, #4]
 8003ee6:	2280      	movs	r2, #128	; 0x80
 8003ee8:	0352      	lsls	r2, r2, #13
 8003eea:	4294      	cmp	r4, r2
 8003eec:	d105      	bne.n	8003efa <UART_AdvFeatureConfig+0x96>
 8003eee:	684a      	ldr	r2, [r1, #4]
 8003ef0:	4c0e      	ldr	r4, [pc, #56]	; (8003f2c <UART_AdvFeatureConfig+0xc8>)
 8003ef2:	4022      	ands	r2, r4
 8003ef4:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8003ef6:	4322      	orrs	r2, r4
 8003ef8:	604a      	str	r2, [r1, #4]
 8003efa:	061b      	lsls	r3, r3, #24
 8003efc:	d506      	bpl.n	8003f0c <UART_AdvFeatureConfig+0xa8>
 8003efe:	6802      	ldr	r2, [r0, #0]
 8003f00:	490b      	ldr	r1, [pc, #44]	; (8003f30 <UART_AdvFeatureConfig+0xcc>)
 8003f02:	6853      	ldr	r3, [r2, #4]
 8003f04:	400b      	ands	r3, r1
 8003f06:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8003f08:	430b      	orrs	r3, r1
 8003f0a:	6053      	str	r3, [r2, #4]
 8003f0c:	bd30      	pop	{r4, r5, pc}
 8003f0e:	46c0      	nop			; (mov r8, r8)
 8003f10:	fffdffff 	.word	0xfffdffff
 8003f14:	fffeffff 	.word	0xfffeffff
 8003f18:	fffbffff 	.word	0xfffbffff
 8003f1c:	ffff7fff 	.word	0xffff7fff
 8003f20:	ffffefff 	.word	0xffffefff
 8003f24:	ffffdfff 	.word	0xffffdfff
 8003f28:	ffefffff 	.word	0xffefffff
 8003f2c:	ff9fffff 	.word	0xff9fffff
 8003f30:	fff7ffff 	.word	0xfff7ffff

08003f34 <UART_WaitOnFlagUntilTimeout>:
 8003f34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f36:	0004      	movs	r4, r0
 8003f38:	000d      	movs	r5, r1
 8003f3a:	0017      	movs	r7, r2
 8003f3c:	2608      	movs	r6, #8
 8003f3e:	9300      	str	r3, [sp, #0]
 8003f40:	6822      	ldr	r2, [r4, #0]
 8003f42:	69d3      	ldr	r3, [r2, #28]
 8003f44:	402b      	ands	r3, r5
 8003f46:	1b5b      	subs	r3, r3, r5
 8003f48:	4259      	negs	r1, r3
 8003f4a:	414b      	adcs	r3, r1
 8003f4c:	42bb      	cmp	r3, r7
 8003f4e:	d001      	beq.n	8003f54 <UART_WaitOnFlagUntilTimeout+0x20>
 8003f50:	2000      	movs	r0, #0
 8003f52:	e021      	b.n	8003f98 <UART_WaitOnFlagUntilTimeout+0x64>
 8003f54:	9b08      	ldr	r3, [sp, #32]
 8003f56:	3301      	adds	r3, #1
 8003f58:	d0f3      	beq.n	8003f42 <UART_WaitOnFlagUntilTimeout+0xe>
 8003f5a:	f7fe f9df 	bl	800231c <HAL_GetTick>
 8003f5e:	9b00      	ldr	r3, [sp, #0]
 8003f60:	1ac0      	subs	r0, r0, r3
 8003f62:	9b08      	ldr	r3, [sp, #32]
 8003f64:	4298      	cmp	r0, r3
 8003f66:	d828      	bhi.n	8003fba <UART_WaitOnFlagUntilTimeout+0x86>
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d026      	beq.n	8003fba <UART_WaitOnFlagUntilTimeout+0x86>
 8003f6c:	2104      	movs	r1, #4
 8003f6e:	6823      	ldr	r3, [r4, #0]
 8003f70:	681a      	ldr	r2, [r3, #0]
 8003f72:	420a      	tst	r2, r1
 8003f74:	d0e4      	beq.n	8003f40 <UART_WaitOnFlagUntilTimeout+0xc>
 8003f76:	69da      	ldr	r2, [r3, #28]
 8003f78:	0011      	movs	r1, r2
 8003f7a:	4031      	ands	r1, r6
 8003f7c:	9101      	str	r1, [sp, #4]
 8003f7e:	4232      	tst	r2, r6
 8003f80:	d00b      	beq.n	8003f9a <UART_WaitOnFlagUntilTimeout+0x66>
 8003f82:	0020      	movs	r0, r4
 8003f84:	621e      	str	r6, [r3, #32]
 8003f86:	f7ff fe33 	bl	8003bf0 <UART_EndRxTransfer>
 8003f8a:	0023      	movs	r3, r4
 8003f8c:	3308      	adds	r3, #8
 8003f8e:	67de      	str	r6, [r3, #124]	; 0x7c
 8003f90:	2300      	movs	r3, #0
 8003f92:	2001      	movs	r0, #1
 8003f94:	3478      	adds	r4, #120	; 0x78
 8003f96:	7023      	strb	r3, [r4, #0]
 8003f98:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003f9a:	2280      	movs	r2, #128	; 0x80
 8003f9c:	69d9      	ldr	r1, [r3, #28]
 8003f9e:	0112      	lsls	r2, r2, #4
 8003fa0:	4211      	tst	r1, r2
 8003fa2:	d0cd      	beq.n	8003f40 <UART_WaitOnFlagUntilTimeout+0xc>
 8003fa4:	621a      	str	r2, [r3, #32]
 8003fa6:	0020      	movs	r0, r4
 8003fa8:	f7ff fe22 	bl	8003bf0 <UART_EndRxTransfer>
 8003fac:	0023      	movs	r3, r4
 8003fae:	2220      	movs	r2, #32
 8003fb0:	3308      	adds	r3, #8
 8003fb2:	67da      	str	r2, [r3, #124]	; 0x7c
 8003fb4:	9b01      	ldr	r3, [sp, #4]
 8003fb6:	3478      	adds	r4, #120	; 0x78
 8003fb8:	7023      	strb	r3, [r4, #0]
 8003fba:	2003      	movs	r0, #3
 8003fbc:	e7ec      	b.n	8003f98 <UART_WaitOnFlagUntilTimeout+0x64>

08003fbe <HAL_UART_Transmit>:
 8003fbe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003fc0:	b085      	sub	sp, #20
 8003fc2:	9303      	str	r3, [sp, #12]
 8003fc4:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8003fc6:	0004      	movs	r4, r0
 8003fc8:	000d      	movs	r5, r1
 8003fca:	0016      	movs	r6, r2
 8003fcc:	2002      	movs	r0, #2
 8003fce:	2b20      	cmp	r3, #32
 8003fd0:	d139      	bne.n	8004046 <HAL_UART_Transmit+0x88>
 8003fd2:	3801      	subs	r0, #1
 8003fd4:	2900      	cmp	r1, #0
 8003fd6:	d036      	beq.n	8004046 <HAL_UART_Transmit+0x88>
 8003fd8:	2a00      	cmp	r2, #0
 8003fda:	d034      	beq.n	8004046 <HAL_UART_Transmit+0x88>
 8003fdc:	2380      	movs	r3, #128	; 0x80
 8003fde:	68a2      	ldr	r2, [r4, #8]
 8003fe0:	015b      	lsls	r3, r3, #5
 8003fe2:	429a      	cmp	r2, r3
 8003fe4:	d104      	bne.n	8003ff0 <HAL_UART_Transmit+0x32>
 8003fe6:	6923      	ldr	r3, [r4, #16]
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d101      	bne.n	8003ff0 <HAL_UART_Transmit+0x32>
 8003fec:	4201      	tst	r1, r0
 8003fee:	d12a      	bne.n	8004046 <HAL_UART_Transmit+0x88>
 8003ff0:	0023      	movs	r3, r4
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	3308      	adds	r3, #8
 8003ff6:	67da      	str	r2, [r3, #124]	; 0x7c
 8003ff8:	2321      	movs	r3, #33	; 0x21
 8003ffa:	67e3      	str	r3, [r4, #124]	; 0x7c
 8003ffc:	f7fe f98e 	bl	800231c <HAL_GetTick>
 8004000:	0023      	movs	r3, r4
 8004002:	3350      	adds	r3, #80	; 0x50
 8004004:	801e      	strh	r6, [r3, #0]
 8004006:	3302      	adds	r3, #2
 8004008:	801e      	strh	r6, [r3, #0]
 800400a:	9302      	str	r3, [sp, #8]
 800400c:	2380      	movs	r3, #128	; 0x80
 800400e:	68a2      	ldr	r2, [r4, #8]
 8004010:	0007      	movs	r7, r0
 8004012:	2600      	movs	r6, #0
 8004014:	015b      	lsls	r3, r3, #5
 8004016:	429a      	cmp	r2, r3
 8004018:	d104      	bne.n	8004024 <HAL_UART_Transmit+0x66>
 800401a:	6923      	ldr	r3, [r4, #16]
 800401c:	42b3      	cmp	r3, r6
 800401e:	d101      	bne.n	8004024 <HAL_UART_Transmit+0x66>
 8004020:	002e      	movs	r6, r5
 8004022:	001d      	movs	r5, r3
 8004024:	0023      	movs	r3, r4
 8004026:	3352      	adds	r3, #82	; 0x52
 8004028:	881b      	ldrh	r3, [r3, #0]
 800402a:	b29a      	uxth	r2, r3
 800402c:	2b00      	cmp	r3, #0
 800402e:	d10c      	bne.n	800404a <HAL_UART_Transmit+0x8c>
 8004030:	9b03      	ldr	r3, [sp, #12]
 8004032:	2140      	movs	r1, #64	; 0x40
 8004034:	9300      	str	r3, [sp, #0]
 8004036:	0020      	movs	r0, r4
 8004038:	003b      	movs	r3, r7
 800403a:	f7ff ff7b 	bl	8003f34 <UART_WaitOnFlagUntilTimeout>
 800403e:	2320      	movs	r3, #32
 8004040:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004042:	2800      	cmp	r0, #0
 8004044:	d10d      	bne.n	8004062 <HAL_UART_Transmit+0xa4>
 8004046:	b005      	add	sp, #20
 8004048:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800404a:	9b03      	ldr	r3, [sp, #12]
 800404c:	2200      	movs	r2, #0
 800404e:	9300      	str	r3, [sp, #0]
 8004050:	2180      	movs	r1, #128	; 0x80
 8004052:	003b      	movs	r3, r7
 8004054:	0020      	movs	r0, r4
 8004056:	f7ff ff6d 	bl	8003f34 <UART_WaitOnFlagUntilTimeout>
 800405a:	2800      	cmp	r0, #0
 800405c:	d003      	beq.n	8004066 <HAL_UART_Transmit+0xa8>
 800405e:	2320      	movs	r3, #32
 8004060:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004062:	2003      	movs	r0, #3
 8004064:	e7ef      	b.n	8004046 <HAL_UART_Transmit+0x88>
 8004066:	6822      	ldr	r2, [r4, #0]
 8004068:	2d00      	cmp	r5, #0
 800406a:	d10b      	bne.n	8004084 <HAL_UART_Transmit+0xc6>
 800406c:	8833      	ldrh	r3, [r6, #0]
 800406e:	3602      	adds	r6, #2
 8004070:	05db      	lsls	r3, r3, #23
 8004072:	0ddb      	lsrs	r3, r3, #23
 8004074:	6293      	str	r3, [r2, #40]	; 0x28
 8004076:	9b02      	ldr	r3, [sp, #8]
 8004078:	9a02      	ldr	r2, [sp, #8]
 800407a:	881b      	ldrh	r3, [r3, #0]
 800407c:	3b01      	subs	r3, #1
 800407e:	b29b      	uxth	r3, r3
 8004080:	8013      	strh	r3, [r2, #0]
 8004082:	e7cf      	b.n	8004024 <HAL_UART_Transmit+0x66>
 8004084:	782b      	ldrb	r3, [r5, #0]
 8004086:	3501      	adds	r5, #1
 8004088:	6293      	str	r3, [r2, #40]	; 0x28
 800408a:	e7f4      	b.n	8004076 <HAL_UART_Transmit+0xb8>

0800408c <HAL_UART_Receive>:
 800408c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800408e:	0016      	movs	r6, r2
 8004090:	b087      	sub	sp, #28
 8004092:	1d02      	adds	r2, r0, #4
 8004094:	9305      	str	r3, [sp, #20]
 8004096:	6fd3      	ldr	r3, [r2, #124]	; 0x7c
 8004098:	0004      	movs	r4, r0
 800409a:	000d      	movs	r5, r1
 800409c:	2002      	movs	r0, #2
 800409e:	2b20      	cmp	r3, #32
 80040a0:	d160      	bne.n	8004164 <HAL_UART_Receive+0xd8>
 80040a2:	3801      	subs	r0, #1
 80040a4:	2900      	cmp	r1, #0
 80040a6:	d05d      	beq.n	8004164 <HAL_UART_Receive+0xd8>
 80040a8:	2e00      	cmp	r6, #0
 80040aa:	d05b      	beq.n	8004164 <HAL_UART_Receive+0xd8>
 80040ac:	2380      	movs	r3, #128	; 0x80
 80040ae:	68a1      	ldr	r1, [r4, #8]
 80040b0:	015b      	lsls	r3, r3, #5
 80040b2:	4299      	cmp	r1, r3
 80040b4:	d104      	bne.n	80040c0 <HAL_UART_Receive+0x34>
 80040b6:	6923      	ldr	r3, [r4, #16]
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d101      	bne.n	80040c0 <HAL_UART_Receive+0x34>
 80040bc:	4205      	tst	r5, r0
 80040be:	d151      	bne.n	8004164 <HAL_UART_Receive+0xd8>
 80040c0:	0023      	movs	r3, r4
 80040c2:	2700      	movs	r7, #0
 80040c4:	3308      	adds	r3, #8
 80040c6:	67df      	str	r7, [r3, #124]	; 0x7c
 80040c8:	2322      	movs	r3, #34	; 0x22
 80040ca:	67d3      	str	r3, [r2, #124]	; 0x7c
 80040cc:	6627      	str	r7, [r4, #96]	; 0x60
 80040ce:	f7fe f925 	bl	800231c <HAL_GetTick>
 80040d2:	0023      	movs	r3, r4
 80040d4:	2180      	movs	r1, #128	; 0x80
 80040d6:	3358      	adds	r3, #88	; 0x58
 80040d8:	68a2      	ldr	r2, [r4, #8]
 80040da:	801e      	strh	r6, [r3, #0]
 80040dc:	3302      	adds	r3, #2
 80040de:	9303      	str	r3, [sp, #12]
 80040e0:	801e      	strh	r6, [r3, #0]
 80040e2:	9004      	str	r0, [sp, #16]
 80040e4:	0149      	lsls	r1, r1, #5
 80040e6:	3302      	adds	r3, #2
 80040e8:	428a      	cmp	r2, r1
 80040ea:	d11b      	bne.n	8004124 <HAL_UART_Receive+0x98>
 80040ec:	6921      	ldr	r1, [r4, #16]
 80040ee:	42b9      	cmp	r1, r7
 80040f0:	d116      	bne.n	8004120 <HAL_UART_Receive+0x94>
 80040f2:	4926      	ldr	r1, [pc, #152]	; (800418c <HAL_UART_Receive+0x100>)
 80040f4:	8019      	strh	r1, [r3, #0]
 80040f6:	881f      	ldrh	r7, [r3, #0]
 80040f8:	2380      	movs	r3, #128	; 0x80
 80040fa:	2600      	movs	r6, #0
 80040fc:	015b      	lsls	r3, r3, #5
 80040fe:	429a      	cmp	r2, r3
 8004100:	d104      	bne.n	800410c <HAL_UART_Receive+0x80>
 8004102:	6923      	ldr	r3, [r4, #16]
 8004104:	42b3      	cmp	r3, r6
 8004106:	d101      	bne.n	800410c <HAL_UART_Receive+0x80>
 8004108:	002e      	movs	r6, r5
 800410a:	001d      	movs	r5, r3
 800410c:	0023      	movs	r3, r4
 800410e:	335a      	adds	r3, #90	; 0x5a
 8004110:	881b      	ldrh	r3, [r3, #0]
 8004112:	b298      	uxth	r0, r3
 8004114:	2b00      	cmp	r3, #0
 8004116:	d117      	bne.n	8004148 <HAL_UART_Receive+0xbc>
 8004118:	3404      	adds	r4, #4
 800411a:	3320      	adds	r3, #32
 800411c:	67e3      	str	r3, [r4, #124]	; 0x7c
 800411e:	e021      	b.n	8004164 <HAL_UART_Receive+0xd8>
 8004120:	21ff      	movs	r1, #255	; 0xff
 8004122:	e7e7      	b.n	80040f4 <HAL_UART_Receive+0x68>
 8004124:	2a00      	cmp	r2, #0
 8004126:	d104      	bne.n	8004132 <HAL_UART_Receive+0xa6>
 8004128:	6921      	ldr	r1, [r4, #16]
 800412a:	2900      	cmp	r1, #0
 800412c:	d0f8      	beq.n	8004120 <HAL_UART_Receive+0x94>
 800412e:	217f      	movs	r1, #127	; 0x7f
 8004130:	e7e0      	b.n	80040f4 <HAL_UART_Receive+0x68>
 8004132:	2180      	movs	r1, #128	; 0x80
 8004134:	0549      	lsls	r1, r1, #21
 8004136:	428a      	cmp	r2, r1
 8004138:	d104      	bne.n	8004144 <HAL_UART_Receive+0xb8>
 800413a:	6921      	ldr	r1, [r4, #16]
 800413c:	2900      	cmp	r1, #0
 800413e:	d0f6      	beq.n	800412e <HAL_UART_Receive+0xa2>
 8004140:	213f      	movs	r1, #63	; 0x3f
 8004142:	e7d7      	b.n	80040f4 <HAL_UART_Receive+0x68>
 8004144:	801f      	strh	r7, [r3, #0]
 8004146:	e7d6      	b.n	80040f6 <HAL_UART_Receive+0x6a>
 8004148:	9b05      	ldr	r3, [sp, #20]
 800414a:	2200      	movs	r2, #0
 800414c:	9300      	str	r3, [sp, #0]
 800414e:	2120      	movs	r1, #32
 8004150:	0020      	movs	r0, r4
 8004152:	9b04      	ldr	r3, [sp, #16]
 8004154:	f7ff feee 	bl	8003f34 <UART_WaitOnFlagUntilTimeout>
 8004158:	2800      	cmp	r0, #0
 800415a:	d005      	beq.n	8004168 <HAL_UART_Receive+0xdc>
 800415c:	2320      	movs	r3, #32
 800415e:	2003      	movs	r0, #3
 8004160:	3404      	adds	r4, #4
 8004162:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004164:	b007      	add	sp, #28
 8004166:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004168:	6823      	ldr	r3, [r4, #0]
 800416a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800416c:	403b      	ands	r3, r7
 800416e:	2d00      	cmp	r5, #0
 8004170:	d108      	bne.n	8004184 <HAL_UART_Receive+0xf8>
 8004172:	8033      	strh	r3, [r6, #0]
 8004174:	3602      	adds	r6, #2
 8004176:	9b03      	ldr	r3, [sp, #12]
 8004178:	9a03      	ldr	r2, [sp, #12]
 800417a:	881b      	ldrh	r3, [r3, #0]
 800417c:	3b01      	subs	r3, #1
 800417e:	b29b      	uxth	r3, r3
 8004180:	8013      	strh	r3, [r2, #0]
 8004182:	e7c3      	b.n	800410c <HAL_UART_Receive+0x80>
 8004184:	702b      	strb	r3, [r5, #0]
 8004186:	3501      	adds	r5, #1
 8004188:	e7f5      	b.n	8004176 <HAL_UART_Receive+0xea>
 800418a:	46c0      	nop			; (mov r8, r8)
 800418c:	000001ff 	.word	0x000001ff

08004190 <UART_CheckIdleState>:
 8004190:	0003      	movs	r3, r0
 8004192:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004194:	2500      	movs	r5, #0
 8004196:	0004      	movs	r4, r0
 8004198:	3308      	adds	r3, #8
 800419a:	67dd      	str	r5, [r3, #124]	; 0x7c
 800419c:	f7fe f8be 	bl	800231c <HAL_GetTick>
 80041a0:	0026      	movs	r6, r4
 80041a2:	6823      	ldr	r3, [r4, #0]
 80041a4:	0007      	movs	r7, r0
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	3678      	adds	r6, #120	; 0x78
 80041aa:	071b      	lsls	r3, r3, #28
 80041ac:	d51b      	bpl.n	80041e6 <UART_CheckIdleState+0x56>
 80041ae:	2180      	movs	r1, #128	; 0x80
 80041b0:	4b26      	ldr	r3, [pc, #152]	; (800424c <UART_CheckIdleState+0xbc>)
 80041b2:	002a      	movs	r2, r5
 80041b4:	9300      	str	r3, [sp, #0]
 80041b6:	0389      	lsls	r1, r1, #14
 80041b8:	0003      	movs	r3, r0
 80041ba:	0020      	movs	r0, r4
 80041bc:	f7ff feba 	bl	8003f34 <UART_WaitOnFlagUntilTimeout>
 80041c0:	42a8      	cmp	r0, r5
 80041c2:	d010      	beq.n	80041e6 <UART_CheckIdleState+0x56>
 80041c4:	f3ef 8110 	mrs	r1, PRIMASK
 80041c8:	2301      	movs	r3, #1
 80041ca:	f383 8810 	msr	PRIMASK, r3
 80041ce:	2080      	movs	r0, #128	; 0x80
 80041d0:	6822      	ldr	r2, [r4, #0]
 80041d2:	6813      	ldr	r3, [r2, #0]
 80041d4:	4383      	bics	r3, r0
 80041d6:	6013      	str	r3, [r2, #0]
 80041d8:	f381 8810 	msr	PRIMASK, r1
 80041dc:	2320      	movs	r3, #32
 80041de:	67e3      	str	r3, [r4, #124]	; 0x7c
 80041e0:	7035      	strb	r5, [r6, #0]
 80041e2:	2003      	movs	r0, #3
 80041e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80041e6:	0025      	movs	r5, r4
 80041e8:	cd08      	ldmia	r5!, {r3}
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	075b      	lsls	r3, r3, #29
 80041ee:	d525      	bpl.n	800423c <UART_CheckIdleState+0xac>
 80041f0:	2180      	movs	r1, #128	; 0x80
 80041f2:	4b16      	ldr	r3, [pc, #88]	; (800424c <UART_CheckIdleState+0xbc>)
 80041f4:	2200      	movs	r2, #0
 80041f6:	9300      	str	r3, [sp, #0]
 80041f8:	0020      	movs	r0, r4
 80041fa:	003b      	movs	r3, r7
 80041fc:	03c9      	lsls	r1, r1, #15
 80041fe:	f7ff fe99 	bl	8003f34 <UART_WaitOnFlagUntilTimeout>
 8004202:	2800      	cmp	r0, #0
 8004204:	d01a      	beq.n	800423c <UART_CheckIdleState+0xac>
 8004206:	f3ef 8010 	mrs	r0, PRIMASK
 800420a:	2201      	movs	r2, #1
 800420c:	f382 8810 	msr	PRIMASK, r2
 8004210:	6821      	ldr	r1, [r4, #0]
 8004212:	4f0f      	ldr	r7, [pc, #60]	; (8004250 <UART_CheckIdleState+0xc0>)
 8004214:	680b      	ldr	r3, [r1, #0]
 8004216:	403b      	ands	r3, r7
 8004218:	600b      	str	r3, [r1, #0]
 800421a:	f380 8810 	msr	PRIMASK, r0
 800421e:	f3ef 8010 	mrs	r0, PRIMASK
 8004222:	f382 8810 	msr	PRIMASK, r2
 8004226:	6821      	ldr	r1, [r4, #0]
 8004228:	688b      	ldr	r3, [r1, #8]
 800422a:	4393      	bics	r3, r2
 800422c:	608b      	str	r3, [r1, #8]
 800422e:	f380 8810 	msr	PRIMASK, r0
 8004232:	2320      	movs	r3, #32
 8004234:	67eb      	str	r3, [r5, #124]	; 0x7c
 8004236:	2300      	movs	r3, #0
 8004238:	7033      	strb	r3, [r6, #0]
 800423a:	e7d2      	b.n	80041e2 <UART_CheckIdleState+0x52>
 800423c:	2000      	movs	r0, #0
 800423e:	2320      	movs	r3, #32
 8004240:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004242:	67eb      	str	r3, [r5, #124]	; 0x7c
 8004244:	6620      	str	r0, [r4, #96]	; 0x60
 8004246:	6660      	str	r0, [r4, #100]	; 0x64
 8004248:	7030      	strb	r0, [r6, #0]
 800424a:	e7cb      	b.n	80041e4 <UART_CheckIdleState+0x54>
 800424c:	01ffffff 	.word	0x01ffffff
 8004250:	fffffedf 	.word	0xfffffedf

08004254 <HAL_UART_Init>:
 8004254:	b510      	push	{r4, lr}
 8004256:	1e04      	subs	r4, r0, #0
 8004258:	d101      	bne.n	800425e <HAL_UART_Init+0xa>
 800425a:	2001      	movs	r0, #1
 800425c:	bd10      	pop	{r4, pc}
 800425e:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8004260:	2b00      	cmp	r3, #0
 8004262:	d104      	bne.n	800426e <HAL_UART_Init+0x1a>
 8004264:	0002      	movs	r2, r0
 8004266:	3278      	adds	r2, #120	; 0x78
 8004268:	7013      	strb	r3, [r2, #0]
 800426a:	f7fd ff91 	bl	8002190 <HAL_UART_MspInit>
 800426e:	2324      	movs	r3, #36	; 0x24
 8004270:	2101      	movs	r1, #1
 8004272:	6822      	ldr	r2, [r4, #0]
 8004274:	67e3      	str	r3, [r4, #124]	; 0x7c
 8004276:	6813      	ldr	r3, [r2, #0]
 8004278:	0020      	movs	r0, r4
 800427a:	438b      	bics	r3, r1
 800427c:	6013      	str	r3, [r2, #0]
 800427e:	f7ff fce5 	bl	8003c4c <UART_SetConfig>
 8004282:	2801      	cmp	r0, #1
 8004284:	d0e9      	beq.n	800425a <HAL_UART_Init+0x6>
 8004286:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004288:	2b00      	cmp	r3, #0
 800428a:	d002      	beq.n	8004292 <HAL_UART_Init+0x3e>
 800428c:	0020      	movs	r0, r4
 800428e:	f7ff fde9 	bl	8003e64 <UART_AdvFeatureConfig>
 8004292:	6823      	ldr	r3, [r4, #0]
 8004294:	4907      	ldr	r1, [pc, #28]	; (80042b4 <HAL_UART_Init+0x60>)
 8004296:	685a      	ldr	r2, [r3, #4]
 8004298:	0020      	movs	r0, r4
 800429a:	400a      	ands	r2, r1
 800429c:	212a      	movs	r1, #42	; 0x2a
 800429e:	605a      	str	r2, [r3, #4]
 80042a0:	689a      	ldr	r2, [r3, #8]
 80042a2:	438a      	bics	r2, r1
 80042a4:	609a      	str	r2, [r3, #8]
 80042a6:	2201      	movs	r2, #1
 80042a8:	6819      	ldr	r1, [r3, #0]
 80042aa:	430a      	orrs	r2, r1
 80042ac:	601a      	str	r2, [r3, #0]
 80042ae:	f7ff ff6f 	bl	8004190 <UART_CheckIdleState>
 80042b2:	e7d3      	b.n	800425c <HAL_UART_Init+0x8>
 80042b4:	ffffb7ff 	.word	0xffffb7ff

080042b8 <__errno>:
 80042b8:	4b01      	ldr	r3, [pc, #4]	; (80042c0 <__errno+0x8>)
 80042ba:	6818      	ldr	r0, [r3, #0]
 80042bc:	4770      	bx	lr
 80042be:	46c0      	nop			; (mov r8, r8)
 80042c0:	2000019c 	.word	0x2000019c

080042c4 <__libc_init_array>:
 80042c4:	b570      	push	{r4, r5, r6, lr}
 80042c6:	2600      	movs	r6, #0
 80042c8:	4d0c      	ldr	r5, [pc, #48]	; (80042fc <__libc_init_array+0x38>)
 80042ca:	4c0d      	ldr	r4, [pc, #52]	; (8004300 <__libc_init_array+0x3c>)
 80042cc:	1b64      	subs	r4, r4, r5
 80042ce:	10a4      	asrs	r4, r4, #2
 80042d0:	42a6      	cmp	r6, r4
 80042d2:	d109      	bne.n	80042e8 <__libc_init_array+0x24>
 80042d4:	2600      	movs	r6, #0
 80042d6:	f000 fc9f 	bl	8004c18 <_init>
 80042da:	4d0a      	ldr	r5, [pc, #40]	; (8004304 <__libc_init_array+0x40>)
 80042dc:	4c0a      	ldr	r4, [pc, #40]	; (8004308 <__libc_init_array+0x44>)
 80042de:	1b64      	subs	r4, r4, r5
 80042e0:	10a4      	asrs	r4, r4, #2
 80042e2:	42a6      	cmp	r6, r4
 80042e4:	d105      	bne.n	80042f2 <__libc_init_array+0x2e>
 80042e6:	bd70      	pop	{r4, r5, r6, pc}
 80042e8:	00b3      	lsls	r3, r6, #2
 80042ea:	58eb      	ldr	r3, [r5, r3]
 80042ec:	4798      	blx	r3
 80042ee:	3601      	adds	r6, #1
 80042f0:	e7ee      	b.n	80042d0 <__libc_init_array+0xc>
 80042f2:	00b3      	lsls	r3, r6, #2
 80042f4:	58eb      	ldr	r3, [r5, r3]
 80042f6:	4798      	blx	r3
 80042f8:	3601      	adds	r6, #1
 80042fa:	e7f2      	b.n	80042e2 <__libc_init_array+0x1e>
 80042fc:	08005318 	.word	0x08005318
 8004300:	08005318 	.word	0x08005318
 8004304:	08005318 	.word	0x08005318
 8004308:	0800531c 	.word	0x0800531c

0800430c <malloc>:
 800430c:	b510      	push	{r4, lr}
 800430e:	4b03      	ldr	r3, [pc, #12]	; (800431c <malloc+0x10>)
 8004310:	0001      	movs	r1, r0
 8004312:	6818      	ldr	r0, [r3, #0]
 8004314:	f000 f88c 	bl	8004430 <_malloc_r>
 8004318:	bd10      	pop	{r4, pc}
 800431a:	46c0      	nop			; (mov r8, r8)
 800431c:	2000019c 	.word	0x2000019c

08004320 <free>:
 8004320:	b510      	push	{r4, lr}
 8004322:	4b03      	ldr	r3, [pc, #12]	; (8004330 <free+0x10>)
 8004324:	0001      	movs	r1, r0
 8004326:	6818      	ldr	r0, [r3, #0]
 8004328:	f000 f816 	bl	8004358 <_free_r>
 800432c:	bd10      	pop	{r4, pc}
 800432e:	46c0      	nop			; (mov r8, r8)
 8004330:	2000019c 	.word	0x2000019c

08004334 <memcpy>:
 8004334:	2300      	movs	r3, #0
 8004336:	b510      	push	{r4, lr}
 8004338:	429a      	cmp	r2, r3
 800433a:	d100      	bne.n	800433e <memcpy+0xa>
 800433c:	bd10      	pop	{r4, pc}
 800433e:	5ccc      	ldrb	r4, [r1, r3]
 8004340:	54c4      	strb	r4, [r0, r3]
 8004342:	3301      	adds	r3, #1
 8004344:	e7f8      	b.n	8004338 <memcpy+0x4>

08004346 <memset>:
 8004346:	0003      	movs	r3, r0
 8004348:	1882      	adds	r2, r0, r2
 800434a:	4293      	cmp	r3, r2
 800434c:	d100      	bne.n	8004350 <memset+0xa>
 800434e:	4770      	bx	lr
 8004350:	7019      	strb	r1, [r3, #0]
 8004352:	3301      	adds	r3, #1
 8004354:	e7f9      	b.n	800434a <memset+0x4>
	...

08004358 <_free_r>:
 8004358:	b570      	push	{r4, r5, r6, lr}
 800435a:	0005      	movs	r5, r0
 800435c:	2900      	cmp	r1, #0
 800435e:	d010      	beq.n	8004382 <_free_r+0x2a>
 8004360:	1f0c      	subs	r4, r1, #4
 8004362:	6823      	ldr	r3, [r4, #0]
 8004364:	2b00      	cmp	r3, #0
 8004366:	da00      	bge.n	800436a <_free_r+0x12>
 8004368:	18e4      	adds	r4, r4, r3
 800436a:	0028      	movs	r0, r5
 800436c:	f000 f908 	bl	8004580 <__malloc_lock>
 8004370:	4a1d      	ldr	r2, [pc, #116]	; (80043e8 <_free_r+0x90>)
 8004372:	6813      	ldr	r3, [r2, #0]
 8004374:	2b00      	cmp	r3, #0
 8004376:	d105      	bne.n	8004384 <_free_r+0x2c>
 8004378:	6063      	str	r3, [r4, #4]
 800437a:	6014      	str	r4, [r2, #0]
 800437c:	0028      	movs	r0, r5
 800437e:	f000 f907 	bl	8004590 <__malloc_unlock>
 8004382:	bd70      	pop	{r4, r5, r6, pc}
 8004384:	42a3      	cmp	r3, r4
 8004386:	d908      	bls.n	800439a <_free_r+0x42>
 8004388:	6821      	ldr	r1, [r4, #0]
 800438a:	1860      	adds	r0, r4, r1
 800438c:	4283      	cmp	r3, r0
 800438e:	d1f3      	bne.n	8004378 <_free_r+0x20>
 8004390:	6818      	ldr	r0, [r3, #0]
 8004392:	685b      	ldr	r3, [r3, #4]
 8004394:	1841      	adds	r1, r0, r1
 8004396:	6021      	str	r1, [r4, #0]
 8004398:	e7ee      	b.n	8004378 <_free_r+0x20>
 800439a:	001a      	movs	r2, r3
 800439c:	685b      	ldr	r3, [r3, #4]
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d001      	beq.n	80043a6 <_free_r+0x4e>
 80043a2:	42a3      	cmp	r3, r4
 80043a4:	d9f9      	bls.n	800439a <_free_r+0x42>
 80043a6:	6811      	ldr	r1, [r2, #0]
 80043a8:	1850      	adds	r0, r2, r1
 80043aa:	42a0      	cmp	r0, r4
 80043ac:	d10b      	bne.n	80043c6 <_free_r+0x6e>
 80043ae:	6820      	ldr	r0, [r4, #0]
 80043b0:	1809      	adds	r1, r1, r0
 80043b2:	1850      	adds	r0, r2, r1
 80043b4:	6011      	str	r1, [r2, #0]
 80043b6:	4283      	cmp	r3, r0
 80043b8:	d1e0      	bne.n	800437c <_free_r+0x24>
 80043ba:	6818      	ldr	r0, [r3, #0]
 80043bc:	685b      	ldr	r3, [r3, #4]
 80043be:	1841      	adds	r1, r0, r1
 80043c0:	6011      	str	r1, [r2, #0]
 80043c2:	6053      	str	r3, [r2, #4]
 80043c4:	e7da      	b.n	800437c <_free_r+0x24>
 80043c6:	42a0      	cmp	r0, r4
 80043c8:	d902      	bls.n	80043d0 <_free_r+0x78>
 80043ca:	230c      	movs	r3, #12
 80043cc:	602b      	str	r3, [r5, #0]
 80043ce:	e7d5      	b.n	800437c <_free_r+0x24>
 80043d0:	6821      	ldr	r1, [r4, #0]
 80043d2:	1860      	adds	r0, r4, r1
 80043d4:	4283      	cmp	r3, r0
 80043d6:	d103      	bne.n	80043e0 <_free_r+0x88>
 80043d8:	6818      	ldr	r0, [r3, #0]
 80043da:	685b      	ldr	r3, [r3, #4]
 80043dc:	1841      	adds	r1, r0, r1
 80043de:	6021      	str	r1, [r4, #0]
 80043e0:	6063      	str	r3, [r4, #4]
 80043e2:	6054      	str	r4, [r2, #4]
 80043e4:	e7ca      	b.n	800437c <_free_r+0x24>
 80043e6:	46c0      	nop			; (mov r8, r8)
 80043e8:	200003c0 	.word	0x200003c0

080043ec <sbrk_aligned>:
 80043ec:	b570      	push	{r4, r5, r6, lr}
 80043ee:	4e0f      	ldr	r6, [pc, #60]	; (800442c <sbrk_aligned+0x40>)
 80043f0:	000d      	movs	r5, r1
 80043f2:	6831      	ldr	r1, [r6, #0]
 80043f4:	0004      	movs	r4, r0
 80043f6:	2900      	cmp	r1, #0
 80043f8:	d102      	bne.n	8004400 <sbrk_aligned+0x14>
 80043fa:	f000 f88f 	bl	800451c <_sbrk_r>
 80043fe:	6030      	str	r0, [r6, #0]
 8004400:	0029      	movs	r1, r5
 8004402:	0020      	movs	r0, r4
 8004404:	f000 f88a 	bl	800451c <_sbrk_r>
 8004408:	1c43      	adds	r3, r0, #1
 800440a:	d00a      	beq.n	8004422 <sbrk_aligned+0x36>
 800440c:	2303      	movs	r3, #3
 800440e:	1cc5      	adds	r5, r0, #3
 8004410:	439d      	bics	r5, r3
 8004412:	42a8      	cmp	r0, r5
 8004414:	d007      	beq.n	8004426 <sbrk_aligned+0x3a>
 8004416:	1a29      	subs	r1, r5, r0
 8004418:	0020      	movs	r0, r4
 800441a:	f000 f87f 	bl	800451c <_sbrk_r>
 800441e:	1c43      	adds	r3, r0, #1
 8004420:	d101      	bne.n	8004426 <sbrk_aligned+0x3a>
 8004422:	2501      	movs	r5, #1
 8004424:	426d      	negs	r5, r5
 8004426:	0028      	movs	r0, r5
 8004428:	bd70      	pop	{r4, r5, r6, pc}
 800442a:	46c0      	nop			; (mov r8, r8)
 800442c:	200003c4 	.word	0x200003c4

08004430 <_malloc_r>:
 8004430:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004432:	2203      	movs	r2, #3
 8004434:	1ccb      	adds	r3, r1, #3
 8004436:	4393      	bics	r3, r2
 8004438:	3308      	adds	r3, #8
 800443a:	0006      	movs	r6, r0
 800443c:	001f      	movs	r7, r3
 800443e:	2b0c      	cmp	r3, #12
 8004440:	d232      	bcs.n	80044a8 <_malloc_r+0x78>
 8004442:	270c      	movs	r7, #12
 8004444:	42b9      	cmp	r1, r7
 8004446:	d831      	bhi.n	80044ac <_malloc_r+0x7c>
 8004448:	0030      	movs	r0, r6
 800444a:	f000 f899 	bl	8004580 <__malloc_lock>
 800444e:	4d32      	ldr	r5, [pc, #200]	; (8004518 <_malloc_r+0xe8>)
 8004450:	682b      	ldr	r3, [r5, #0]
 8004452:	001c      	movs	r4, r3
 8004454:	2c00      	cmp	r4, #0
 8004456:	d12e      	bne.n	80044b6 <_malloc_r+0x86>
 8004458:	0039      	movs	r1, r7
 800445a:	0030      	movs	r0, r6
 800445c:	f7ff ffc6 	bl	80043ec <sbrk_aligned>
 8004460:	0004      	movs	r4, r0
 8004462:	1c43      	adds	r3, r0, #1
 8004464:	d11e      	bne.n	80044a4 <_malloc_r+0x74>
 8004466:	682c      	ldr	r4, [r5, #0]
 8004468:	0025      	movs	r5, r4
 800446a:	2d00      	cmp	r5, #0
 800446c:	d14a      	bne.n	8004504 <_malloc_r+0xd4>
 800446e:	6823      	ldr	r3, [r4, #0]
 8004470:	0029      	movs	r1, r5
 8004472:	18e3      	adds	r3, r4, r3
 8004474:	0030      	movs	r0, r6
 8004476:	9301      	str	r3, [sp, #4]
 8004478:	f000 f850 	bl	800451c <_sbrk_r>
 800447c:	9b01      	ldr	r3, [sp, #4]
 800447e:	4283      	cmp	r3, r0
 8004480:	d143      	bne.n	800450a <_malloc_r+0xda>
 8004482:	6823      	ldr	r3, [r4, #0]
 8004484:	3703      	adds	r7, #3
 8004486:	1aff      	subs	r7, r7, r3
 8004488:	2303      	movs	r3, #3
 800448a:	439f      	bics	r7, r3
 800448c:	3708      	adds	r7, #8
 800448e:	2f0c      	cmp	r7, #12
 8004490:	d200      	bcs.n	8004494 <_malloc_r+0x64>
 8004492:	270c      	movs	r7, #12
 8004494:	0039      	movs	r1, r7
 8004496:	0030      	movs	r0, r6
 8004498:	f7ff ffa8 	bl	80043ec <sbrk_aligned>
 800449c:	1c43      	adds	r3, r0, #1
 800449e:	d034      	beq.n	800450a <_malloc_r+0xda>
 80044a0:	6823      	ldr	r3, [r4, #0]
 80044a2:	19df      	adds	r7, r3, r7
 80044a4:	6027      	str	r7, [r4, #0]
 80044a6:	e013      	b.n	80044d0 <_malloc_r+0xa0>
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	dacb      	bge.n	8004444 <_malloc_r+0x14>
 80044ac:	230c      	movs	r3, #12
 80044ae:	2500      	movs	r5, #0
 80044b0:	6033      	str	r3, [r6, #0]
 80044b2:	0028      	movs	r0, r5
 80044b4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80044b6:	6822      	ldr	r2, [r4, #0]
 80044b8:	1bd1      	subs	r1, r2, r7
 80044ba:	d420      	bmi.n	80044fe <_malloc_r+0xce>
 80044bc:	290b      	cmp	r1, #11
 80044be:	d917      	bls.n	80044f0 <_malloc_r+0xc0>
 80044c0:	19e2      	adds	r2, r4, r7
 80044c2:	6027      	str	r7, [r4, #0]
 80044c4:	42a3      	cmp	r3, r4
 80044c6:	d111      	bne.n	80044ec <_malloc_r+0xbc>
 80044c8:	602a      	str	r2, [r5, #0]
 80044ca:	6863      	ldr	r3, [r4, #4]
 80044cc:	6011      	str	r1, [r2, #0]
 80044ce:	6053      	str	r3, [r2, #4]
 80044d0:	0030      	movs	r0, r6
 80044d2:	0025      	movs	r5, r4
 80044d4:	f000 f85c 	bl	8004590 <__malloc_unlock>
 80044d8:	2207      	movs	r2, #7
 80044da:	350b      	adds	r5, #11
 80044dc:	1d23      	adds	r3, r4, #4
 80044de:	4395      	bics	r5, r2
 80044e0:	1aea      	subs	r2, r5, r3
 80044e2:	429d      	cmp	r5, r3
 80044e4:	d0e5      	beq.n	80044b2 <_malloc_r+0x82>
 80044e6:	1b5b      	subs	r3, r3, r5
 80044e8:	50a3      	str	r3, [r4, r2]
 80044ea:	e7e2      	b.n	80044b2 <_malloc_r+0x82>
 80044ec:	605a      	str	r2, [r3, #4]
 80044ee:	e7ec      	b.n	80044ca <_malloc_r+0x9a>
 80044f0:	6862      	ldr	r2, [r4, #4]
 80044f2:	42a3      	cmp	r3, r4
 80044f4:	d101      	bne.n	80044fa <_malloc_r+0xca>
 80044f6:	602a      	str	r2, [r5, #0]
 80044f8:	e7ea      	b.n	80044d0 <_malloc_r+0xa0>
 80044fa:	605a      	str	r2, [r3, #4]
 80044fc:	e7e8      	b.n	80044d0 <_malloc_r+0xa0>
 80044fe:	0023      	movs	r3, r4
 8004500:	6864      	ldr	r4, [r4, #4]
 8004502:	e7a7      	b.n	8004454 <_malloc_r+0x24>
 8004504:	002c      	movs	r4, r5
 8004506:	686d      	ldr	r5, [r5, #4]
 8004508:	e7af      	b.n	800446a <_malloc_r+0x3a>
 800450a:	230c      	movs	r3, #12
 800450c:	0030      	movs	r0, r6
 800450e:	6033      	str	r3, [r6, #0]
 8004510:	f000 f83e 	bl	8004590 <__malloc_unlock>
 8004514:	e7cd      	b.n	80044b2 <_malloc_r+0x82>
 8004516:	46c0      	nop			; (mov r8, r8)
 8004518:	200003c0 	.word	0x200003c0

0800451c <_sbrk_r>:
 800451c:	2300      	movs	r3, #0
 800451e:	b570      	push	{r4, r5, r6, lr}
 8004520:	4d06      	ldr	r5, [pc, #24]	; (800453c <_sbrk_r+0x20>)
 8004522:	0004      	movs	r4, r0
 8004524:	0008      	movs	r0, r1
 8004526:	602b      	str	r3, [r5, #0]
 8004528:	f7fd fe68 	bl	80021fc <_sbrk>
 800452c:	1c43      	adds	r3, r0, #1
 800452e:	d103      	bne.n	8004538 <_sbrk_r+0x1c>
 8004530:	682b      	ldr	r3, [r5, #0]
 8004532:	2b00      	cmp	r3, #0
 8004534:	d000      	beq.n	8004538 <_sbrk_r+0x1c>
 8004536:	6023      	str	r3, [r4, #0]
 8004538:	bd70      	pop	{r4, r5, r6, pc}
 800453a:	46c0      	nop			; (mov r8, r8)
 800453c:	200003c8 	.word	0x200003c8

08004540 <siprintf>:
 8004540:	b40e      	push	{r1, r2, r3}
 8004542:	b500      	push	{lr}
 8004544:	490b      	ldr	r1, [pc, #44]	; (8004574 <siprintf+0x34>)
 8004546:	b09c      	sub	sp, #112	; 0x70
 8004548:	ab1d      	add	r3, sp, #116	; 0x74
 800454a:	9002      	str	r0, [sp, #8]
 800454c:	9006      	str	r0, [sp, #24]
 800454e:	9107      	str	r1, [sp, #28]
 8004550:	9104      	str	r1, [sp, #16]
 8004552:	4809      	ldr	r0, [pc, #36]	; (8004578 <siprintf+0x38>)
 8004554:	4909      	ldr	r1, [pc, #36]	; (800457c <siprintf+0x3c>)
 8004556:	cb04      	ldmia	r3!, {r2}
 8004558:	9105      	str	r1, [sp, #20]
 800455a:	6800      	ldr	r0, [r0, #0]
 800455c:	a902      	add	r1, sp, #8
 800455e:	9301      	str	r3, [sp, #4]
 8004560:	f000 f880 	bl	8004664 <_svfiprintf_r>
 8004564:	2300      	movs	r3, #0
 8004566:	9a02      	ldr	r2, [sp, #8]
 8004568:	7013      	strb	r3, [r2, #0]
 800456a:	b01c      	add	sp, #112	; 0x70
 800456c:	bc08      	pop	{r3}
 800456e:	b003      	add	sp, #12
 8004570:	4718      	bx	r3
 8004572:	46c0      	nop			; (mov r8, r8)
 8004574:	7fffffff 	.word	0x7fffffff
 8004578:	2000019c 	.word	0x2000019c
 800457c:	ffff0208 	.word	0xffff0208

08004580 <__malloc_lock>:
 8004580:	b510      	push	{r4, lr}
 8004582:	4802      	ldr	r0, [pc, #8]	; (800458c <__malloc_lock+0xc>)
 8004584:	f000 faf0 	bl	8004b68 <__retarget_lock_acquire_recursive>
 8004588:	bd10      	pop	{r4, pc}
 800458a:	46c0      	nop			; (mov r8, r8)
 800458c:	200003cc 	.word	0x200003cc

08004590 <__malloc_unlock>:
 8004590:	b510      	push	{r4, lr}
 8004592:	4802      	ldr	r0, [pc, #8]	; (800459c <__malloc_unlock+0xc>)
 8004594:	f000 fae9 	bl	8004b6a <__retarget_lock_release_recursive>
 8004598:	bd10      	pop	{r4, pc}
 800459a:	46c0      	nop			; (mov r8, r8)
 800459c:	200003cc 	.word	0x200003cc

080045a0 <__ssputs_r>:
 80045a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80045a2:	688e      	ldr	r6, [r1, #8]
 80045a4:	b085      	sub	sp, #20
 80045a6:	0007      	movs	r7, r0
 80045a8:	000c      	movs	r4, r1
 80045aa:	9203      	str	r2, [sp, #12]
 80045ac:	9301      	str	r3, [sp, #4]
 80045ae:	429e      	cmp	r6, r3
 80045b0:	d83c      	bhi.n	800462c <__ssputs_r+0x8c>
 80045b2:	2390      	movs	r3, #144	; 0x90
 80045b4:	898a      	ldrh	r2, [r1, #12]
 80045b6:	00db      	lsls	r3, r3, #3
 80045b8:	421a      	tst	r2, r3
 80045ba:	d034      	beq.n	8004626 <__ssputs_r+0x86>
 80045bc:	6909      	ldr	r1, [r1, #16]
 80045be:	6823      	ldr	r3, [r4, #0]
 80045c0:	6960      	ldr	r0, [r4, #20]
 80045c2:	1a5b      	subs	r3, r3, r1
 80045c4:	9302      	str	r3, [sp, #8]
 80045c6:	2303      	movs	r3, #3
 80045c8:	4343      	muls	r3, r0
 80045ca:	0fdd      	lsrs	r5, r3, #31
 80045cc:	18ed      	adds	r5, r5, r3
 80045ce:	9b01      	ldr	r3, [sp, #4]
 80045d0:	9802      	ldr	r0, [sp, #8]
 80045d2:	3301      	adds	r3, #1
 80045d4:	181b      	adds	r3, r3, r0
 80045d6:	106d      	asrs	r5, r5, #1
 80045d8:	42ab      	cmp	r3, r5
 80045da:	d900      	bls.n	80045de <__ssputs_r+0x3e>
 80045dc:	001d      	movs	r5, r3
 80045de:	0553      	lsls	r3, r2, #21
 80045e0:	d532      	bpl.n	8004648 <__ssputs_r+0xa8>
 80045e2:	0029      	movs	r1, r5
 80045e4:	0038      	movs	r0, r7
 80045e6:	f7ff ff23 	bl	8004430 <_malloc_r>
 80045ea:	1e06      	subs	r6, r0, #0
 80045ec:	d109      	bne.n	8004602 <__ssputs_r+0x62>
 80045ee:	230c      	movs	r3, #12
 80045f0:	603b      	str	r3, [r7, #0]
 80045f2:	2340      	movs	r3, #64	; 0x40
 80045f4:	2001      	movs	r0, #1
 80045f6:	89a2      	ldrh	r2, [r4, #12]
 80045f8:	4240      	negs	r0, r0
 80045fa:	4313      	orrs	r3, r2
 80045fc:	81a3      	strh	r3, [r4, #12]
 80045fe:	b005      	add	sp, #20
 8004600:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004602:	9a02      	ldr	r2, [sp, #8]
 8004604:	6921      	ldr	r1, [r4, #16]
 8004606:	f7ff fe95 	bl	8004334 <memcpy>
 800460a:	89a3      	ldrh	r3, [r4, #12]
 800460c:	4a14      	ldr	r2, [pc, #80]	; (8004660 <__ssputs_r+0xc0>)
 800460e:	401a      	ands	r2, r3
 8004610:	2380      	movs	r3, #128	; 0x80
 8004612:	4313      	orrs	r3, r2
 8004614:	81a3      	strh	r3, [r4, #12]
 8004616:	9b02      	ldr	r3, [sp, #8]
 8004618:	6126      	str	r6, [r4, #16]
 800461a:	18f6      	adds	r6, r6, r3
 800461c:	6026      	str	r6, [r4, #0]
 800461e:	6165      	str	r5, [r4, #20]
 8004620:	9e01      	ldr	r6, [sp, #4]
 8004622:	1aed      	subs	r5, r5, r3
 8004624:	60a5      	str	r5, [r4, #8]
 8004626:	9b01      	ldr	r3, [sp, #4]
 8004628:	429e      	cmp	r6, r3
 800462a:	d900      	bls.n	800462e <__ssputs_r+0x8e>
 800462c:	9e01      	ldr	r6, [sp, #4]
 800462e:	0032      	movs	r2, r6
 8004630:	9903      	ldr	r1, [sp, #12]
 8004632:	6820      	ldr	r0, [r4, #0]
 8004634:	f000 faa5 	bl	8004b82 <memmove>
 8004638:	68a3      	ldr	r3, [r4, #8]
 800463a:	2000      	movs	r0, #0
 800463c:	1b9b      	subs	r3, r3, r6
 800463e:	60a3      	str	r3, [r4, #8]
 8004640:	6823      	ldr	r3, [r4, #0]
 8004642:	199e      	adds	r6, r3, r6
 8004644:	6026      	str	r6, [r4, #0]
 8004646:	e7da      	b.n	80045fe <__ssputs_r+0x5e>
 8004648:	002a      	movs	r2, r5
 800464a:	0038      	movs	r0, r7
 800464c:	f000 faac 	bl	8004ba8 <_realloc_r>
 8004650:	1e06      	subs	r6, r0, #0
 8004652:	d1e0      	bne.n	8004616 <__ssputs_r+0x76>
 8004654:	0038      	movs	r0, r7
 8004656:	6921      	ldr	r1, [r4, #16]
 8004658:	f7ff fe7e 	bl	8004358 <_free_r>
 800465c:	e7c7      	b.n	80045ee <__ssputs_r+0x4e>
 800465e:	46c0      	nop			; (mov r8, r8)
 8004660:	fffffb7f 	.word	0xfffffb7f

08004664 <_svfiprintf_r>:
 8004664:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004666:	b0a1      	sub	sp, #132	; 0x84
 8004668:	9003      	str	r0, [sp, #12]
 800466a:	001d      	movs	r5, r3
 800466c:	898b      	ldrh	r3, [r1, #12]
 800466e:	000f      	movs	r7, r1
 8004670:	0016      	movs	r6, r2
 8004672:	061b      	lsls	r3, r3, #24
 8004674:	d511      	bpl.n	800469a <_svfiprintf_r+0x36>
 8004676:	690b      	ldr	r3, [r1, #16]
 8004678:	2b00      	cmp	r3, #0
 800467a:	d10e      	bne.n	800469a <_svfiprintf_r+0x36>
 800467c:	2140      	movs	r1, #64	; 0x40
 800467e:	f7ff fed7 	bl	8004430 <_malloc_r>
 8004682:	6038      	str	r0, [r7, #0]
 8004684:	6138      	str	r0, [r7, #16]
 8004686:	2800      	cmp	r0, #0
 8004688:	d105      	bne.n	8004696 <_svfiprintf_r+0x32>
 800468a:	230c      	movs	r3, #12
 800468c:	9a03      	ldr	r2, [sp, #12]
 800468e:	3801      	subs	r0, #1
 8004690:	6013      	str	r3, [r2, #0]
 8004692:	b021      	add	sp, #132	; 0x84
 8004694:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004696:	2340      	movs	r3, #64	; 0x40
 8004698:	617b      	str	r3, [r7, #20]
 800469a:	2300      	movs	r3, #0
 800469c:	ac08      	add	r4, sp, #32
 800469e:	6163      	str	r3, [r4, #20]
 80046a0:	3320      	adds	r3, #32
 80046a2:	7663      	strb	r3, [r4, #25]
 80046a4:	3310      	adds	r3, #16
 80046a6:	76a3      	strb	r3, [r4, #26]
 80046a8:	9507      	str	r5, [sp, #28]
 80046aa:	0035      	movs	r5, r6
 80046ac:	782b      	ldrb	r3, [r5, #0]
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d001      	beq.n	80046b6 <_svfiprintf_r+0x52>
 80046b2:	2b25      	cmp	r3, #37	; 0x25
 80046b4:	d147      	bne.n	8004746 <_svfiprintf_r+0xe2>
 80046b6:	1bab      	subs	r3, r5, r6
 80046b8:	9305      	str	r3, [sp, #20]
 80046ba:	42b5      	cmp	r5, r6
 80046bc:	d00c      	beq.n	80046d8 <_svfiprintf_r+0x74>
 80046be:	0032      	movs	r2, r6
 80046c0:	0039      	movs	r1, r7
 80046c2:	9803      	ldr	r0, [sp, #12]
 80046c4:	f7ff ff6c 	bl	80045a0 <__ssputs_r>
 80046c8:	1c43      	adds	r3, r0, #1
 80046ca:	d100      	bne.n	80046ce <_svfiprintf_r+0x6a>
 80046cc:	e0ae      	b.n	800482c <_svfiprintf_r+0x1c8>
 80046ce:	6962      	ldr	r2, [r4, #20]
 80046d0:	9b05      	ldr	r3, [sp, #20]
 80046d2:	4694      	mov	ip, r2
 80046d4:	4463      	add	r3, ip
 80046d6:	6163      	str	r3, [r4, #20]
 80046d8:	782b      	ldrb	r3, [r5, #0]
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d100      	bne.n	80046e0 <_svfiprintf_r+0x7c>
 80046de:	e0a5      	b.n	800482c <_svfiprintf_r+0x1c8>
 80046e0:	2201      	movs	r2, #1
 80046e2:	2300      	movs	r3, #0
 80046e4:	4252      	negs	r2, r2
 80046e6:	6062      	str	r2, [r4, #4]
 80046e8:	a904      	add	r1, sp, #16
 80046ea:	3254      	adds	r2, #84	; 0x54
 80046ec:	1852      	adds	r2, r2, r1
 80046ee:	1c6e      	adds	r6, r5, #1
 80046f0:	6023      	str	r3, [r4, #0]
 80046f2:	60e3      	str	r3, [r4, #12]
 80046f4:	60a3      	str	r3, [r4, #8]
 80046f6:	7013      	strb	r3, [r2, #0]
 80046f8:	65a3      	str	r3, [r4, #88]	; 0x58
 80046fa:	2205      	movs	r2, #5
 80046fc:	7831      	ldrb	r1, [r6, #0]
 80046fe:	4854      	ldr	r0, [pc, #336]	; (8004850 <_svfiprintf_r+0x1ec>)
 8004700:	f000 fa34 	bl	8004b6c <memchr>
 8004704:	1c75      	adds	r5, r6, #1
 8004706:	2800      	cmp	r0, #0
 8004708:	d11f      	bne.n	800474a <_svfiprintf_r+0xe6>
 800470a:	6822      	ldr	r2, [r4, #0]
 800470c:	06d3      	lsls	r3, r2, #27
 800470e:	d504      	bpl.n	800471a <_svfiprintf_r+0xb6>
 8004710:	2353      	movs	r3, #83	; 0x53
 8004712:	a904      	add	r1, sp, #16
 8004714:	185b      	adds	r3, r3, r1
 8004716:	2120      	movs	r1, #32
 8004718:	7019      	strb	r1, [r3, #0]
 800471a:	0713      	lsls	r3, r2, #28
 800471c:	d504      	bpl.n	8004728 <_svfiprintf_r+0xc4>
 800471e:	2353      	movs	r3, #83	; 0x53
 8004720:	a904      	add	r1, sp, #16
 8004722:	185b      	adds	r3, r3, r1
 8004724:	212b      	movs	r1, #43	; 0x2b
 8004726:	7019      	strb	r1, [r3, #0]
 8004728:	7833      	ldrb	r3, [r6, #0]
 800472a:	2b2a      	cmp	r3, #42	; 0x2a
 800472c:	d016      	beq.n	800475c <_svfiprintf_r+0xf8>
 800472e:	0035      	movs	r5, r6
 8004730:	2100      	movs	r1, #0
 8004732:	200a      	movs	r0, #10
 8004734:	68e3      	ldr	r3, [r4, #12]
 8004736:	782a      	ldrb	r2, [r5, #0]
 8004738:	1c6e      	adds	r6, r5, #1
 800473a:	3a30      	subs	r2, #48	; 0x30
 800473c:	2a09      	cmp	r2, #9
 800473e:	d94e      	bls.n	80047de <_svfiprintf_r+0x17a>
 8004740:	2900      	cmp	r1, #0
 8004742:	d111      	bne.n	8004768 <_svfiprintf_r+0x104>
 8004744:	e017      	b.n	8004776 <_svfiprintf_r+0x112>
 8004746:	3501      	adds	r5, #1
 8004748:	e7b0      	b.n	80046ac <_svfiprintf_r+0x48>
 800474a:	4b41      	ldr	r3, [pc, #260]	; (8004850 <_svfiprintf_r+0x1ec>)
 800474c:	6822      	ldr	r2, [r4, #0]
 800474e:	1ac0      	subs	r0, r0, r3
 8004750:	2301      	movs	r3, #1
 8004752:	4083      	lsls	r3, r0
 8004754:	4313      	orrs	r3, r2
 8004756:	002e      	movs	r6, r5
 8004758:	6023      	str	r3, [r4, #0]
 800475a:	e7ce      	b.n	80046fa <_svfiprintf_r+0x96>
 800475c:	9b07      	ldr	r3, [sp, #28]
 800475e:	1d19      	adds	r1, r3, #4
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	9107      	str	r1, [sp, #28]
 8004764:	2b00      	cmp	r3, #0
 8004766:	db01      	blt.n	800476c <_svfiprintf_r+0x108>
 8004768:	930b      	str	r3, [sp, #44]	; 0x2c
 800476a:	e004      	b.n	8004776 <_svfiprintf_r+0x112>
 800476c:	425b      	negs	r3, r3
 800476e:	60e3      	str	r3, [r4, #12]
 8004770:	2302      	movs	r3, #2
 8004772:	4313      	orrs	r3, r2
 8004774:	6023      	str	r3, [r4, #0]
 8004776:	782b      	ldrb	r3, [r5, #0]
 8004778:	2b2e      	cmp	r3, #46	; 0x2e
 800477a:	d10a      	bne.n	8004792 <_svfiprintf_r+0x12e>
 800477c:	786b      	ldrb	r3, [r5, #1]
 800477e:	2b2a      	cmp	r3, #42	; 0x2a
 8004780:	d135      	bne.n	80047ee <_svfiprintf_r+0x18a>
 8004782:	9b07      	ldr	r3, [sp, #28]
 8004784:	3502      	adds	r5, #2
 8004786:	1d1a      	adds	r2, r3, #4
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	9207      	str	r2, [sp, #28]
 800478c:	2b00      	cmp	r3, #0
 800478e:	db2b      	blt.n	80047e8 <_svfiprintf_r+0x184>
 8004790:	9309      	str	r3, [sp, #36]	; 0x24
 8004792:	4e30      	ldr	r6, [pc, #192]	; (8004854 <_svfiprintf_r+0x1f0>)
 8004794:	2203      	movs	r2, #3
 8004796:	0030      	movs	r0, r6
 8004798:	7829      	ldrb	r1, [r5, #0]
 800479a:	f000 f9e7 	bl	8004b6c <memchr>
 800479e:	2800      	cmp	r0, #0
 80047a0:	d006      	beq.n	80047b0 <_svfiprintf_r+0x14c>
 80047a2:	2340      	movs	r3, #64	; 0x40
 80047a4:	1b80      	subs	r0, r0, r6
 80047a6:	4083      	lsls	r3, r0
 80047a8:	6822      	ldr	r2, [r4, #0]
 80047aa:	3501      	adds	r5, #1
 80047ac:	4313      	orrs	r3, r2
 80047ae:	6023      	str	r3, [r4, #0]
 80047b0:	7829      	ldrb	r1, [r5, #0]
 80047b2:	2206      	movs	r2, #6
 80047b4:	4828      	ldr	r0, [pc, #160]	; (8004858 <_svfiprintf_r+0x1f4>)
 80047b6:	1c6e      	adds	r6, r5, #1
 80047b8:	7621      	strb	r1, [r4, #24]
 80047ba:	f000 f9d7 	bl	8004b6c <memchr>
 80047be:	2800      	cmp	r0, #0
 80047c0:	d03c      	beq.n	800483c <_svfiprintf_r+0x1d8>
 80047c2:	4b26      	ldr	r3, [pc, #152]	; (800485c <_svfiprintf_r+0x1f8>)
 80047c4:	2b00      	cmp	r3, #0
 80047c6:	d125      	bne.n	8004814 <_svfiprintf_r+0x1b0>
 80047c8:	2207      	movs	r2, #7
 80047ca:	9b07      	ldr	r3, [sp, #28]
 80047cc:	3307      	adds	r3, #7
 80047ce:	4393      	bics	r3, r2
 80047d0:	3308      	adds	r3, #8
 80047d2:	9307      	str	r3, [sp, #28]
 80047d4:	6963      	ldr	r3, [r4, #20]
 80047d6:	9a04      	ldr	r2, [sp, #16]
 80047d8:	189b      	adds	r3, r3, r2
 80047da:	6163      	str	r3, [r4, #20]
 80047dc:	e765      	b.n	80046aa <_svfiprintf_r+0x46>
 80047de:	4343      	muls	r3, r0
 80047e0:	0035      	movs	r5, r6
 80047e2:	2101      	movs	r1, #1
 80047e4:	189b      	adds	r3, r3, r2
 80047e6:	e7a6      	b.n	8004736 <_svfiprintf_r+0xd2>
 80047e8:	2301      	movs	r3, #1
 80047ea:	425b      	negs	r3, r3
 80047ec:	e7d0      	b.n	8004790 <_svfiprintf_r+0x12c>
 80047ee:	2300      	movs	r3, #0
 80047f0:	200a      	movs	r0, #10
 80047f2:	001a      	movs	r2, r3
 80047f4:	3501      	adds	r5, #1
 80047f6:	6063      	str	r3, [r4, #4]
 80047f8:	7829      	ldrb	r1, [r5, #0]
 80047fa:	1c6e      	adds	r6, r5, #1
 80047fc:	3930      	subs	r1, #48	; 0x30
 80047fe:	2909      	cmp	r1, #9
 8004800:	d903      	bls.n	800480a <_svfiprintf_r+0x1a6>
 8004802:	2b00      	cmp	r3, #0
 8004804:	d0c5      	beq.n	8004792 <_svfiprintf_r+0x12e>
 8004806:	9209      	str	r2, [sp, #36]	; 0x24
 8004808:	e7c3      	b.n	8004792 <_svfiprintf_r+0x12e>
 800480a:	4342      	muls	r2, r0
 800480c:	0035      	movs	r5, r6
 800480e:	2301      	movs	r3, #1
 8004810:	1852      	adds	r2, r2, r1
 8004812:	e7f1      	b.n	80047f8 <_svfiprintf_r+0x194>
 8004814:	ab07      	add	r3, sp, #28
 8004816:	9300      	str	r3, [sp, #0]
 8004818:	003a      	movs	r2, r7
 800481a:	0021      	movs	r1, r4
 800481c:	4b10      	ldr	r3, [pc, #64]	; (8004860 <_svfiprintf_r+0x1fc>)
 800481e:	9803      	ldr	r0, [sp, #12]
 8004820:	e000      	b.n	8004824 <_svfiprintf_r+0x1c0>
 8004822:	bf00      	nop
 8004824:	9004      	str	r0, [sp, #16]
 8004826:	9b04      	ldr	r3, [sp, #16]
 8004828:	3301      	adds	r3, #1
 800482a:	d1d3      	bne.n	80047d4 <_svfiprintf_r+0x170>
 800482c:	89bb      	ldrh	r3, [r7, #12]
 800482e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004830:	065b      	lsls	r3, r3, #25
 8004832:	d400      	bmi.n	8004836 <_svfiprintf_r+0x1d2>
 8004834:	e72d      	b.n	8004692 <_svfiprintf_r+0x2e>
 8004836:	2001      	movs	r0, #1
 8004838:	4240      	negs	r0, r0
 800483a:	e72a      	b.n	8004692 <_svfiprintf_r+0x2e>
 800483c:	ab07      	add	r3, sp, #28
 800483e:	9300      	str	r3, [sp, #0]
 8004840:	003a      	movs	r2, r7
 8004842:	0021      	movs	r1, r4
 8004844:	4b06      	ldr	r3, [pc, #24]	; (8004860 <_svfiprintf_r+0x1fc>)
 8004846:	9803      	ldr	r0, [sp, #12]
 8004848:	f000 f87c 	bl	8004944 <_printf_i>
 800484c:	e7ea      	b.n	8004824 <_svfiprintf_r+0x1c0>
 800484e:	46c0      	nop			; (mov r8, r8)
 8004850:	080052db 	.word	0x080052db
 8004854:	080052e1 	.word	0x080052e1
 8004858:	080052e5 	.word	0x080052e5
 800485c:	00000000 	.word	0x00000000
 8004860:	080045a1 	.word	0x080045a1

08004864 <_printf_common>:
 8004864:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004866:	0015      	movs	r5, r2
 8004868:	9301      	str	r3, [sp, #4]
 800486a:	688a      	ldr	r2, [r1, #8]
 800486c:	690b      	ldr	r3, [r1, #16]
 800486e:	000c      	movs	r4, r1
 8004870:	9000      	str	r0, [sp, #0]
 8004872:	4293      	cmp	r3, r2
 8004874:	da00      	bge.n	8004878 <_printf_common+0x14>
 8004876:	0013      	movs	r3, r2
 8004878:	0022      	movs	r2, r4
 800487a:	602b      	str	r3, [r5, #0]
 800487c:	3243      	adds	r2, #67	; 0x43
 800487e:	7812      	ldrb	r2, [r2, #0]
 8004880:	2a00      	cmp	r2, #0
 8004882:	d001      	beq.n	8004888 <_printf_common+0x24>
 8004884:	3301      	adds	r3, #1
 8004886:	602b      	str	r3, [r5, #0]
 8004888:	6823      	ldr	r3, [r4, #0]
 800488a:	069b      	lsls	r3, r3, #26
 800488c:	d502      	bpl.n	8004894 <_printf_common+0x30>
 800488e:	682b      	ldr	r3, [r5, #0]
 8004890:	3302      	adds	r3, #2
 8004892:	602b      	str	r3, [r5, #0]
 8004894:	6822      	ldr	r2, [r4, #0]
 8004896:	2306      	movs	r3, #6
 8004898:	0017      	movs	r7, r2
 800489a:	401f      	ands	r7, r3
 800489c:	421a      	tst	r2, r3
 800489e:	d027      	beq.n	80048f0 <_printf_common+0x8c>
 80048a0:	0023      	movs	r3, r4
 80048a2:	3343      	adds	r3, #67	; 0x43
 80048a4:	781b      	ldrb	r3, [r3, #0]
 80048a6:	1e5a      	subs	r2, r3, #1
 80048a8:	4193      	sbcs	r3, r2
 80048aa:	6822      	ldr	r2, [r4, #0]
 80048ac:	0692      	lsls	r2, r2, #26
 80048ae:	d430      	bmi.n	8004912 <_printf_common+0xae>
 80048b0:	0022      	movs	r2, r4
 80048b2:	9901      	ldr	r1, [sp, #4]
 80048b4:	9800      	ldr	r0, [sp, #0]
 80048b6:	9e08      	ldr	r6, [sp, #32]
 80048b8:	3243      	adds	r2, #67	; 0x43
 80048ba:	47b0      	blx	r6
 80048bc:	1c43      	adds	r3, r0, #1
 80048be:	d025      	beq.n	800490c <_printf_common+0xa8>
 80048c0:	2306      	movs	r3, #6
 80048c2:	6820      	ldr	r0, [r4, #0]
 80048c4:	682a      	ldr	r2, [r5, #0]
 80048c6:	68e1      	ldr	r1, [r4, #12]
 80048c8:	2500      	movs	r5, #0
 80048ca:	4003      	ands	r3, r0
 80048cc:	2b04      	cmp	r3, #4
 80048ce:	d103      	bne.n	80048d8 <_printf_common+0x74>
 80048d0:	1a8d      	subs	r5, r1, r2
 80048d2:	43eb      	mvns	r3, r5
 80048d4:	17db      	asrs	r3, r3, #31
 80048d6:	401d      	ands	r5, r3
 80048d8:	68a3      	ldr	r3, [r4, #8]
 80048da:	6922      	ldr	r2, [r4, #16]
 80048dc:	4293      	cmp	r3, r2
 80048de:	dd01      	ble.n	80048e4 <_printf_common+0x80>
 80048e0:	1a9b      	subs	r3, r3, r2
 80048e2:	18ed      	adds	r5, r5, r3
 80048e4:	2700      	movs	r7, #0
 80048e6:	42bd      	cmp	r5, r7
 80048e8:	d120      	bne.n	800492c <_printf_common+0xc8>
 80048ea:	2000      	movs	r0, #0
 80048ec:	e010      	b.n	8004910 <_printf_common+0xac>
 80048ee:	3701      	adds	r7, #1
 80048f0:	68e3      	ldr	r3, [r4, #12]
 80048f2:	682a      	ldr	r2, [r5, #0]
 80048f4:	1a9b      	subs	r3, r3, r2
 80048f6:	42bb      	cmp	r3, r7
 80048f8:	ddd2      	ble.n	80048a0 <_printf_common+0x3c>
 80048fa:	0022      	movs	r2, r4
 80048fc:	2301      	movs	r3, #1
 80048fe:	9901      	ldr	r1, [sp, #4]
 8004900:	9800      	ldr	r0, [sp, #0]
 8004902:	9e08      	ldr	r6, [sp, #32]
 8004904:	3219      	adds	r2, #25
 8004906:	47b0      	blx	r6
 8004908:	1c43      	adds	r3, r0, #1
 800490a:	d1f0      	bne.n	80048ee <_printf_common+0x8a>
 800490c:	2001      	movs	r0, #1
 800490e:	4240      	negs	r0, r0
 8004910:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004912:	2030      	movs	r0, #48	; 0x30
 8004914:	18e1      	adds	r1, r4, r3
 8004916:	3143      	adds	r1, #67	; 0x43
 8004918:	7008      	strb	r0, [r1, #0]
 800491a:	0021      	movs	r1, r4
 800491c:	1c5a      	adds	r2, r3, #1
 800491e:	3145      	adds	r1, #69	; 0x45
 8004920:	7809      	ldrb	r1, [r1, #0]
 8004922:	18a2      	adds	r2, r4, r2
 8004924:	3243      	adds	r2, #67	; 0x43
 8004926:	3302      	adds	r3, #2
 8004928:	7011      	strb	r1, [r2, #0]
 800492a:	e7c1      	b.n	80048b0 <_printf_common+0x4c>
 800492c:	0022      	movs	r2, r4
 800492e:	2301      	movs	r3, #1
 8004930:	9901      	ldr	r1, [sp, #4]
 8004932:	9800      	ldr	r0, [sp, #0]
 8004934:	9e08      	ldr	r6, [sp, #32]
 8004936:	321a      	adds	r2, #26
 8004938:	47b0      	blx	r6
 800493a:	1c43      	adds	r3, r0, #1
 800493c:	d0e6      	beq.n	800490c <_printf_common+0xa8>
 800493e:	3701      	adds	r7, #1
 8004940:	e7d1      	b.n	80048e6 <_printf_common+0x82>
	...

08004944 <_printf_i>:
 8004944:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004946:	b08b      	sub	sp, #44	; 0x2c
 8004948:	9206      	str	r2, [sp, #24]
 800494a:	000a      	movs	r2, r1
 800494c:	3243      	adds	r2, #67	; 0x43
 800494e:	9307      	str	r3, [sp, #28]
 8004950:	9005      	str	r0, [sp, #20]
 8004952:	9204      	str	r2, [sp, #16]
 8004954:	7e0a      	ldrb	r2, [r1, #24]
 8004956:	000c      	movs	r4, r1
 8004958:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800495a:	2a78      	cmp	r2, #120	; 0x78
 800495c:	d807      	bhi.n	800496e <_printf_i+0x2a>
 800495e:	2a62      	cmp	r2, #98	; 0x62
 8004960:	d809      	bhi.n	8004976 <_printf_i+0x32>
 8004962:	2a00      	cmp	r2, #0
 8004964:	d100      	bne.n	8004968 <_printf_i+0x24>
 8004966:	e0c1      	b.n	8004aec <_printf_i+0x1a8>
 8004968:	2a58      	cmp	r2, #88	; 0x58
 800496a:	d100      	bne.n	800496e <_printf_i+0x2a>
 800496c:	e08c      	b.n	8004a88 <_printf_i+0x144>
 800496e:	0026      	movs	r6, r4
 8004970:	3642      	adds	r6, #66	; 0x42
 8004972:	7032      	strb	r2, [r6, #0]
 8004974:	e022      	b.n	80049bc <_printf_i+0x78>
 8004976:	0010      	movs	r0, r2
 8004978:	3863      	subs	r0, #99	; 0x63
 800497a:	2815      	cmp	r0, #21
 800497c:	d8f7      	bhi.n	800496e <_printf_i+0x2a>
 800497e:	f7fb fbd5 	bl	800012c <__gnu_thumb1_case_shi>
 8004982:	0016      	.short	0x0016
 8004984:	fff6001f 	.word	0xfff6001f
 8004988:	fff6fff6 	.word	0xfff6fff6
 800498c:	001ffff6 	.word	0x001ffff6
 8004990:	fff6fff6 	.word	0xfff6fff6
 8004994:	fff6fff6 	.word	0xfff6fff6
 8004998:	003600a8 	.word	0x003600a8
 800499c:	fff6009a 	.word	0xfff6009a
 80049a0:	00b9fff6 	.word	0x00b9fff6
 80049a4:	0036fff6 	.word	0x0036fff6
 80049a8:	fff6fff6 	.word	0xfff6fff6
 80049ac:	009e      	.short	0x009e
 80049ae:	0026      	movs	r6, r4
 80049b0:	681a      	ldr	r2, [r3, #0]
 80049b2:	3642      	adds	r6, #66	; 0x42
 80049b4:	1d11      	adds	r1, r2, #4
 80049b6:	6019      	str	r1, [r3, #0]
 80049b8:	6813      	ldr	r3, [r2, #0]
 80049ba:	7033      	strb	r3, [r6, #0]
 80049bc:	2301      	movs	r3, #1
 80049be:	e0a7      	b.n	8004b10 <_printf_i+0x1cc>
 80049c0:	6808      	ldr	r0, [r1, #0]
 80049c2:	6819      	ldr	r1, [r3, #0]
 80049c4:	1d0a      	adds	r2, r1, #4
 80049c6:	0605      	lsls	r5, r0, #24
 80049c8:	d50b      	bpl.n	80049e2 <_printf_i+0x9e>
 80049ca:	680d      	ldr	r5, [r1, #0]
 80049cc:	601a      	str	r2, [r3, #0]
 80049ce:	2d00      	cmp	r5, #0
 80049d0:	da03      	bge.n	80049da <_printf_i+0x96>
 80049d2:	232d      	movs	r3, #45	; 0x2d
 80049d4:	9a04      	ldr	r2, [sp, #16]
 80049d6:	426d      	negs	r5, r5
 80049d8:	7013      	strb	r3, [r2, #0]
 80049da:	4b61      	ldr	r3, [pc, #388]	; (8004b60 <_printf_i+0x21c>)
 80049dc:	270a      	movs	r7, #10
 80049de:	9303      	str	r3, [sp, #12]
 80049e0:	e01b      	b.n	8004a1a <_printf_i+0xd6>
 80049e2:	680d      	ldr	r5, [r1, #0]
 80049e4:	601a      	str	r2, [r3, #0]
 80049e6:	0641      	lsls	r1, r0, #25
 80049e8:	d5f1      	bpl.n	80049ce <_printf_i+0x8a>
 80049ea:	b22d      	sxth	r5, r5
 80049ec:	e7ef      	b.n	80049ce <_printf_i+0x8a>
 80049ee:	680d      	ldr	r5, [r1, #0]
 80049f0:	6819      	ldr	r1, [r3, #0]
 80049f2:	1d08      	adds	r0, r1, #4
 80049f4:	6018      	str	r0, [r3, #0]
 80049f6:	062e      	lsls	r6, r5, #24
 80049f8:	d501      	bpl.n	80049fe <_printf_i+0xba>
 80049fa:	680d      	ldr	r5, [r1, #0]
 80049fc:	e003      	b.n	8004a06 <_printf_i+0xc2>
 80049fe:	066d      	lsls	r5, r5, #25
 8004a00:	d5fb      	bpl.n	80049fa <_printf_i+0xb6>
 8004a02:	680d      	ldr	r5, [r1, #0]
 8004a04:	b2ad      	uxth	r5, r5
 8004a06:	4b56      	ldr	r3, [pc, #344]	; (8004b60 <_printf_i+0x21c>)
 8004a08:	2708      	movs	r7, #8
 8004a0a:	9303      	str	r3, [sp, #12]
 8004a0c:	2a6f      	cmp	r2, #111	; 0x6f
 8004a0e:	d000      	beq.n	8004a12 <_printf_i+0xce>
 8004a10:	3702      	adds	r7, #2
 8004a12:	0023      	movs	r3, r4
 8004a14:	2200      	movs	r2, #0
 8004a16:	3343      	adds	r3, #67	; 0x43
 8004a18:	701a      	strb	r2, [r3, #0]
 8004a1a:	6863      	ldr	r3, [r4, #4]
 8004a1c:	60a3      	str	r3, [r4, #8]
 8004a1e:	2b00      	cmp	r3, #0
 8004a20:	db03      	blt.n	8004a2a <_printf_i+0xe6>
 8004a22:	2204      	movs	r2, #4
 8004a24:	6821      	ldr	r1, [r4, #0]
 8004a26:	4391      	bics	r1, r2
 8004a28:	6021      	str	r1, [r4, #0]
 8004a2a:	2d00      	cmp	r5, #0
 8004a2c:	d102      	bne.n	8004a34 <_printf_i+0xf0>
 8004a2e:	9e04      	ldr	r6, [sp, #16]
 8004a30:	2b00      	cmp	r3, #0
 8004a32:	d00c      	beq.n	8004a4e <_printf_i+0x10a>
 8004a34:	9e04      	ldr	r6, [sp, #16]
 8004a36:	0028      	movs	r0, r5
 8004a38:	0039      	movs	r1, r7
 8004a3a:	f7fb fc07 	bl	800024c <__aeabi_uidivmod>
 8004a3e:	9b03      	ldr	r3, [sp, #12]
 8004a40:	3e01      	subs	r6, #1
 8004a42:	5c5b      	ldrb	r3, [r3, r1]
 8004a44:	7033      	strb	r3, [r6, #0]
 8004a46:	002b      	movs	r3, r5
 8004a48:	0005      	movs	r5, r0
 8004a4a:	429f      	cmp	r7, r3
 8004a4c:	d9f3      	bls.n	8004a36 <_printf_i+0xf2>
 8004a4e:	2f08      	cmp	r7, #8
 8004a50:	d109      	bne.n	8004a66 <_printf_i+0x122>
 8004a52:	6823      	ldr	r3, [r4, #0]
 8004a54:	07db      	lsls	r3, r3, #31
 8004a56:	d506      	bpl.n	8004a66 <_printf_i+0x122>
 8004a58:	6863      	ldr	r3, [r4, #4]
 8004a5a:	6922      	ldr	r2, [r4, #16]
 8004a5c:	4293      	cmp	r3, r2
 8004a5e:	dc02      	bgt.n	8004a66 <_printf_i+0x122>
 8004a60:	2330      	movs	r3, #48	; 0x30
 8004a62:	3e01      	subs	r6, #1
 8004a64:	7033      	strb	r3, [r6, #0]
 8004a66:	9b04      	ldr	r3, [sp, #16]
 8004a68:	1b9b      	subs	r3, r3, r6
 8004a6a:	6123      	str	r3, [r4, #16]
 8004a6c:	9b07      	ldr	r3, [sp, #28]
 8004a6e:	0021      	movs	r1, r4
 8004a70:	9300      	str	r3, [sp, #0]
 8004a72:	9805      	ldr	r0, [sp, #20]
 8004a74:	9b06      	ldr	r3, [sp, #24]
 8004a76:	aa09      	add	r2, sp, #36	; 0x24
 8004a78:	f7ff fef4 	bl	8004864 <_printf_common>
 8004a7c:	1c43      	adds	r3, r0, #1
 8004a7e:	d14c      	bne.n	8004b1a <_printf_i+0x1d6>
 8004a80:	2001      	movs	r0, #1
 8004a82:	4240      	negs	r0, r0
 8004a84:	b00b      	add	sp, #44	; 0x2c
 8004a86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a88:	3145      	adds	r1, #69	; 0x45
 8004a8a:	700a      	strb	r2, [r1, #0]
 8004a8c:	4a34      	ldr	r2, [pc, #208]	; (8004b60 <_printf_i+0x21c>)
 8004a8e:	9203      	str	r2, [sp, #12]
 8004a90:	681a      	ldr	r2, [r3, #0]
 8004a92:	6821      	ldr	r1, [r4, #0]
 8004a94:	ca20      	ldmia	r2!, {r5}
 8004a96:	601a      	str	r2, [r3, #0]
 8004a98:	0608      	lsls	r0, r1, #24
 8004a9a:	d516      	bpl.n	8004aca <_printf_i+0x186>
 8004a9c:	07cb      	lsls	r3, r1, #31
 8004a9e:	d502      	bpl.n	8004aa6 <_printf_i+0x162>
 8004aa0:	2320      	movs	r3, #32
 8004aa2:	4319      	orrs	r1, r3
 8004aa4:	6021      	str	r1, [r4, #0]
 8004aa6:	2710      	movs	r7, #16
 8004aa8:	2d00      	cmp	r5, #0
 8004aaa:	d1b2      	bne.n	8004a12 <_printf_i+0xce>
 8004aac:	2320      	movs	r3, #32
 8004aae:	6822      	ldr	r2, [r4, #0]
 8004ab0:	439a      	bics	r2, r3
 8004ab2:	6022      	str	r2, [r4, #0]
 8004ab4:	e7ad      	b.n	8004a12 <_printf_i+0xce>
 8004ab6:	2220      	movs	r2, #32
 8004ab8:	6809      	ldr	r1, [r1, #0]
 8004aba:	430a      	orrs	r2, r1
 8004abc:	6022      	str	r2, [r4, #0]
 8004abe:	0022      	movs	r2, r4
 8004ac0:	2178      	movs	r1, #120	; 0x78
 8004ac2:	3245      	adds	r2, #69	; 0x45
 8004ac4:	7011      	strb	r1, [r2, #0]
 8004ac6:	4a27      	ldr	r2, [pc, #156]	; (8004b64 <_printf_i+0x220>)
 8004ac8:	e7e1      	b.n	8004a8e <_printf_i+0x14a>
 8004aca:	0648      	lsls	r0, r1, #25
 8004acc:	d5e6      	bpl.n	8004a9c <_printf_i+0x158>
 8004ace:	b2ad      	uxth	r5, r5
 8004ad0:	e7e4      	b.n	8004a9c <_printf_i+0x158>
 8004ad2:	681a      	ldr	r2, [r3, #0]
 8004ad4:	680d      	ldr	r5, [r1, #0]
 8004ad6:	1d10      	adds	r0, r2, #4
 8004ad8:	6949      	ldr	r1, [r1, #20]
 8004ada:	6018      	str	r0, [r3, #0]
 8004adc:	6813      	ldr	r3, [r2, #0]
 8004ade:	062e      	lsls	r6, r5, #24
 8004ae0:	d501      	bpl.n	8004ae6 <_printf_i+0x1a2>
 8004ae2:	6019      	str	r1, [r3, #0]
 8004ae4:	e002      	b.n	8004aec <_printf_i+0x1a8>
 8004ae6:	066d      	lsls	r5, r5, #25
 8004ae8:	d5fb      	bpl.n	8004ae2 <_printf_i+0x19e>
 8004aea:	8019      	strh	r1, [r3, #0]
 8004aec:	2300      	movs	r3, #0
 8004aee:	9e04      	ldr	r6, [sp, #16]
 8004af0:	6123      	str	r3, [r4, #16]
 8004af2:	e7bb      	b.n	8004a6c <_printf_i+0x128>
 8004af4:	681a      	ldr	r2, [r3, #0]
 8004af6:	1d11      	adds	r1, r2, #4
 8004af8:	6019      	str	r1, [r3, #0]
 8004afa:	6816      	ldr	r6, [r2, #0]
 8004afc:	2100      	movs	r1, #0
 8004afe:	0030      	movs	r0, r6
 8004b00:	6862      	ldr	r2, [r4, #4]
 8004b02:	f000 f833 	bl	8004b6c <memchr>
 8004b06:	2800      	cmp	r0, #0
 8004b08:	d001      	beq.n	8004b0e <_printf_i+0x1ca>
 8004b0a:	1b80      	subs	r0, r0, r6
 8004b0c:	6060      	str	r0, [r4, #4]
 8004b0e:	6863      	ldr	r3, [r4, #4]
 8004b10:	6123      	str	r3, [r4, #16]
 8004b12:	2300      	movs	r3, #0
 8004b14:	9a04      	ldr	r2, [sp, #16]
 8004b16:	7013      	strb	r3, [r2, #0]
 8004b18:	e7a8      	b.n	8004a6c <_printf_i+0x128>
 8004b1a:	6923      	ldr	r3, [r4, #16]
 8004b1c:	0032      	movs	r2, r6
 8004b1e:	9906      	ldr	r1, [sp, #24]
 8004b20:	9805      	ldr	r0, [sp, #20]
 8004b22:	9d07      	ldr	r5, [sp, #28]
 8004b24:	47a8      	blx	r5
 8004b26:	1c43      	adds	r3, r0, #1
 8004b28:	d0aa      	beq.n	8004a80 <_printf_i+0x13c>
 8004b2a:	6823      	ldr	r3, [r4, #0]
 8004b2c:	079b      	lsls	r3, r3, #30
 8004b2e:	d415      	bmi.n	8004b5c <_printf_i+0x218>
 8004b30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b32:	68e0      	ldr	r0, [r4, #12]
 8004b34:	4298      	cmp	r0, r3
 8004b36:	daa5      	bge.n	8004a84 <_printf_i+0x140>
 8004b38:	0018      	movs	r0, r3
 8004b3a:	e7a3      	b.n	8004a84 <_printf_i+0x140>
 8004b3c:	0022      	movs	r2, r4
 8004b3e:	2301      	movs	r3, #1
 8004b40:	9906      	ldr	r1, [sp, #24]
 8004b42:	9805      	ldr	r0, [sp, #20]
 8004b44:	9e07      	ldr	r6, [sp, #28]
 8004b46:	3219      	adds	r2, #25
 8004b48:	47b0      	blx	r6
 8004b4a:	1c43      	adds	r3, r0, #1
 8004b4c:	d098      	beq.n	8004a80 <_printf_i+0x13c>
 8004b4e:	3501      	adds	r5, #1
 8004b50:	68e3      	ldr	r3, [r4, #12]
 8004b52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004b54:	1a9b      	subs	r3, r3, r2
 8004b56:	42ab      	cmp	r3, r5
 8004b58:	dcf0      	bgt.n	8004b3c <_printf_i+0x1f8>
 8004b5a:	e7e9      	b.n	8004b30 <_printf_i+0x1ec>
 8004b5c:	2500      	movs	r5, #0
 8004b5e:	e7f7      	b.n	8004b50 <_printf_i+0x20c>
 8004b60:	080052ec 	.word	0x080052ec
 8004b64:	080052fd 	.word	0x080052fd

08004b68 <__retarget_lock_acquire_recursive>:
 8004b68:	4770      	bx	lr

08004b6a <__retarget_lock_release_recursive>:
 8004b6a:	4770      	bx	lr

08004b6c <memchr>:
 8004b6c:	b2c9      	uxtb	r1, r1
 8004b6e:	1882      	adds	r2, r0, r2
 8004b70:	4290      	cmp	r0, r2
 8004b72:	d101      	bne.n	8004b78 <memchr+0xc>
 8004b74:	2000      	movs	r0, #0
 8004b76:	4770      	bx	lr
 8004b78:	7803      	ldrb	r3, [r0, #0]
 8004b7a:	428b      	cmp	r3, r1
 8004b7c:	d0fb      	beq.n	8004b76 <memchr+0xa>
 8004b7e:	3001      	adds	r0, #1
 8004b80:	e7f6      	b.n	8004b70 <memchr+0x4>

08004b82 <memmove>:
 8004b82:	b510      	push	{r4, lr}
 8004b84:	4288      	cmp	r0, r1
 8004b86:	d902      	bls.n	8004b8e <memmove+0xc>
 8004b88:	188b      	adds	r3, r1, r2
 8004b8a:	4298      	cmp	r0, r3
 8004b8c:	d303      	bcc.n	8004b96 <memmove+0x14>
 8004b8e:	2300      	movs	r3, #0
 8004b90:	e007      	b.n	8004ba2 <memmove+0x20>
 8004b92:	5c8b      	ldrb	r3, [r1, r2]
 8004b94:	5483      	strb	r3, [r0, r2]
 8004b96:	3a01      	subs	r2, #1
 8004b98:	d2fb      	bcs.n	8004b92 <memmove+0x10>
 8004b9a:	bd10      	pop	{r4, pc}
 8004b9c:	5ccc      	ldrb	r4, [r1, r3]
 8004b9e:	54c4      	strb	r4, [r0, r3]
 8004ba0:	3301      	adds	r3, #1
 8004ba2:	429a      	cmp	r2, r3
 8004ba4:	d1fa      	bne.n	8004b9c <memmove+0x1a>
 8004ba6:	e7f8      	b.n	8004b9a <memmove+0x18>

08004ba8 <_realloc_r>:
 8004ba8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004baa:	0007      	movs	r7, r0
 8004bac:	000e      	movs	r6, r1
 8004bae:	0014      	movs	r4, r2
 8004bb0:	2900      	cmp	r1, #0
 8004bb2:	d105      	bne.n	8004bc0 <_realloc_r+0x18>
 8004bb4:	0011      	movs	r1, r2
 8004bb6:	f7ff fc3b 	bl	8004430 <_malloc_r>
 8004bba:	0005      	movs	r5, r0
 8004bbc:	0028      	movs	r0, r5
 8004bbe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004bc0:	2a00      	cmp	r2, #0
 8004bc2:	d103      	bne.n	8004bcc <_realloc_r+0x24>
 8004bc4:	f7ff fbc8 	bl	8004358 <_free_r>
 8004bc8:	0025      	movs	r5, r4
 8004bca:	e7f7      	b.n	8004bbc <_realloc_r+0x14>
 8004bcc:	f000 f81b 	bl	8004c06 <_malloc_usable_size_r>
 8004bd0:	9001      	str	r0, [sp, #4]
 8004bd2:	4284      	cmp	r4, r0
 8004bd4:	d803      	bhi.n	8004bde <_realloc_r+0x36>
 8004bd6:	0035      	movs	r5, r6
 8004bd8:	0843      	lsrs	r3, r0, #1
 8004bda:	42a3      	cmp	r3, r4
 8004bdc:	d3ee      	bcc.n	8004bbc <_realloc_r+0x14>
 8004bde:	0021      	movs	r1, r4
 8004be0:	0038      	movs	r0, r7
 8004be2:	f7ff fc25 	bl	8004430 <_malloc_r>
 8004be6:	1e05      	subs	r5, r0, #0
 8004be8:	d0e8      	beq.n	8004bbc <_realloc_r+0x14>
 8004bea:	9b01      	ldr	r3, [sp, #4]
 8004bec:	0022      	movs	r2, r4
 8004bee:	429c      	cmp	r4, r3
 8004bf0:	d900      	bls.n	8004bf4 <_realloc_r+0x4c>
 8004bf2:	001a      	movs	r2, r3
 8004bf4:	0031      	movs	r1, r6
 8004bf6:	0028      	movs	r0, r5
 8004bf8:	f7ff fb9c 	bl	8004334 <memcpy>
 8004bfc:	0031      	movs	r1, r6
 8004bfe:	0038      	movs	r0, r7
 8004c00:	f7ff fbaa 	bl	8004358 <_free_r>
 8004c04:	e7da      	b.n	8004bbc <_realloc_r+0x14>

08004c06 <_malloc_usable_size_r>:
 8004c06:	1f0b      	subs	r3, r1, #4
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	1f18      	subs	r0, r3, #4
 8004c0c:	2b00      	cmp	r3, #0
 8004c0e:	da01      	bge.n	8004c14 <_malloc_usable_size_r+0xe>
 8004c10:	580b      	ldr	r3, [r1, r0]
 8004c12:	18c0      	adds	r0, r0, r3
 8004c14:	4770      	bx	lr
	...

08004c18 <_init>:
 8004c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c1a:	46c0      	nop			; (mov r8, r8)
 8004c1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c1e:	bc08      	pop	{r3}
 8004c20:	469e      	mov	lr, r3
 8004c22:	4770      	bx	lr

08004c24 <_fini>:
 8004c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c26:	46c0      	nop			; (mov r8, r8)
 8004c28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c2a:	bc08      	pop	{r3}
 8004c2c:	469e      	mov	lr, r3
 8004c2e:	4770      	bx	lr
